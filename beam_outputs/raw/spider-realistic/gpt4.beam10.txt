SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;
SELECT Name, Country, Age FROM singer ORDER BY Age DESC;

SELECT AVG(Age) as Average_Age, MIN(Age) as Minimum_Age, MAX(Age) as Maximum_Age FROM singer WHERE Country = 'France';
SELECT AVG(Age) as average_age, MIN(Age) as minimum_age, MAX(Age) as maximum_age FROM singer WHERE Country = 'France';
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France';
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France';
SELECT AVG(Age) AS AverageAge, MIN(Age) AS MinAge, MAX(Age) as MaxAge FROM singer WHERE Country = 'France';
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France';
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'France';
SELECT AVG(Age) as Average_Age, MIN(Age) as Minimum_Age, MAX(Age) as Maximum_Age FROM singer WHERE Country = 'France';
SELECT AVG(Age) as Average_Age, MIN(Age) as Minimum_Age, MAX(Age) as Maximum_Age FROM singer WHERE Country='France';
SELECT AVG(Age) AS average_age, MIN(Age) AS minimum_age, MAX(Age) AS maximum_age FROM singer WHERE Country = 'France';

SELECT AVG(Age) as Average_Age, MIN(Age) as Min_Age, MAX(Age) as Max_Age FROM singer WHERE Country = 'French';
SELECT AVG(Age) as Average_Age, MIN(Age) as Minimum_Age, MAX(Age) as Maximum_Age FROM singer WHERE Country = 'French';
SELECT AVG(Age) as Average_Age, MIN(Age) as Minimum_Age, MAX(Age) as Maximum_Age FROM singer WHERE Country = 'French';
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Minimum_Age, MAX(Age) AS Maximum_Age FROM singer WHERE Country = 'French';
SELECT AVG(Age) as Average_Age, MIN(Age) as Minimum_Age, MAX(Age) as Maximum_Age FROM singer WHERE Country = 'French';
SELECT AVG(Age) as average_age, MIN(Age) as minimum_age, MAX(Age) as maximum_age FROM singer WHERE Country = 'France';
SELECT AVG(Age) as Average_Age, MIN(Age) as Minimum_Age, MAX(Age) as Maximum_Age FROM singer WHERE Country = 'French';
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Min_Age, MAX(Age) AS Max_Age FROM singer WHERE Country = 'France';
SELECT AVG(Age) AS Average_Age, MIN(Age) AS Min_Age, MAX(Age) AS Max_Age FROM singer WHERE Country = 'France';
SELECT AVG(Age) as Average_Age, MIN(Age) as Minimum_Age, MAX(Age) as Maximum_Age FROM singer WHERE Country = 'French';

SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Age = (SELECT MIN(Age) FROM singer);
SELECT song_name, song_release_year FROM singer WHERE age = ( SELECT MIN(age) FROM singer);
SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Age = (SELECT MIN(Age) FROM singer);
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);

SELECT Name, Song_release_year FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Name, Song_release_year FROM singer WHERE Age = ( SELECT MIN(Age) FROM singer );
SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT Song_Name, Song_release_year FROM singer WHERE Age = (SELECT MIN(Age) FROM singer);
SELECT s.Song_Name, s.Song_release_year FROM singer s WHERE s.Age = ( SELECT MIN(Age) FROM singer );

SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;

SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;
SELECT DISTINCT Country FROM singer WHERE Age > 20;

SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(Singer_ID) AS NumberOfSingers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(Singer_ID) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Total_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country;

SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS Num_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country;

SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT s.Song_Name FROM singer s WHERE s.Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT s.Song_Name FROM singer s WHERE s.Age > (SELECT AVG(Age) FROM singer);
SELECT s.Song_Name FROM singer s WHERE s.Age > (SELECT AVG(Age) FROM singer);
SELECT s.Song_Name FROM singer s WHERE s.Age > (SELECT AVG(Age) FROM singer);
SELECT s.Song_Name FROM singer s WHERE s.Age > (SELECT AVG(Age) FROM singer);
SELECT DISTINCT s.Song_Name FROM singer s WHERE s.Age > (SELECT AVG(Age) FROM singer);
SELECT s.Song_Name FROM singer s WHERE s.Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);

SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT DISTINCT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT DISTINCT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT s.Song_Name FROM singer s WHERE s.Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);
SELECT Song_Name FROM singer WHERE Age > (SELECT AVG(Age) FROM singer);

SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;

SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;

SELECT COUNT(concert_ID) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);

SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);
SELECT COUNT(*) FROM concert WHERE Year IN (2014, 2015);

SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Name, s.Capacity ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium AS s JOIN concert AS c ON c.Stadium_ID = s.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Stadium_ID, s.Name, s.Capacity ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Name, s.Capacity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID WHERE concert.Year >= 2014 GROUP BY stadium.Stadium_ID, stadium.Name, stadium.Capacity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s INNER JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Stadium_ID, s.Name, s.Capacity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Stadium_ID, s.Name, s.Capacity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Name, s.Capacity ORDER BY COUNT(c.Stadium_ID) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Stadium_ID ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;
SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year >= 2014 GROUP BY stadium.Stadium_ID ORDER BY COUNT(concert.concert_ID) DESC LIMIT 1;

SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON c.Stadium_ID = s.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID, s.Name, s.Capacity ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s INNER JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID, s.Name, s.Capacity ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Name, s.Capacity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year > 2013 GROUP BY stadium.Stadium_ID, stadium.Name, stadium.Capacity ORDER BY COUNT(concert.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium AS s JOIN concert AS c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1;
SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year > 2013 GROUP BY stadium.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID, s.Name, s.Capacity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s INNER JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID, s.Name, s.Capacity ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;

SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT DISTINCT Stadium_ID FROM concert);
SELECT s.Name FROM stadium s LEFT JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.concert_ID IS NULL;
SELECT Name FROM stadium WHERE Stadium_ID NOT IN ( SELECT Stadium_ID FROM concert );
SELECT s.Name FROM stadium s LEFT JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Stadium_ID IS NULL;
SELECT s.Name FROM stadium s WHERE NOT EXISTS (SELECT 1 FROM concert c WHERE c.Stadium_ID = s.Stadium_ID);
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT Name FROM stadium WHERE Stadium_ID NOT IN ( SELECT Stadium_ID FROM concert );
SELECT Name FROM stadium WHERE Stadium_ID NOT IN ( SELECT Stadium_ID FROM concert );
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);

SELECT Name FROM stadium WHERE Stadium_ID NOT IN ( SELECT Stadium_ID FROM concert );
SELECT s.Name FROM stadium s LEFT JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.concert_ID IS NULL;
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT s.Name FROM stadium s LEFT JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.concert_ID IS NULL;
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);

SELECT DISTINCT Country FROM singer WHERE Age > 40 OR Age < 30;
SELECT DISTINCT s.Country FROM singer s INNER JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID WHERE s.Age > 40 OR s.Age < 30;
SELECT DISTINCT Country FROM singer WHERE Age > 40 OR Age < 30;
SELECT DISTINCT Country FROM singer WHERE Age > 40 OR Age < 30;
SELECT DISTINCT s1.Country FROM singer s1 JOIN singer s2 ON s1.Country = s2.Country WHERE s1.Age > 40 AND s2.Age < 30;
SELECT DISTINCT s.Country FROM singer AS s WHERE s.Age > 40 OR s.Age < 30;
SELECT DISTINCT s1.Country FROM singer s1 JOIN singer s2 ON s1.Country = s2.Country WHERE s1.Age > 40 AND s2.Age < 30;
SELECT DISTINCT s1.Country FROM singer s1 JOIN singer s2 ON s1.Country = s2.Country WHERE s1.Age > 40 AND s2.Age < 30;
SELECT DISTINCT Country FROM singer WHERE Age > 40 OR Age < 30;
SELECT DISTINCT Country FROM singer WHERE Age > 40 OR Age < 30;

SELECT DISTINCT s.Name FROM stadium s WHERE s.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014);
SELECT Name FROM stadium WHERE Stadium_ID NOT IN ( SELECT Stadium_ID FROM concert WHERE Year = 2014 );
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014);
SELECT s.Name FROM stadium s WHERE s.Stadium_ID NOT IN (SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014);
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014);
SELECT Name FROM stadium WHERE Stadium_ID NOT IN ( SELECT Stadium_ID FROM concert WHERE Year = 2014 );
SELECT s.Name FROM stadium s WHERE s.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014 ) ```;
SELECT s.Name FROM stadium s WHERE s.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014 );
SELECT DISTINCT s.Name FROM stadium s WHERE s.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014 );
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014);

SELECT Name FROM stadium WHERE Stadium_ID NOT IN ( SELECT Stadium_ID FROM concert WHERE Year = 2014 );
SELECT Name FROM stadium WHERE Stadium_ID NOT IN ( SELECT Stadium_ID FROM concert WHERE Year = 2014 );
SELECT s.Name FROM stadium s WHERE s.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014 );
SELECT Name FROM stadium WHERE Stadium_ID NOT IN ( SELECT Stadium_ID FROM concert WHERE Year = 2014 );
SELECT Name FROM stadium WHERE Stadium_ID NOT IN ( SELECT Stadium_ID FROM concert WHERE Year = 2014 );
SELECT s.Name FROM stadium s WHERE s.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014 );
SELECT Name FROM stadium WHERE Stadium_ID NOT IN ( SELECT Stadium_ID FROM concert WHERE Year = 2014);
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014);
SELECT s.Name FROM stadium s WHERE s.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014 );
SELECT Name FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert WHERE Year = 2014);

SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) as ‘Number_of_Singers’ FROM concert c JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_Name, c.Theme.;
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) as Number_of_Singers FROM concert c JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_Name, c.Theme;
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) as number_of_singers FROM concert c JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_ID, c.concert_Name, c.Theme;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) as Number_of_Singers FROM concert LEFT JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme;
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) as num_singers FROM concert c LEFT JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_ID, c.concert_Name, c.Theme;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) as NumberOfSingers FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_Name, concert.Theme;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) AS Number_of_Singers FROM concert LEFT JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) as Number_of_Singers FROM concert LEFT JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) AS number_of_singers FROM concert LEFT JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme;
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) as 'Number_of_Singers' FROM concert c JOIN singer_in_concert sic ON sic.concert_ID = c.concert_ID GROUP BY c.concert_ID, c.concert_Name, c.Theme;

SELECT s.Name, COUNT(c.concert_ID) as NumberOfConcerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID GROUP BY s.Name;
SELECT s.Name, COUNT(sic.concert_ID) as NumberOfConcerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID GROUP BY s.Name;
SELECT singer.Name, COUNT(singer_in_concert.concert_ID) as NumberOfConcerts FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name;
SELECT s.Name, COUNT(c.concert_ID) as Number_of_Concerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID GROUP BY s.Name;
SELECT singer.Name, COUNT(singer_in_concert.concert_ID) as Number_of_concerts FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name;
SELECT s.Name, COUNT(sc.concert_ID) as Number_of_Concerts FROM singer as s JOIN singer_in_concert as sc ON s.Singer_ID = sc.Singer_ID GROUP BY s.Name;
SELECT s.Name, COUNT(*) as number_of_concerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID GROUP BY s.Name;
SELECT s.Name, COUNT(sic.concert_ID) as Number_of_Concerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID GROUP BY s.Name;
SELECT s.Name, COUNT(*) as NumberOfConcerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID GROUP BY s.Name;
SELECT s.Name, COUNT(c.concert_ID) as Num_Concerts FROM singer s JOIN singer_in_concert sc ON s.Singer_ID = sc.Singer_ID JOIN concert c ON sc.concert_ID = c.concert_ID GROUP BY s.Name;

SELECT singer.Name, COUNT(concert.concert_ID) as number_of_concerts FROM singer JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY singer.Name;
SELECT singer.Name, COUNT(concert.concert_ID) as Number_of_Concerts FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY singer.Name;
SELECT singer.Name, COUNT(concert.concert_ID) as Number_of_Concerts FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY singer.Name;
SELECT singer.Name, COUNT(concert.concert_ID) as number_of_concerts FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY singer.Name;
SELECT s.Name AS Singer_Name, COUNT(c.concert_Name) AS Number_of_Concerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID GROUP BY s.Name;
SELECT s.Name, COUNT(c.concert_ID) as Number_of_Concerts FROM singer AS s JOIN singer_in_concert AS sc ON s.Singer_ID = sc.Singer_ID JOIN concert AS c ON sc.concert_ID = c.concert_ID GROUP BY s.Name;
SELECT s.Name, COUNT(si.concert_ID) as Number_of_Concerts FROM singer AS s JOIN singer_in_concert AS si ON s.Singer_ID = si.Singer_ID JOIN concert AS c ON si.concert_ID = c.concert_ID GROUP BY s.Name;
SELECT s.Name, COUNT(*) as NumberOfConcerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID GROUP BY s.Name;
SELECT singer.Name, COUNT(concert.concert_ID) as Number_of_Concerts FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY singer.Name;
SELECT singer.Name, COUNT(concert.concert_ID) as NumberOfConcerts FROM singer JOIN singer_in_concert ON singer_in_concert.Singer_ID = singer.Singer_ID JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY singer.Name;

SELECT DISTINCT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;
SELECT DISTINCT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;
SELECT distinct s.Name FROM singer s JOIN singer_in_concert sic ON sic.Singer_ID = s.Singer_ID JOIN concert c ON c.concert_ID = sic.concert_ID WHERE c.Year = 2014;
SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year = 2014;
SELECT DISTINCT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE concert.Year = 2014;
SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year = 2014;
SELECT DISTINCT s.Name FROM singer s INNER JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID INNER JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year = 2014;
SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year = 2014;
SELECT DISTINCT singer.Name FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;
SELECT DISTINCT singer.Name FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;

SELECT DISTINCT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;
SELECT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;
SELECT DISTINCT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;
SELECT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;
SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year = 2014;
SELECT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;
SELECT DISTINCT singer.Name FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;
SELECT DISTINCT singer.Name FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;
SELECT DISTINCT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year = 2014;
SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year = 2014;

SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';

SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';

SELECT DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) HAVING COUNT(DISTINCT c.Year) = 2;
SELECT DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) GROUP BY s.Stadium_ID HAVING COUNT(DISTINCT c.Year) = 2;
SELECT DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) GROUP BY s.Stadium_ID HAVING COUNT(DISTINCT c.Year) > 1;
SELECT stadium.Name, stadium.Location FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year IN (2014, 2015) GROUP BY stadium.Stadium_ID HAVING COUNT(DISTINCT concert.Year) > 1;
SELECT DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) GROUP BY s.Name, s.Location HAVING COUNT(DISTINCT c.Year) = 2;
SELECT DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) GROUP BY s.Name, s.Location HAVING COUNT(DISTINCT c.Year) > 1;
SELECT DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) GROUP BY s.Stadium_ID, s.Name, s.Location HAVING COUNT(DISTINCT c.Year) = 2;
SELECT DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) GROUP BY s.Name, s.Location HAVING COUNT(DISTINCT c.Year) = 2;
SELECT DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) GROUP BY s.Stadium_ID, s.Name, s.Location HAVING COUNT(DISTINCT c.Year) > 1;
SELECT DISTINCT stadium.Name, stadium.Location FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year IN (2014,2015) GROUP BY stadium.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2;

SELECT DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) GROUP BY s.Stadium_ID HAVING COUNT(DISTINCT c.Year) = 2;
SELECT DISTINCT st.Name, st.Location FROM stadium st JOIN concert co ON st.Stadium_ID = co.Stadium_ID WHERE Year IN (2014, 2015) GROUP BY st.Stadium_ID HAVING COUNT(DISTINCT Year) = 2;
SELECT DISTINCT s.Name, s.Location FROM stadium s WHERE s.Stadium_ID IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014 INTERSECT SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2015);
SELECT DISTINCT s.Name, s.Location FROM stadium s INNER JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) GROUP BY s.Stadium_ID HAVING COUNT(DISTINCT c.Year) = 2;
SELECT DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) GROUP BY s.Stadium_ID HAVING COUNT(DISTINCT c.Year) = 2;
SELECT DISTINCT stadium.Name, stadium.Location FROM stadium INNER JOIN concert on stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year in (2014, 2015) GROUP BY stadium.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2;
SELECT DISTINCT stadium.Name, stadium.Location FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year IN (2014, 2015) GROUP BY stadium.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2;
SELECT DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) GROUP BY s.Stadium_ID HAVING COUNT(DISTINCT c.Year) = 2;
SELECT DISTINCT s.Name, s.Location FROM stadium AS s JOIN concert AS c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) GROUP BY s.Stadium_ID HAVING COUNT(DISTINCT c.Year) > 1;
SELECT DISTINCT s.Name, s.Location FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year IN (2014, 2015) GROUP BY s.Stadium_ID HAVING COUNT(DISTINCT c.Year) > 1;

SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(concert.concert_ID) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity = ( SELECT MAX(Capacity) FROM stadium );
SELECT COUNT(*) AS Number_of_Concerts FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
SELECT COUNT(*) as NumberOfConcerts FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);

SELECT COUNT(*) AS NumberOfConcerts FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
SELECT COUNT(*) AS Number_of_Concerts FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) as Number_of_Concerts FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) as Number_of_Concerts FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) AS NumberOfConcerts FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) AS Number_of_Concerts FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium WHERE Capacity = (SELECT MAX(Capacity) FROM stadium) );
SELECT count(*) as NumberOfConcerts FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) AS NumberOfConcerts FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) as Number_of_Concerts FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium WHERE Capacity = ( SELECT MAX(Capacity) FROM stadium ) );

SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;

SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;

SELECT MIN(weight) FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog');
SELECT MIN(weight) FROM Pets WHERE PetType = 'Dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'Dog');
SELECT MIN(Pets.weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' AND Pets.pet_age = (SELECT MIN(Pets.pet_age) FROM Pets WHERE Pets.PetType = 'dog');
SELECT min(Pets.weight) FROM Pets WHERE Pets.PetID IN ( SELECT Has_Pet.PetID FROM Has_Pet WHERE Has_Pet.PetID = ( SELECT Pets.PetID FROM Pets WHERE Pets.pet_age = ( SELECT min(Pets.pet_age) FROM Pets WHERE Pets.PetType = 'dog' ) ) );
SELECT MIN(Pets.weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' ORDER BY Pets.pet_age ASC LIMIT 1;
SELECT min(Pets.weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' AND Pets.pet_age = (SELECT min(pet_age) FROM Pets WHERE PetType = 'dog');
SELECT MIN(pet_age), weight FROM Pets WHERE PetType = 'dog';
SELECT MIN(weight) FROM Pets WHERE PetType = 'dog' AND pet_age = ( SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog');
SELECT MIN(weight) FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog');
SELECT MIN(Pets.weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' AND Pets.pet_age = (SELECT MIN(Pets.pet_age) FROM Pets WHERE Pets.PetType = 'dog');

SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog');
SELECT MIN(weight) FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog');
SELECT weight FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog');
SELECT Min(Pets.weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'Dog' AND Pets.pet_age = (SELECT Min(Pets.pet_age) FROM Pets WHERE Pets.PetType = 'Dog');
SELECT weight FROM Pets WHERE PetID = ( SELECT PetID FROM Has_Pet WHERE PetType = 'Dog' AND pet_age = ( SELECT MIN(pet_age) FROM Pets WHERE PetType = 'Dog' ));
SELECT MIN(Pets.weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' AND Pets.pet_age = ( SELECT MIN(Pets.pet_age) FROM Pets WHERE Pets.PetType = 'dog' );
SELECT MIN(weight) FROM Pets WHERE PetID IN (SELECT PetID FROM Pets WHERE PetType = 'dog' AND pet_age IN (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog'));
SELECT MIN(weight) FROM Pets WHERE PetType = 'dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'dog');
SELECT MIN(weight) FROM Pets WHERE PetType = 'Dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'Dog');
SELECT MIN(weight) FROM Pets WHERE PetType = 'Dog' AND pet_age = (SELECT MIN(pet_age) FROM Pets WHERE PetType = 'Dog');

SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(Pets.PetID) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;

SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age>20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;

SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Sex = 'Female' AND PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.Sex = 'Female';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';

SELECT COUNT(*) FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.Sex = 'female';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Dog';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.Sex = 'Female';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.Sex = 'Female';

SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.FName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat','dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');

SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat','dog');
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('cat', 'dog');

SELECT DISTINCT s.Fname, s.LName FROM Student s JOIN Has_Pet hp1 ON s.StuID = hp1.StuID JOIN Pets p1 ON hp1.PetID = p1.PetID AND p1.PetType = 'Cat' JOIN Has_Pet hp2 ON s.StuID = hp2.StuID JOIN Pets p2 ON hp2.PetID = p2.PetID AND p2.PetType = 'Dog';
SELECT distinct S.Fname, S.LName FROM Student S JOIN Has_Pet HP1 ON HP1.StuID = S.StuID JOIN Pets P1 ON P1.PetID = HP1.PetID AND P1.PetType = 'Cat' JOIN Has_Pet HP2 ON HP2.StuID = S.StuID JOIN Pets P2 ON P2.PetID = HP2.PetID AND P2.PetType = 'Dog';
SELECT S.Fname, S.LName FROM Student S WHERE EXISTS (SELECT 1 FROM Has_Pet HP JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'cat' AND HP.StuID = S.StuID) AND EXISTS (SELECT 1 FROM Has_Pet HP JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'dog' AND HP.StuID = S.StuID);
SELECT S.Fname, S.LName FROM Student S WHERE S.StuID IN (SELECT HP.StuID FROM Has_Pet HP JOIN Pets P on HP.PetID = P.PetID WHERE P.PetType = 'cat') AND S.StuID IN (SELECT HP.StuID FROM Has_Pet HP JOIN Pets P on HP.PetID = P.PetID WHERE P.PetType = 'dog');
SELECT DISTINCT S.LName, S.Fname FROM Student S JOIN Has_Pet HP1 ON S.StuID = HP1.StuID JOIN Pets P1 ON HP1.PetID = P1.PetID AND P1.PetType = 'Cat' JOIN Has_Pet HP2 ON S.StuID = HP2.StuID JOIN Pets P2 ON HP2.PetID = P2.PetID AND P2.PetType = 'Dog';
SELECT DISTINCT S.Fname, S.LName FROM Student S JOIN Has_Pet HP1 ON S.StuID = HP1.StuID JOIN Pets P1 ON HP1.PetID = P1.PetID AND P1.PetType = 'cat' JOIN Has_Pet HP2 ON S.StuID = HP2.StuID JOIN Pets P2 ON HP2.PetID = P2.PetID AND P2.PetType = 'dog';
SELECT DISTINCT Student.Fname, Student.LName FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.StuID IN ( SELECT Student.StuID FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' ) AND Student.StuID IN ( SELECT Student.StuID FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' );
SELECT Student.Fname, Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' ) AND Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' );
SELECT DISTINCT s.Fname, s.LName FROM Student s JOIN Has_Pet hp1 ON s.StuID = hp1.StuID JOIN Pets p1 ON hp1.PetID = p1.PetID AND p1.PetType = 'cat' JOIN Has_Pet hp2 ON s.StuID = hp2.StuID JOIN Pets p2 ON hp2.PetID = p2.PetID AND p2.PetType = 'dog';
SELECT DISTINCT s.Fname, s.LName FROM Student AS s JOIN Has_Pet AS hp ON hp.StuID = s.StuID JOIN Pets AS p ON p.PetID = hp.PetID WHERE hp.StuID IN ( SELECT StuID FROM Has_Pet AS h JOIN Pets AS p ON h.PetID = p.PetID WHERE p.PetType = 'cat' ) AND hp.StuID IN ( SELECT StuID FROM Has_Pet AS h JOIN Pets AS p ON h.PetID = p.PetID WHERE p.PetType = 'dog' );

SELECT DISTINCT S.Fname FROM Student S WHERE EXISTS ( SELECT 1 FROM Has_Pet HP JOIN Pets P ON HP.PetID = P.PetID WHERE HP.StuID = S.StuID AND P.PetType = 'cat' ) AND EXISTS ( SELECT 1 FROM Has_Pet HP JOIN Pets P ON HP.PetID = P.PetID WHERE HP.StuID = S.StuID AND P.PetType = 'dog' );
SELECT DISTINCT S.Fname FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE S.StuID IN ( SELECT HP1.StuID FROM Has_Pet HP1 JOIN Pets P1 ON HP1.PetID = P1.PetID WHERE P1.PetType = 'Cat' ) AND S.StuID IN ( SELECT HP2.StuID FROM Has_Pet HP2 JOIN Pets P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'Dog' );
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' INTERSECT SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' );
SELECT DISTINCT S.Fname FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON P.PetID = HP.PetID WHERE P.PetType IN ('cat', 'dog') GROUP BY S.Fname HAVING COUNT(DISTINCT P.PetType) = 2;
SELECT DISTINCT S.Fname FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P on HP.PetID = P.PetID WHERE S.StuID IN ( SELECT HP.StuID FROM Has_Pet HP JOIN Pets P on HP.PetID = P.PetID WHERE P.PetType = 'Cat') AND S.StuID IN ( SELECT HP.StuID FROM Has_Pet HP JOIN Pets P on HP.PetID = P.PetID WHERE P.PetType = 'Dog');
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.StuID IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' ) AND Student.StuID IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' );
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.StuID IN ( SELECT Student.StuID FROM Student JOIN Has_Pet on Student.StuID = Has_Pet.StuID JOIN Pets on Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat') AND Student.StuID IN ( SELECT Student.StuID FROM Student JOIN Has_Pet on Student.StuID = Has_Pet.StuID JOIN Pets on Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog');
SELECT DISTINCT S.Fname FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE S.StuID IN ( SELECT S.StuID FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'Cat' ) AND S.StuID IN ( SELECT S.StuID FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'Dog' );
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' ) AND Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' );
SELECT DISTINCT S.Fname FROM Student S WHERE EXISTS ( SELECT 1 FROM Has_Pet HP JOIN Pets P ON P.PetID = HP.PetID WHERE S.StuID = HP.StuID AND P.PetType = 'cat' ) AND EXISTS ( SELECT 1 FROM Has_Pet HP JOIN Pets P ON P.PetID = HP.PetID WHERE S.StuID = HP.StuID AND P.PetType = 'dog' );

SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.Major, Student.Age FROM Student WHERE StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat');
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat');
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.Major, Student.Age FROM Student WHERE StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );

SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat');
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat');
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat');
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID=Pets.PetID WHERE Pets.PetType='cat' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );

SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat' );
SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat');
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID=Pets.PetID WHERE Pets.PetType='cat');
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );

SELECT StuID FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat');
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'cat' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat');
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID=Pets.PetID WHERE Pets.PetType = 'Cat' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );

SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat');
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' );
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' );
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' );
SELECT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' );
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat');
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' );
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' );
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'Cat' );

SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat');
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Has_Pet.StuID = Student.StuID JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' );
SELECT distinct Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT distinct Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' );
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'Cat' );
SELECT DISTINCT S.Fname FROM Student S INNER JOIN Has_Pet HP ON S.StuID = HP.StuID INNER JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'Dog' AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet HP2 INNER JOIN Pets P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'Cat');
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' );
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' );
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Has_Pet.StuID = Student.StuID JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Has_Pet.StuID = Student.StuID JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'cat' );
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'Dog' AND StuID NOT IN ( SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'Cat');

SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets ORDER BY pet_age ASC LIMIT 1;
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);

SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT Pets.PetType, Pets.weight FROM Pets WHERE Pets.pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);
SELECT PetType, weight FROM Pets WHERE pet_age = (SELECT MIN(pet_age) FROM Pets);

SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;

SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT PetID, weight FROM Pets WHERE pet_age > 1;
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 1;
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.pet_age > 1;

SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;

SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT s.LName FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'cat' AND p.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND Pets.pet_age = 3;

SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);

SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Student.Age) FROM Student LEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Has_Pet.StuID IS NULL;
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);

SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) AS NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) AS Number_of_Models FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as numberOfModels FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;

SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as Number_of_Models FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as ModelCount FROM car_makers LEFT JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as ModelCount FROM car_makers JOIN model_list on car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as Number_Of_Models FROM car_makers LEFT JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;

SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list, car_names, cars_data WHERE model_list.Model = car_names.Model AND car_names.MakeId = cars_data.Id AND cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);

SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id JOIN model_list ON model_list.ModelId = car_names.Model WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list INNER JOIN car_names ON model_list.Model = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);

SELECT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE YEAR(cars_data.Year) = 1970;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970;
SELECT DISTINCT car_makers.Maker FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE Year LIKE '1970%';
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE YEAR(cars_data.Year) = 1970;
SELECT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE YEAR(cars_data.Year) = 1970;
SELECT DISTINCT car_makers.Maker FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE YEAR = 1970;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE YEAR(cars_data.Year) = 1970;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE YEAR = 1970;

SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE Year = 1970;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970;
SELECT DISTINCT car_makers.Maker FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE Year = 1970;
SELECT DISTINCT car_makers.Maker FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker INNER JOIN car_names ON model_list.Model = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE YEAR(cars_data.Year) = 1970;
SELECT DISTINCT car_makers.Maker FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE YEAR(cars_data.Year) = 1970;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE Year = 1970;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE YEAR(cars_data.Year) = 1970;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = 1970;
SELECT DISTINCT car_makers.Maker FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE Year = 1970;
SELECT DISTINCT car_makers.Maker FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE Year LIKE '1970-%';

SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Year ASC LIMIT 1;
SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Year ASC LIMIT 1;
SELECT car_names.Make, cars_data.Year FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY cars_data.Year ASC LIMIT 1;
SELECT car_names.Make, cars_data.Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY cars_data.Year ASC LIMIT 1;
SELECT car_names.Make, cars_data.Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY cars_data.Year ASC LIMIT 1;
SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Year ASC LIMIT 1;
SELECT car_names.Make, cars_data.Year FROM car_names INNER JOIN cars_data ON cars_data.Id = car_names.MakeId ORDER BY cars_data.Year ASC LIMIT 1;
SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ON cars_data.Id = car_names.MakeId ORDER BY cars_data.Year ASC LIMIT 1;
SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data);
SELECT car_names.Make, cars_data.Year FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY cars_data.Year ASC LIMIT 1;

SELECT car_makers.Maker, MIN(cars_data.Year) FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id JOIN model_list ON model_list.Model = car_names.Model JOIN car_makers ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker ORDER BY MIN(cars_data.Year) LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) AS Earliest_Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id ORDER BY Earliest_Year LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id ORDER BY cars_data.Year ASC LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id;
SELECT car_makers.Maker, MIN(cars_data.Year) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year IS NOT NULL;
SELECT car_makers.Maker, MIN(cars_data.Year) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id LIMIT 1;
SELECT car_makers.Maker, cars_data.Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id ORDER BY cars_data.Year ASC LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) AS Earliest_Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id LIMIT 1;

SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;

SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list INNER JOIN car_names ON model_list.Model = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Year > 1980;

SELECT CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1;
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1);
SELECT CountryName FROM countries WHERE CountryId = ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1;
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName ORDER BY COUNT(*) DESC LIMIT 1;
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1;
SELECT CountryName FROM countries WHERE CountryId = ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1);
SELECT CountryName FROM countries WHERE CountryId = (SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1);
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 );

SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1);
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(Id) DESC LIMIT 1 );
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1);
SELECT CountryName FROM countries WHERE CountryId = ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1;
SELECT CountryName FROM countries WHERE CountryId = ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 );

SELECT cm.FullName, COUNT(ml.Model) AS ModelCount FROM car_makers AS cm JOIN model_list AS ml ON cm.Id = ml.Maker GROUP BY cm.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;
SELECT car_makers.FullName AS MakerFullName, COUNT(model_list.Model) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) as Model_Count FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) AS ModelCount FROM car_makers LEFT JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;
SELECT COUNT(model_list.Model) AS Count, car_makers.FullName AS Maker FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;
SELECT cm.FullName, COUNT(ml.Model) as ModelCount FROM car_makers AS cm INNER JOIN model_list AS ml ON cm.Id = ml.Maker GROUP BY cm.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) as ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) as ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;

SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS NumberOfCarModels FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS Number_Of_Models FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS NumberOfModels FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;

SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id JOIN model_list ON model_list.Model = car_names.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model ='amc hornet sportabout (sw)';

SELECT COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(*) FROM car_makers INNER JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(DISTINCT car_makers.Id) FROM car_makers JOIN countries ON countries.CountryId = car_makers.Country WHERE countries.CountryName = 'France';
SELECT COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(*) FROM car_makers INNER JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(*) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'france';

SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers INNER JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'France';

SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'usa';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'usa';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'usa';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'usa';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'usa';
SELECT COUNT(distinct model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'usa';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'usa';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON car_makers.Id = model_list.Maker JOIN countries ON countries.CountryId = car_makers.Country WHERE countries.CountryName = 'usa';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'usa';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list LEFT JOIN car_makers ON model_list.Maker = car_makers.Id LEFT JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'usa';

SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(DISTINCT model_list.Model) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker WHERE continents.Continent = 'United States';
SELECT COUNT(DISTINCT model_list.ModelId) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';

SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) AS Avg_MPG FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;

SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id=car_names.MakeId JOIN model_list ON car_names.Model=model_list.Model JOIN car_makers ON model_list.Maker=car_makers.Id WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;

SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker IS NOT NULL;
SELECT DISTINCT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country;
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.FullName IS NOT NULL;
SELECT DISTINCT countries.CountryName, countries.CountryId FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker IS NOT NULL;
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Id IS NOT NULL;
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country;
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country;
SELECT countries.CountryName, countries.CountryId FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName, countries.CountryId HAVING COUNT(car_makers.Id) >= 1;
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId, countries.CountryName HAVING COUNT(car_makers.Id) >= 1;
SELECT DISTINCT countries.CountryName, countries.CountryId FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country;

SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country;
SELECT DISTINCT countries.CountryName, countries.CountryId FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country WHERE EXISTS (SELECT 1 FROM car_makers WHERE car_makers.Country = countries.CountryId);
SELECT countries.CountryName, countries.CountryId FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName, countries.CountryId HAVING COUNT(car_makers.Id) > 0;
SELECT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId, countries.CountryName HAVING COUNT(car_makers.Id) >= 1;
SELECT countries.CountryId, countries.CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers);
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE EXISTS (SELECT 1 FROM car_makers WHERE car_makers.Country = countries.CountryId);
SELECT countries.CountryName, countries.CountryId FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName, countries.CountryId HAVING COUNT(car_makers.Id) > 0;
SELECT CountryName, CountryId FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers );
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Id IS NOT NULL;
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(car_makers.Id) >= 1;

SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;

SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;

SELECT countries.CountryName FROM countries JOIN continents ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT c.CountryName FROM countries AS c JOIN car_makers AS cm ON c.CountryId = cm.Country JOIN continents AS co ON c.Continent = co.ContId WHERE co.Continent = 'Europe' GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON countries.CountryId = car_makers.Country WHERE continents.Continent = 'europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON car_makers.Country = countries.CountryId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON countries.CountryId = car_makers.Country WHERE continents.Continent = 'europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT c.CountryName FROM countries c INNER JOIN car_makers cm ON c.CountryId = cm.Country INNER JOIN continents ct ON c.Continent = ct.ContId WHERE ct.Continent = 'Europe' GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3;
SELECT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country JOIN continents cont ON c.Continent = cont.ContId WHERE cont.Continent = 'Europe' GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3;
SELECT c.CountryName FROM countries c INNER JOIN car_makers cm ON c.CountryId = cm.Country INNER JOIN continents cont ON c.Continent = cont.ContId WHERE cont.Continent = 'Europe' GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3;
SELECT c.CountryName FROM countries as c JOIN car_makers as cm ON c.CountryId = cm.Country JOIN continents as co ON c.Continent = co.ContId WHERE co.Continent = 'europe' GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3;
SELECT CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON countries.CountryId = car_makers.Country WHERE Continent = 'Europe' GROUP BY CountryName HAVING COUNT(car_makers.Id) >= 3;

SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON countries.CountryId = car_makers.Country WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON car_makers.Country = countries.CountryId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT c.CountryName FROM countries c JOIN continents con ON c.Continent = con.ContId JOIN car_makers cm ON cm.Country = c.CountryId WHERE con.Continent = 'Europe' GROUP BY c.CountryName HAVING COUNT(DISTINCT cm.Id) >= 3;
SELECT c.CountryName FROM countries c JOIN car_makers cm ON cm.Country = c.CountryId JOIN continents ct ON ct.ContId = c.Continent WHERE ct.Continent = 'Europe' GROUP BY c.CountryName HAVING COUNT(DISTINCT cm.Maker) >= 3;
SELECT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country JOIN continents cont ON c.Continent = cont.ContId WHERE cont.Continent = 'Europe' GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3;
SELECT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country JOIN continents cont ON c.Continent = cont.ContId WHERE cont.Continent = 'Europe' GROUP BY c.CountryName HAVING COUNT(DISTINCT cm.Id) >= 3;
SELECT CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId WHERE Continent = 'Europe' GROUP BY CountryName HAVING COUNT(DISTINCT car_makers.Id) >= 3;
SELECT CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON countries.CountryId = car_makers.Country WHERE Continent = 'Europe' GROUP BY CountryName HAVING COUNT(distinct car_makers.Id)>=3;
SELECT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country JOIN continents con ON con.ContId = c.Continent WHERE con.Continent = 'Europe' GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON countries.CountryId = car_makers.Country WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;

SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;

SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT car_names.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data on car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT car_names.Model FROM car_names INNER JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;

SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) AS Average_Horsepower FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;

SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year < 1980;

SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId INNER JOIN model_list ON car_names.Model = model_list.Model INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ```;
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) as Average_Edispl FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';

SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) as Average_Edispl FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvos';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) AS average_edispl FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';
SELECT AVG(cars_data.Edispl) as AverageEdispl FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo';

SELECT car_names.Make, COUNT(DISTINCT car_names.Model) AS Number_of_Versions FROM car_names GROUP BY car_names.Make ORDER BY Number_of_Versions DESC LIMIT 1;
SELECT car_names.Make, COUNT(DISTINCT car_names.Model) AS Versions FROM car_names GROUP BY car_names.Make ORDER BY Versions DESC LIMIT 1;
SELECT car_names.Make, COUNT(DISTINCT car_names.Model) as model_count FROM car_names GROUP BY car_names.Make ORDER BY model_count DESC LIMIT 1;
SELECT car_names.Make, COUNT(DISTINCT car_names.Model) AS Versions FROM car_names GROUP BY car_names.Make ORDER BY Versions DESC LIMIT 1;
SELECT car_names.Make, COUNT(DISTINCT car_names.Model) as Total_Versions FROM car_names GROUP BY car_names.Make ORDER BY Total_Versions DESC LIMIT 1;
SELECT car_names.Make, COUNT(DISTINCT car_names.Model) as Versions FROM car_names GROUP BY car_names.Make ORDER BY Versions DESC LIMIT 1;
SELECT car_names.Make, COUNT(DISTINCT car_names.Model) as Versions FROM car_names GROUP BY car_names.Make ORDER BY Versions DESC LIMIT 1;
SELECT car_names.Make, COUNT(DISTINCT car_names.Model) AS versions FROM car_names GROUP BY car_names.Make ORDER BY versions DESC LIMIT 1;
SELECT car_names.Make, COUNT(DISTINCT car_names.Model) AS Versions FROM car_names GROUP BY car_names.Make ORDER BY Versions DESC LIMIT 1;
SELECT car_names.Make, COUNT(DISTINCT car_names.Model) as VersionCount FROM car_names GROUP BY car_names.Make ORDER BY VersionCount DESC LIMIT 1;

SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;

SELECT COUNT(*) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE YEAR = '1980';
SELECT COUNT(*) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE YEAR = 1980;
SELECT COUNT(*) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE YEAR = 1980;
SELECT COUNT(*) FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data WHERE Year = 1980;
SELECT COUNT(*) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE Year = 1980;

SELECT COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = 'American Motor Company';
SELECT COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = 'American Motor Company';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list INNER JOIN car_makers on car_makers.Id = model_list.Maker INNER JOIN countries on countries.CountryId = car_makers.Country INNER JOIN continents on continents.ContId = countries.Continent WHERE car_makers.Maker = 'American Motor Company' AND continents.Continent = 'America';
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN countries ON car_makers.Country = countries.CountryId INNER JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor Company' AND continents.Continent = 'America';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor Company' AND continents.Continent = 'America';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.FullName = 'American Motor Company' AND continents.Continent = 'North America';
SELECT COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.FullName = 'American Motor Company';
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = 'American Motor Company';
SELECT COUNT(*) FROM model_list WHERE Maker IN ( SELECT Id FROM car_makers WHERE FullName = 'American Motor Company' AND Country IN ( SELECT CountryId FROM countries WHERE Continent IN ( SELECT ContId FROM continents WHERE Continent = 'America' ) ) );
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = 'American Motor Company';

SELECT COUNT(model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor Company' AND continents.Continent = 'America';
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = 'American Motor Company';
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'American Motor Company';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'American Motor Company';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor Company' AND continents.Continent = 'America';
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'American Motor Company';
SELECT COUNT(model_list.Model) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN countries ON car_makers.Country = countries.CountryId INNER JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor Company' AND continents.Continent = 'America';
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'American Motor Company';
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = 'American Motor Company';
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'American Motor Company';

SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.Id, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.FullName, car_makers.Id FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, FullName HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT cm.FullName, cm.Id FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.FullName, cm.Id HAVING COUNT(DISTINCT ml.Model) > 3;

SELECT cm.Id, cm.Maker FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.Id, cm.Maker HAVING COUNT(ml.Model) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) > 3;
SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(model_list.ModelId) > 3;

SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;

SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT model_list.Model FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN car_names ON model_list.Model = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500 GROUP BY model_list.Model;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON car_makers.Id = model_list.Maker JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500 GROUP BY model_list.Model;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN cars_data ON cars_data.Id = car_names.MakeId JOIN car_names ON car_names.Model = model_list.Model WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;

SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;

SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;

SELECT MIN(cars_data.Cylinders) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId INNER JOIN model_list ON car_names.Model = model_list.Model INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.FullName = 'Volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' AND cars_data.Accelerate = ( SELECT MIN(Accelerate) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' );
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId INNER JOIN model_list ON car_names.Model = model_list.Model INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;

SELECT cars_data.Cylinders FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT cars_data.Cylinders FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'Volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM car_makers INNER JOIN model_list ON car_makers.id = model_list.Maker INNER JOIN car_names ON model_list.Model = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'volvo' ORDER BY cars_data.Accelerate ASC LIMIT 1;

SELECT COUNT(*) FROM (SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2 ) AS subquery;
SELECT COUNT(Country) AS TotalNations FROM (SELECT countries.CountryName FROM car_makers INNER JOIN countries ON car_makers.Country = countries.CountryId GROUP BY countries.CountryName HAVING COUNT(car_makers.Maker) > 2) AS NationCount;
SELECT COUNT(Country) AS NumberOfNations FROM (SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(car_makers.Id) > 2) AS SubQuery;
SELECT COUNT(CountryName) as count FROM (SELECT countries.CountryName, COUNT(car_makers.Id) as maker_count FROM countries LEFT JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY CountryName) AS subQuery WHERE subQuery.maker_count > 2;
SELECT COUNT(*) FROM ( SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2 ) temp;
SELECT COUNT(CountryName) AS NumberOfNations FROM ( SELECT countries.CountryName FROM countries JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2 ) AS subquery;
SELECT COUNT(Country) AS Nations FROM (SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(car_makers.Id) > 2) AS subquery;
SELECT COUNT(Country) AS NumberOfNations FROM (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Id) > 2) AS SubQuery;
SELECT COUNT(CountryName) FROM ( SELECT CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName HAVING COUNT(car_makers.Id) > 2 ) AS CountryWithMoreThanTwoCarMakers;
SELECT COUNT(CountryName) AS NumCountries FROM (SELECT countries.CountryName FROM countries JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2) AS subquery;

SELECT COUNT(countries.CountryName) as 'Number of nations with more than 2 car makers' FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2;
SELECT COUNT(CountryName) FROM ( SELECT COUNT(*), CountryName FROM car_makers JOIN countries ON countries.CountryId = car_makers.Country GROUP BY CountryName HAVING COUNT(*) > 2 ) AS SubQuery;
SELECT COUNT(CountryName) as NumberOfNations FROM ( SELECT CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName HAVING COUNT(car_makers.Id) > 2 ) AS subquery;
SELECT COUNT(*) FROM ( SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2 ) AS CountryWithMoreThanTwoCarMakers;
SELECT COUNT(*) FROM ( SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2 ) AS t;
SELECT COUNT(*) FROM ( SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2 ) AS subquery;
SELECT COUNT(CountryName) AS Number_of_Nations FROM countries WHERE CountryId IN (SELECT Country FROM (SELECT Country, COUNT(Id) as numOfMakers FROM car_makers GROUP BY Country) AS makeCount WHERE makeCount.numOfMakers > 2);
SELECT COUNT(CountryName) AS NumberOfNations FROM ( SELECT countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2) AS SubQuery;
SELECT COUNT(*) FROM ( SELECT countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2 ) subquery;
SELECT COUNT(Country) AS NumberOfNations FROM ( SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(car_makers.Id) > 2) AS SubQuery;

SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model, MAX(cars_data.Horsepower) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model, MAX(cars_data.Horsepower) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;

SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980;
SELECT MAX(cars_data.MPG) as Maximum_Miles_Per_Gallon FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 OR cars_data.Year < 1980;

SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';

SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company' GROUP BY model_list.Model;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT model_list.Model FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN car_names ON model_list.Model = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName NOT LIKE 'Ford Motor Company';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT DISTINCT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.Maker != 'Ford Motor Company';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName NOT LIKE '%Ford Motor Company%';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';
SELECT distinct model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor Company';

SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.CountryId IN ( SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(car_makers.Id) > 3 ) OR car_makers.Maker = 'fiat';
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE ( SELECT COUNT(*) FROM car_makers WHERE countries.CountryId = car_makers.Country ) > 3 OR car_makers.Maker = 'fiat';
SELECT countries.CountryId, countries.CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId = car_makers.Country LEFT JOIN model_list ON car_makers.Id = model_list.Maker WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR model_list.Model = 'fiat' GROUP BY countries.CountryId, countries.CountryName;
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.CountryId IN (SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(car_makers.Id) > 3) OR car_makers.Maker = 'fiat';
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR car_makers.Maker IN (SELECT model_list.Maker FROM model_list WHERE model_list.Model = 'fiat');
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR car_makers.Maker = 'fiat';
SELECT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (SELECT COUNT(car_makers.Id) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR car_makers.Maker = 'fiat';
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR car_makers.Maker = 'fiat' GROUP BY countries.CountryId, countries.CountryName;
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR car_makers.Maker = 'fiat' GROUP BY countries.CountryId, countries.CountryName;
SELECT C.CountryId, C.CountryName FROM countries C JOIN car_makers CM ON C.CountryId = CM.Country WHERE CM.Maker in (SELECT Maker FROM model_list WHERE Model = 'fiat') OR C.CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Id) > 3);

SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR car_makers.Maker = 'fiat' GROUP BY countries.CountryId, countries.CountryName;
SELECT countries.CountryId, countries.CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (SELECT COUNT(car_makers.Id) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR exists (SELECT 1 FROM model_list, car_names WHERE car_makers.Id = model_list.Maker AND model_list.Model = car_names.Model AND car_names.Make = 'fiat');
SELECT countries.CountryId, countries.CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId = car_makers.Country WHERE ( SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId ) > 3 OR EXISTS ( SELECT * FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_makers.Country = countries.CountryId AND car_makers.Maker = 'fiat' ) GROUP BY countries.CountryId, countries.CountryName.;
SELECT countries.CountryId, countries.CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR car_makers.Maker IN (SELECT Id FROM car_makers WHERE Maker = 'fiat') GROUP BY countries.CountryId, countries.CountryName;
SELECT countries.CountryId, countries.CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (SELECT COUNT(car_makers.Id) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR car_makers.Maker IN (SELECT car_makers.Maker FROM car_makers WHERE car_makers.FullName = 'Fiat');
SELECT c.CountryId, c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country LEFT JOIN model_list ml ON cm.Id = ml.Maker WHERE (SELECT COUNT(*) FROM car_makers WHERE Country = c.CountryId) > 3 OR ml.Model IN (SELECT Model FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE Maker = 'fiat')) GROUP BY c.CountryId, c.CountryName;
SELECT CountryId, CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3 ) OR CountryId IN ( SELECT Country FROM car_makers WHERE Maker = 'fiat' );
SELECT c.CountryId, c.CountryName FROM countries c INNER JOIN car_makers cm ON c.CountryId = cm.Country WHERE cm.Maker IN (SELECT Maker FROM car_makers GROUP BY Maker HAVING COUNT(Maker) > 3) OR cm.Maker = (SELECT Id FROM car_makers WHERE Maker = 'fiat');
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country LEFT JOIN model_list ON car_makers.Id = model_list.Maker WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR model_list.Model IN (SELECT car_names.Model FROM car_names WHERE car_names.Make = 'fiat') GROUP BY countries.CountryId, countries.CountryName;
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.CountryId IN ( SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(car_makers.Id) > 3 ) OR countries.CountryId IN ( SELECT car_makers.Country FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model WHERE car_makers.Maker = 'fiat' );

SELECT Country FROM airlines WHERE Airline = "JetBlue Airways";
SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways';
SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways';
SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways';
SELECT Country FROM airlines WHERE Airline = "JetBlue Airways";
SELECT Country FROM airlines WHERE Airline = 'JetBlue Airways';
SELECT Country FROM airlines WHERE Airline = "JetBlue Airways";
SELECT Country FROM airlines WHERE Airline = "JetBlue Airways";
SELECT Country FROM airlines WHERE Airline = "JetBlue Airways";
SELECT Country FROM airlines WHERE Airline = "JetBlue Airways";

SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Country FROM airlines WHERE Airline = 'Jetblue Airways';

SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways';
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue Airways";
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue Airways";
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways';
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue Airways";
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue Airways";
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue Airways';

SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Abbreviation FROM airlines WHERE Airline = "Jetblue Airways";
SELECT Abbreviation FROM airlines WHERE Airline = "Jetblue Airways";
SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways';
SELECT Abbreviation FROM airlines WHERE Airline = 'Jetblue Airways';

SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = "USA";
SELECT Airline, Abbreviation FROM airlines WHERE Country = "USA";
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = "USA";
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = "USA";

SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';

SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';

SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Anthony';

SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';

SELECT * FROM airlines WHERE Airline = 'UAL';
SELECT * FROM airlines WHERE Airline = 'UAL';
SELECT * FROM airlines WHERE Airline = 'UAL';
SELECT * FROM airlines WHERE Airline='UAL';
SELECT * FROM airlines WHERE Airline = 'UAL';
SELECT * FROM airlines WHERE Airline = 'UAL';
SELECT * FROM airlines WHERE Airline = 'UAL';
SELECT * FROM airlines WHERE Airline = 'UAL';
SELECT * FROM airlines WHERE Airline = 'UAL';
SELECT * FROM airlines WHERE Airline = 'UAL';

SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country='USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';

SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';
SELECT COUNT(*) FROM airlines WHERE Country = 'USA';

SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';

SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';

SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City='Aberdeen';
SELECT AirportName FROM airports WHERE City='Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';

SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City='Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';
SELECT AirportName FROM airports WHERE City = 'Aberdeen';

SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';

SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';

SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';

SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';

SELECT COUNT(*) FROM flights WHERE SourceAirport = ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );
SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE SourceAirport IN ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );
SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );
SELECT COUNT(*) FROM flights WHERE SourceAirport = ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );

SELECT COUNT(*) FROM flights WHERE SourceAirport IN ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City='Aberdeen');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');

SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') ```;
SELECT COUNT(*) FROM flights WHERE DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT COUNT(*) FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );
SELECT COUNT(*) FROM flights WHERE DestAirport = ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT COUNT(*) FROM flights WHERE DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');

SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';

SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City='Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City='Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City='Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City='Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Ashley');

SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City='Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City='Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport = ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' ) AND DestAirport = ( SELECT AirportCode FROM airports WHERE City = 'Ashley' );
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City='Aberdeen') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City='Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen') AND DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Ashley');

SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue Airways';

SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue Airways';

SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE flights.Airline = 'United Airlines' AND flights.DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';

SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = 'United Airlines' AND flights.DestAirport = 'ASY';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = 'United Airlines' AND flights.DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = 'United Airlines' AND flights.DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = 'United Airlines' AND flights.DestAirport = 'ASY';

SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD' ```;
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights INNER JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = 'United Airlines' AND flights.SourceAirport = 'AHD';

SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = 'United Airlines' AND flights.SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights JOIN airlines ON airlines.uid = flights.Airline WHERE airlines.Airline = 'United Airlines' AND flights.SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND SourceAirport = 'AHD';

SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights INNER JOIN airlines ON flights.Airline = airlines.Airline INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT COUNT(*) FROM flights JOIN airlines ON airlines.Airline = flights.Airline JOIN airports ON airports.AirportCode = flights.DestAirport WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights f JOIN airlines a ON f.Airline = a.Airline JOIN airports ap ON f.DestAirport = ap.AirportCode WHERE a.Airline = 'United Airlines' AND ap.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';

SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport = ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );
SELECT COUNT(*) FROM flights INNER JOIN airlines ON flights.Airline = airlines.Airline INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen' ```;
SELECT COUNT(*) FROM flights INNER JOIN airlines ON flights.Airline = airlines.Airline INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport IN ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.uid JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'United Airlines' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights WHERE Airline = 'United Airlines' AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');

SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines INNER JOIN flights ON airlines.Abbreviation = flights.Airline INNER JOIN airports ON airports.AirportCode = flights.SourceAirport WHERE airports.AirportCode = "AHD";
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD';
SELECT DISTINCT airlines.Airline FROM flights JOIN airlines ON flights.Airline = airlines.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';

SELECT DISTINCT airlines.Airline FROM flights JOIN airlines ON flights.Airline = airlines.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM flights JOIN airlines ON flights.Airline = airlines.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT a.Airline FROM flights f JOIN airlines a ON f.Airline = a.Airline WHERE f.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM flights JOIN airlines ON flights.Airline = airlines.Airline WHERE flights.SourceAirport = 'AHD';

SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT a.Airline FROM airlines a INNER JOIN flights f ON a.Abbreviation = f.Airline WHERE f.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines INNER JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.AirportCode = 'AHD';

SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';

SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.Abbreviation = f1.Airline JOIN flights f2 ON a.Abbreviation = f2.Airline WHERE f1.SourceAirport = 'APG' AND f2.SourceAirport = 'CVO';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.Abbreviation = f1.Airline JOIN flights f2 ON a.Abbreviation = f2.Airline WHERE f1.SourceAirport = 'APG' AND f2.SourceAirport = 'CVO';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.Airline = f1.Airline JOIN flights f2 ON a.Airline = f2.Airline WHERE f1.sourceAirport = 'APG' AND f2.sourceAirport = 'CVO';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.uid = f1.Airline JOIN flights f2 ON a.uid = f2.Airline WHERE f1.SourceAirport = 'APG' AND f2.SourceAirport = 'CVO';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.Abbreviation = f1.Airline JOIN flights f2 ON a.Abbreviation = f2.Airline WHERE f1.SourceAirport = 'APG' AND f2.SourceAirport = 'CVO';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.Abbreviation = f1.Airline JOIN flights f2 ON a.Abbreviation = f2.Airline WHERE f1.SourceAirport = 'APG' AND f2.SourceAirport = 'CVO';
SELECT distinct airlines.Airline FROM airlines JOIN flights as F1 ON airlines.Abbreviation = F1.Airline JOIN flights as F2 ON airlines.Abbreviation = F2.Airline WHERE F1.SourceAirport = 'APG' AND F2.SourceAirport = 'CVO';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.Airline = f1.Airline AND f1.SourceAirport = 'APG' JOIN flights f2 ON a.Airline = f2.Airline AND f2.SourceAirport = 'CVO' WHERE EXISTS ( SELECT 1 FROM flights WHERE Airline = a.Airline AND SourceAirport IN ('APG', 'CVO') GROUP BY Airline HAVING COUNT(DISTINCT SourceAirport) = 2 );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;

SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline JOIN airports ap ON f.SourceAirport = ap.AirportCode WHERE f.SourceAirport IN ('APG','CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) > 1;
SELECT DISTINCT a.Airline FROM airlines a INNER JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.SourceAirport IN ('APG', 'CVO') GROUP BY airlines.Airline HAVING COUNT(DISTINCT flights.SourceAirport) = 2;
SELECT DISTINCT airlines.Airline FROM airlines INNER JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.SourceAirport IN ('APG', 'CVO') GROUP BY airlines.Airline HAVING COUNT(DISTINCT flights.SourceAirport) = 2;
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;
SELECT distinct a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;
SELECT DISTINCT airlines.Airline FROM airlines INNER JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.SourceAirport IN ('APG', 'CVO') GROUP BY airlines.Airline HAVING COUNT(DISTINCT flights.SourceAirport) = 2;
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline JOIN airports ap ON f.SourceAirport = ap.AirportCode WHERE ap.AirportCode IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT ap.AirportCode) = 2;

SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport = 'CVO' AND a.Airline NOT IN (SELECT DISTINCT ff.Airline FROM flights ff WHERE ff.SourceAirport = 'APG');
SELECT DISTINCT f.Airline FROM flights f WHERE f.SourceAirport='CVO' AND f.Airline NOT IN ( SELECT f2.Airline FROM flights f2 WHERE f2.SourceAirport='APG' );
SELECT DISTINCT f.Airline FROM flights f WHERE f.SourceAirport = 'CVO' AND f.Airline NOT IN ( SELECT DISTINCT f2.Airline FROM flights f2 WHERE f2.SourceAirport = 'APG' );
SELECT DISTINCT f.Airline FROM flights f WHERE f.SourceAirport = 'CVO' AND f.Airline NOT IN (SELECT Airline FROM flights WHERE SourceAirport = 'APG');
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport = 'CVO' AND a.Airline NOT IN ( SELECT Airline FROM flights WHERE SourceAirport = 'APG' );
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'CVO' AND airlines.Airline NOT IN ( SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'APG' );
SELECT DISTINCT f.Airline FROM flights f INNER JOIN airlines a ON a.Airline = f.Airline WHERE f.SourceAirport = 'CVO' AND f.Airline NOT IN ( SELECT Airline FROM flights WHERE SourceAirport = 'APG');
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport = 'CVO' AND a.Airline NOT IN ( SELECT Airline FROM flights WHERE SourceAirport = 'APG' );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport = 'CVO' AND a.Airline NOT IN ( SELECT f1.Airline FROM flights f1 WHERE f1.SourceAirport = 'APG');
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport = 'CVO' AND NOT EXISTS (SELECT 1 FROM flights f2 WHERE f2.SourceAirport = 'APG' AND f2.Airline = a.Airline);

SELECT DISTINCT a.Airline FROM flights f JOIN airlines a ON f.Airline = a.Airline WHERE f.SourceAirport = 'CVO' AND a.Airline NOT IN ( SELECT a2.Airline FROM flights f2 JOIN airlines a2 ON f2.Airline = a2.Airline WHERE f2.SourceAirport = 'APG' );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline JOIN airports p ON f.SourceAirport = p.AirportCode WHERE p.AirportCode = 'CVO' AND a.Airline NOT IN ( SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline JOIN airports p ON f.SourceAirport = p.AirportCode WHERE p.AirportCode = 'APG' );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline JOIN airports ap ON f.SourceAirport = ap.AirportCode WHERE ap.AirportCode = 'CVO' AND a.Abbreviation NOT IN (SELECT f1.Airline FROM flights f1 JOIN airports ap1 ON f1.SourceAirport = ap1.AirportCode WHERE ap1.AirportCode = 'APG');
SELECT DISTINCT f.Airline FROM flights f JOIN airports a ON f.SourceAirport = a.AirportCode WHERE a.AirportCode = 'CVO' AND f.Airline NOT IN ( SELECT DISTINCT f2.Airline FROM flights f2 JOIN airports a2 ON f2.SourceAirport = a2.AirportCode WHERE a2.AirportCode = 'APG' );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline JOIN airports apt ON f.SourceAirport = apt.AirportCode WHERE apt.AirportCode = 'CVO' AND a.Airline NOT IN (SELECT a2.Airline FROM airlines a2 JOIN flights f2 ON a2.Airline = f2.Airline JOIN airports apt2 ON f2.SourceAirport = apt2.AirportCode WHERE apt2.AirportCode = 'APG');
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.Airline = f1.Airline JOIN airports ar1 ON f1.SourceAirport = ar1.AirportCode WHERE ar1.AirportCode = 'CVO' AND a.Airline NOT IN ( SELECT f2.Airline FROM flights f2 JOIN airports ar2 ON f2.SourceAirport = ar2.AirportCode WHERE ar2.AirportCode = 'APG' ) ```;
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline JOIN airports ap ON f.SourceAirport = ap.AirportCode WHERE ap.AirportCode = 'CVO' AND a.Abbreviation NOT IN ( SELECT DISTINCT a2.Abbreviation FROM airlines a2 JOIN flights f2 ON a2.Abbreviation = f2.Airline JOIN airports ap2 ON f2.SourceAirport = ap2.AirportCode WHERE ap2.AirportCode = 'APG');
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline JOIN airports p on f.SourceAirport = p.AirportCode WHERE p.AirportCode = 'CVO' AND a.Airline NOT IN ( SELECT a2.Airline FROM airlines a2 JOIN flights f2 ON a2.Abbreviation = f2.Airline JOIN airports p2 on f2.SourceAirport = p2.AirportCode WHERE p2.AirportCode = 'APG' );
SELECT DISTINCT Airline FROM flights WHERE SourceAirport = 'CVO' AND Airline NOT IN ( SELECT DISTINCT Airline FROM flights WHERE SourceAirport = 'APG' );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline JOIN airports ap ON f.SourceAirport = ap.AirportCode WHERE ap.AirportCode = 'CVO' AND a.Airline NOT IN ( SELECT DISTINCT a2.Airline FROM airlines a2 JOIN flights f2 ON a2.Abbreviation = f2.Airline JOIN airports ap2 ON f2.SourceAirport = ap2.AirportCode WHERE ap2.AirportCode = 'APG' );

SELECT FlightNo FROM flights WHERE Airline = "United Airlines";
SELECT FlightNo FROM flights WHERE Airline = "United Airlines";
SELECT FlightNo FROM flights WHERE Airline = "United Airlines";
SELECT FlightNo FROM flights WHERE Airline = "United Airlines";
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines';
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines';
SELECT FlightNo FROM flights WHERE Airline = "United Airlines";
SELECT FlightNo FROM flights WHERE Airline = "United Airlines";
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines';
SELECT FlightNo FROM flights WHERE Airline = "United Airlines";

SELECT FlightNo FROM flights WHERE Airline = 'United Airlines';
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines';
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines';
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines';
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines';
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines';
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines';
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines';
SELECT FlightNo FROM flights WHERE Airline='United Airlines';
SELECT FlightNo FROM flights WHERE Airline = 'United Airlines';

SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';

SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';

SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';

SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';

SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights WHERE SourceAirport = ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );
SELECT FlightNo FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT FlightNo FROM flights INNER JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE City = 'Aberdeen';
SELECT FlightNo FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');

SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights WHERE SourceAirport = ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );
SELECT FlightNo FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT FlightNo FROM flights INNER JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights WHERE SourceAirport IN ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City='Aberdeen');

SELECT FlightNo FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen' );
SELECT FlightNo FROM flights WHERE DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT FlightNo FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT FlightNo FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT FlightNo FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT FlightNo FROM flights WHERE DestAirport = ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT FlightNo FROM flights WHERE DestAirport = (SELECT AirportCode FROM airports WHERE City='Aberdeen');

SELECT FlightNo FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE City = 'Aberdeen';
SELECT FlightNo FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights WHERE DestAirport = ( SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT FlightNo FROM flights JOIN airports ON airports.AirportCode = flights.DestAirport WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City='Aberdeen');
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Aberdeen');
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Aberdeen';

SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Aberdeen', 'Abilene');
SELECT COUNT(*) FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City in ('Aberdeen', 'Abilene') );
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Aberdeen', 'Abilene');
SELECT COUNT(*) FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene') );
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene'));
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene'));
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Aberdeen', 'Abilene');
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene'));
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Aberdeen', 'Abilene');
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Aberdeen', 'Abilene');

SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene'));
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE AirportName = 'Aberdeen' OR AirportName = 'Abilene');
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene'));
SELECT COUNT(*) FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene') );
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene'));
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene'));
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene'));
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene'));
SELECT COUNT(*) FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene') );
SELECT COUNT(*) FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City IN ('Aberdeen', 'Abilene'));

SELECT AirportName FROM airports WHERE AirportCode NOT IN ( SELECT SourceAirport FROM flights ) AND AirportCode NOT IN ( SELECT DestAirport FROM flights );
SELECT a.AirportName FROM airports a LEFT JOIN flights f1 ON a.AirportCode = f1.DestAirport LEFT JOIN flights f2 ON a.AirportCode = f2.SourceAirport WHERE f1.DestAirport IS NULL AND f2.SourceAirport IS NULL;
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT DestAirport FROM flights) AND AirportCode NOT IN (SELECT SourceAirport FROM flights);
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights);
SELECT a.AirportName FROM airports a LEFT JOIN flights f1 ON a.AirportCode = f1.SourceAirport LEFT JOIN flights f2 ON a.AirportCode = f2.DestAirport WHERE f1.SourceAirport IS NULL AND f2.DestAirport IS NULL;
SELECT airports.AirportName FROM airports LEFT JOIN flights ON airports.AirportCode = flights.DestAirport OR airports.AirportCode = flights.SourceAirport WHERE flights.Airline IS NULL;
SELECT AirportName FROM airports WHERE AirportCode NOT IN ( SELECT Distinct SourceAirport FROM flights UNION SELECT Distinct DestAirport FROM flights );
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights);
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights);
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights);

SELECT a.AirportName FROM airports a WHERE a.AirportCode NOT IN (SELECT f.SourceAirport FROM flights f) AND a.AirportCode NOT IN (SELECT f.DestAirport FROM flights f);
SELECT AirportCode, AirportName FROM airports WHERE AirportCode NOT IN (SELECT DestAirport FROM flights) AND AirportCode NOT IN (SELECT SourceAirport FROM flights);
SELECT * FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights);
SELECT a.* FROM airports a LEFT JOIN flights f1 ON a.AirportCode = f1.SourceAirport LEFT JOIN flights f2 ON a.AirportCode = f2.DestAirport WHERE f1.SourceAirport IS NULL AND f2.DestAirport IS NULL;
SELECT a.AirportCode, a.AirportName FROM airports a LEFT JOIN flights f1 ON a.AirportCode = f1.SourceAirport LEFT JOIN flights f2 ON a.AirportCode = f2.DestAirport WHERE f1.SourceAirport IS NULL AND f2.DestAirport IS NULL;
SELECT a.AirportName FROM airports a WHERE NOT EXISTS (SELECT 1 FROM flights f WHERE f.SourceAirport = a.AirportCode OR f.DestAirport = a.AirportCode);
SELECT AirportCode, AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights);
SELECT * FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights);
SELECT * FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights);
SELECT a.* FROM airports a LEFT JOIN flights f1 ON a.AirportCode = f1.SourceAirport LEFT JOIN flights f2 ON a.AirportCode = f2.DestAirport WHERE f1.SourceAirport IS NULL AND f2.DestAirport IS NULL;

SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;

SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;
SELECT Name FROM employee ORDER BY Age ASC;

SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1;
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1;
SELECT City FROM employee WHERE Employee_ID IN ( SELECT Employee_ID FROM hiring WHERE Employee_ID IN ( SELECT Employee_ID FROM employee WHERE Age < 30 ) ) GROUP BY City HAVING COUNT(*) > 1;
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1;
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1;
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1;
SELECT City FROM employee WHERE Employee_ID IN ( SELECT hiring.Employee_ID FROM hiring WHERE hiring.Employee_ID IN ( SELECT evaluation.Employee_ID FROM evaluation WHERE Age < 30 ) ) GROUP BY City HAVING COUNT(DISTINCT Employee_ID) > 1;
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1;
SELECT City FROM employee WHERE Employee_ID IN ( SELECT Employee_ID FROM hiring WHERE Employee_ID IN ( SELECT Employee_ID FROM employee WHERE Age < 30 ) ) GROUP BY City HAVING COUNT(Employee_ID) > 1;
SELECT City FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(Employee_ID) > 1;

SELECT City FROM employee WHERE Employee_ID IN ( SELECT Employee_ID FROM hiring WHERE Employee_ID IN ( SELECT Employee_ID FROM employee WHERE Age < 30 ) ) GROUP BY City HAVING COUNT(DISTINCT Employee_ID) > 1;
SELECT City FROM employee WHERE Employee_ID IN ( SELECT Employee_ID FROM employee WHERE Age < 30) GROUP BY City HAVING COUNT(*) > 1;
SELECT City FROM employee WHERE Employee_ID IN ( SELECT Employee_ID FROM employee WHERE Age < 30 ) GROUP BY City HAVING COUNT(Employee_ID) > 1;
SELECT City FROM employee WHERE Employee_ID IN ( SELECT Employee_ID FROM employee WHERE Age < 30 ) GROUP BY City HAVING COUNT(Employee_ID) > 1;
SELECT City, COUNT(*) FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1;
SELECT City, COUNT(*) FROM employee WHERE Age < 30 GROUP BY City HAVING COUNT(*) > 1;
SELECT City FROM employee WHERE Employee_ID IN ( SELECT Employee_ID FROM employee WHERE Age < 30 ) GROUP BY City HAVING COUNT(Employee_ID) > 1;
SELECT City FROM employee WHERE Employee_ID IN ( SELECT Employee_ID FROM employee WHERE Age < 30 ) GROUP BY City HAVING COUNT(Employee_ID) > 1;
SELECT City FROM employee WHERE Employee_ID IN ( SELECT Employee_ID FROM hiring WHERE Employee_ID IN ( SELECT Employee_ID FROM employee WHERE Age < 30)) GROUP BY City HAVING COUNT(Employee_ID) > 1;
SELECT City FROM employee WHERE Employee_ID IN ( SELECT Employee_ID FROM employee WHERE Age < 30 ) GROUP BY City HAVING COUNT(Employee_ID) > 1;

SELECT Location, COUNT(*) as NumberOfShops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) as Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) as NumberOfShops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) as NumberOfShops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) as Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location;

SELECT Location, COUNT(*) as Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) as Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) FROM shop GROUP BY Location;
SELECT Location, COUNT(*) AS Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) FROM shop GROUP BY Location;
SELECT Location, COUNT(*) as Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) as NumberOfShops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) as Number_of_Shops FROM shop GROUP BY Location;
SELECT Location, COUNT(*) as Number_of_Shops FROM shop GROUP BY Location;

SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);
SELECT Manager_name, District FROM shop WHERE Number_products = (SELECT MAX(Number_products) FROM shop);

SELECT s.Manager_name, s.District FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Shop_ID, s.Manager_name, s.District ORDER BY SUM(h.Number_products) DESC LIMIT 1;
SELECT Manager_name, District FROM shop WHERE Shop_ID = (SELECT Shop_ID FROM shop ORDER BY Number_products DESC LIMIT 1);
SELECT s.Manager_name, s.District FROM shop as s ORDER BY s.Number_products DESC LIMIT 1;
SELECT Manager_name, District FROM shop WHERE Shop_ID = ( SELECT Shop_ID FROM shop ORDER BY Number_products DESC LIMIT 1);
SELECT Manager_name, District FROM shop WHERE Shop_ID = ( SELECT Shop_ID FROM shop ORDER BY Number_products DESC LIMIT 1 );
SELECT Manager_name, District FROM shop WHERE Shop_ID = (SELECT Shop_ID FROM shop ORDER BY Number_products DESC LIMIT 1);
SELECT Manager_name, District FROM shop WHERE Shop_ID = ( SELECT Shop_ID FROM shop ORDER BY Number_products DESC LIMIT 1);
SELECT shop.Manager_name, shop.District FROM shop ORDER BY shop.Number_products DESC LIMIT 1;
SELECT s.Manager_name, s.District FROM shop s WHERE s.Shop_ID = ( SELECT h.Shop_ID FROM hiring h GROUP BY h.Shop_ID ORDER BY SUM(s.Number_products) DESC LIMIT 1);
SELECT s.Manager_name, s.District FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Shop_ID, s.Manager_name, s.District ORDER BY SUM(h.Number_products) DESC LIMIT 1;

SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;

SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;
SELECT Name, Location, District FROM shop ORDER BY Number_products DESC;

SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);

SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT s.Name FROM shop s WHERE s.Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT s.Name FROM shop s WHERE s.Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT s.Name FROM shop s WHERE s.Number_products > (SELECT AVG(Number_products) FROM shop);
SELECT Name FROM shop WHERE Number_products > (SELECT AVG(Number_products) FROM shop);

SELECT e.Name FROM employee e JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID ORDER BY ev.Bonus DESC LIMIT 1;
SELECT e.Name FROM employee e JOIN evaluation v ON e.Employee_ID = v.Employee_ID ORDER BY v.Bonus DESC LIMIT 1;
SELECT e.Name FROM employee e JOIN evaluation ev ON e.Employee_ID = ev.Employee_ID ORDER BY ev.Bonus DESC LIMIT 1;
SELECT employee.Name FROM employee INNER JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1;
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE evaluation.Bonus = (SELECT MAX(Bonus) FROM evaluation);
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE evaluation.Bonus = (SELECT MAX(Bonus) FROM evaluation);
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE evaluation.Bonus = (SELECT MAX(Bonus) FROM evaluation);
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE evaluation.Bonus = (SELECT MAX(Bonus) FROM evaluation);
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1;
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1;

SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1;
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1;
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE evaluation.Bonus = (SELECT MAX(Bonus) FROM evaluation);
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE evaluation.Bonus = (SELECT MAX(Bonus) FROM evaluation);
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1;
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1;
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1;
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID WHERE evaluation.Bonus = (SELECT MAX(Bonus) FROM evaluation);
SELECT employee.Name FROM employee JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1;
SELECT employee.Name FROM employee INNER JOIN evaluation ON employee.Employee_ID = evaluation.Employee_ID ORDER BY evaluation.Bonus DESC LIMIT 1;

SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1;
SELECT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Name ORDER BY COUNT(h.Employee_ID) DESC LIMIT 1;
SELECT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Shop_ID ORDER BY COUNT(h.Employee_ID) DESC LIMIT 1;
SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1;
SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1;
SELECT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Name ORDER BY COUNT(h.Employee_ID) DESC LIMIT 1;
SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1;
SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1;
SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1;
SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name ORDER BY COUNT(DISTINCT hiring.Employee_ID) DESC LIMIT 1;

SELECT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Name ORDER BY COUNT(h.Employee_ID) DESC LIMIT 1;
SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1;
SELECT s.Name FROM shop s JOIN hiring h ON s.Shop_ID=h.Shop_ID GROUP BY s.Name ORDER BY COUNT(h.Employee_ID) DESC LIMIT 1;
SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1;
SELECT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Name ORDER BY COUNT(h.Employee_ID) DESC LIMIT 1;
SELECT shop.Name FROM shop JOIN hiring ON shop.Shop_ID = hiring.Shop_ID GROUP BY shop.Name ORDER BY COUNT(hiring.Employee_ID) DESC LIMIT 1;
SELECT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Name ORDER BY COUNT(h.Employee_ID) DESC LIMIT 1;
SELECT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Name ORDER BY COUNT(h.Employee_ID) DESC LIMIT 1;
SELECT s.Name FROM shop s JOIN hiring h ON s.Shop_ID = h.Shop_ID GROUP BY s.Name ORDER BY COUNT(h.Employee_ID) DESC LIMIT 1;

SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);
SELECT Name FROM shop WHERE Shop_ID NOT IN ( SELECT Shop_ID FROM hiring);
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);

SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);
SELECT s.Name FROM shop s LEFT JOIN hiring h ON s.Shop_ID = h.Shop_ID WHERE h.Employee_ID IS NULL;
SELECT s.Name FROM shop s LEFT JOIN hiring h ON s.Shop_ID = h.Shop_ID WHERE h.Employee_ID IS NULL;
SELECT s.Name FROM shop s LEFT JOIN hiring h ON s.Shop_ID = h.Shop_ID WHERE h.Employee_ID IS NULL;
SELECT s.Name FROM shop s LEFT JOIN hiring h ON s.Shop_ID = h.Shop_ID WHERE h.Employee_ID IS NULL;
SELECT Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM hiring);

SELECT DISTINCT s.District FROM shop s WHERE EXISTS ( SELECT 1 FROM shop WHERE District = s.District AND Number_products < 3000 ) AND EXISTS ( SELECT 1 FROM shop WHERE District = s.District AND Number_products > 10000 );
SELECT DISTINCT District FROM shop WHERE District IN ( SELECT DISTINCT District FROM shop WHERE Number_products < 3000) AND District IN ( SELECT DISTINCT District FROM shop WHERE Number_products > 10000);
SELECT DISTINCT District FROM shop WHERE Location IN ( SELECT Location FROM shop WHERE Number_products < 3000 ) AND Location IN ( SELECT Location FROM shop WHERE Number_products > 10000 );
SELECT DISTINCT District FROM shop WHERE District IN (SELECT District FROM shop WHERE Number_products < 3000) AND District IN (SELECT District FROM shop WHERE Number_products > 10000);
SELECT DISTINCT District FROM shop WHERE District IN (SELECT DISTINCT District FROM shop WHERE Number_products < 3000) AND District IN (SELECT DISTINCT District FROM shop WHERE Number_products > 10000);
SELECT DISTINCT District FROM shop WHERE District IN ( SELECT District FROM shop WHERE Number_products < 3000 ) AND District IN ( SELECT District FROM shop WHERE Number_products > 10000 );
SELECT DISTINCT District FROM shop WHERE District IN ( SELECT District FROM shop WHERE Number_products < 3000) AND District IN ( SELECT District FROM shop WHERE Number_products > 10000);
SELECT DISTINCT District FROM shop WHERE District IN ( SELECT District FROM shop WHERE Number_products < 3000) AND District IN ( SELECT District FROM shop WHERE Number_products > 10000);
SELECT DISTINCT District FROM shop WHERE District IN (SELECT DISTINCT District FROM shop WHERE Number_products < 3000) AND District IN (SELECT DISTINCT District FROM shop WHERE Number_products > 10000);
SELECT DISTINCT District FROM shop WHERE District IN ( SELECT DISTINCT District FROM shop WHERE Number_products < 3000 ) AND District IN ( SELECT DISTINCT District FROM shop WHERE Number_products > 10000 );

SELECT DISTINCT s1.District FROM shop AS s1 JOIN shop AS s2 ON s1.District = s2.District WHERE s1.Number_products < 3000 AND s2.Number_products > 10000;
SELECT DISTINCT s1.District FROM shop as s1 JOIN shop as s2 ON s1.District = s2.District WHERE s1.Number_products < 3000 AND s2.Number_products > 10000;
SELECT DISTINCT s1.District FROM shop s1 JOIN shop s2 ON s1.District = s2.District WHERE s1.Number_products < 3000 AND s2.Number_products > 10000;
SELECT DISTINCT District FROM shop WHERE District IN (SELECT DISTINCT District FROM shop WHERE Number_products < 3000) AND District IN (SELECT DISTINCT District FROM shop WHERE Number_products > 10000);
SELECT DISTINCT District FROM shop WHERE District IN ( SELECT DISTINCT District FROM shop WHERE Number_products < 3000 ) AND District IN ( SELECT DISTINCT District FROM shop WHERE Number_products > 10000 );
SELECT DISTINCT District FROM shop WHERE District IN ( SELECT DISTINCT District FROM shop WHERE Number_products < 3000) AND District IN ( SELECT DISTINCT District FROM shop WHERE Number_products > 10000);
SELECT DISTINCT s.District FROM shop s WHERE EXISTS ( SELECT 1 FROM shop WHERE Number_products < 3000 AND District = s.District ) AND EXISTS ( SELECT 1 FROM shop WHERE Number_products > 10000 AND District = s.District );
SELECT DISTINCT District FROM shop WHERE District IN (SELECT District FROM shop WHERE Number_products < 3000) AND District IN (SELECT District FROM shop WHERE Number_products > 10000);
SELECT DISTINCT s1.District FROM shop s1 JOIN shop s2 ON s1.District = s2.District WHERE s1.Number_products < 3000 AND s2.Number_products > 10000;
SELECT DISTINCT S1.District FROM shop S1 JOIN shop S2 ON S1.District = S2.District WHERE S1.Number_products < 3000 AND S2.Number_products > 10000;

SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;

SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;
SELECT Name FROM teacher ORDER BY Age ASC;

SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';

SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';
SELECT Name FROM teacher WHERE Hometown != 'Little Lever Urban District';

SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);

SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);
SELECT Name FROM teacher WHERE Age IN (32, 33);

SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);

SELECT Hometown FROM teacher WHERE Age=(SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT teacher.Hometown FROM teacher WHERE teacher.Age = (SELECT MIN(teacher.Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);
SELECT Hometown FROM teacher WHERE Age = (SELECT MIN(Age) FROM teacher);

SELECT Hometown, COUNT(*) as Number_of_Teachers FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as 'Number of Teachers' FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as Number_of_Teachers FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as Teacher_Count FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as Number_of_Teachers FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as number_of_teachers FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as Number_of_Teachers FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as NumberOfTeachers FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as Number_of_Teachers FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as Number_of_Teachers FROM teacher GROUP BY Hometown;

SELECT Hometown, COUNT(Teacher_ID) as Number_of_Teachers FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(Teacher_ID) as number_of_teachers FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(DISTINCT Teacher_ID) as NumberOfTeachers FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as Number_of_Teachers FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as Number_of_Teachers FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as Teacher_Count FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as Number_of_Teachers FROM teacher GROUP BY Hometown;
SELECT teacher.Hometown, COUNT(*) AS 'Number of Teachers' FROM teacher GROUP BY teacher.Hometown;
SELECT Hometown, COUNT(*) as Number_of_Teachers FROM teacher GROUP BY Hometown;
SELECT Hometown, COUNT(*) as number_of_teachers FROM teacher GROUP BY Hometown;

SELECT Hometown, COUNT(*) as count FROM teacher GROUP BY Hometown ORDER BY count DESC LIMIT 1;
SELECT Hometown, COUNT(*) as count FROM teacher GROUP BY Hometown ORDER BY count DESC LIMIT 1;
SELECT Hometown, COUNT(*) as count FROM teacher GROUP BY Hometown ORDER BY count DESC LIMIT 1;
SELECT Hometown, COUNT(*) as Quantity FROM teacher GROUP BY Hometown ORDER BY Quantity DESC LIMIT 1;
SELECT Hometown, COUNT(*) as count FROM teacher GROUP BY Hometown ORDER BY count DESC LIMIT 1;
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Hometown, COUNT(*) as count FROM teacher GROUP BY Hometown ORDER BY count DESC LIMIT 1;
SELECT Hometown, COUNT(*) as count FROM teacher GROUP BY Hometown ORDER BY count DESC LIMIT 1;
SELECT Hometown, COUNT(*) AS occurence FROM teacher GROUP BY Hometown ORDER BY occurence DESC LIMIT 1;
SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1;

SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2;
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2;
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2;
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2;
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2;
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2;
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2;
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2;
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2;
SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(Teacher_ID) >= 2;

SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course.Course_ID = course_arrange.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';

SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = "math";
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course.Course_ID = course_arrange.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher INNER JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID INNER JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher INNER JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID INNER JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';
SELECT teacher.Name FROM teacher JOIN course_arrange ON teacher.Teacher_ID = course_arrange.Teacher_ID JOIN course ON course_arrange.Course_ID = course.Course_ID WHERE course.Course = 'math';

SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);

SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN ( SELECT Teacher_ID FROM course_arrange );
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN (SELECT Teacher_ID FROM course_arrange);
SELECT Name FROM teacher WHERE Teacher_ID NOT IN ( SELECT Teacher_ID FROM course_arrange );

SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;
SELECT COUNT(*) FROM visitor WHERE Age < 30;

SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;
SELECT Name FROM visitor WHERE Level_of_membership > 4 ORDER BY Level_of_membership DESC;

SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;
SELECT AVG(Age) FROM visitor WHERE Level_of_membership <= 4;

SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);
SELECT Museum_ID, Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1;
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);
SELECT Museum_ID, Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1;
SELECT Museum_ID, Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1;
SELECT Museum_ID, Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1;
SELECT Museum_ID, Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1;
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);
SELECT Museum_ID, Name FROM museum ORDER BY Num_of_Staff DESC LIMIT 1;
SELECT Museum_ID, Name FROM museum WHERE Num_of_Staff = (SELECT MAX(Num_of_Staff) FROM museum);

SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009;
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009;
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009;
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009;
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009;
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009;
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009;
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009;
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009;
SELECT AVG(Num_of_Staff) FROM museum WHERE Open_Year < 2009;

SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';
SELECT Open_Year, Num_of_Staff FROM museum WHERE Name = 'Plaza Museum';

SELECT m.Name FROM museum m WHERE m.Num_of_Staff > ( SELECT MIN(m2.Num_of_Staff) FROM museum m2 WHERE m2.Open_Year > 2010 );
SELECT Name FROM museum WHERE Num_of_Staff > ( SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > 2010 );
SELECT m.Name FROM museum m WHERE m.Num_of_Staff > ( SELECT MIN(m1.Num_of_Staff) FROM museum m1 WHERE m1.Open_Year > 2010);
SELECT m.Name FROM museum m WHERE m.Num_of_Staff > ( SELECT MIN(m2.Num_of_Staff) FROM museum m2 WHERE m2.Open_Year > 2010 );
SELECT m.Name FROM museum m WHERE m.Num_of_Staff > ( SELECT MIN(m2.Num_of_Staff) FROM museum m2 WHERE m2.Open_Year > 2010 );
SELECT Name FROM museum WHERE Num_of_Staff > ( SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > 2010 );
SELECT m.Name FROM museum m WHERE m.Num_of_Staff > ( SELECT MIN(m2.Num_of_Staff) FROM museum m2 WHERE m2.Open_Year > 2010 );
SELECT m.Name FROM museum m WHERE m.Num_of_Staff > (SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > 2010);
SELECT m.Name FROM museum m WHERE m.Num_of_Staff > ( SELECT MIN(mm.Num_of_Staff) FROM museum mm WHERE mm.Open_Year > 2010 );
SELECT Name FROM museum WHERE Num_of_Staff > ( SELECT MIN(Num_of_Staff) FROM museum WHERE Open_Year > 2010);

SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Age HAVING COUNT(visit.Museum_ID) > 1;
SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor INNER JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID HAVING COUNT(visit.Museum_ID) > 1;
SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Age HAVING COUNT(visit.Museum_ID) > 1;
SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Age HAVING COUNT(visit.Museum_ID) > 1;
SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID HAVING COUNT(visit.Museum_ID) > 1;
SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Age HAVING COUNT(visit.Museum_ID) > 1;
SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Age HAVING COUNT(visit.Museum_ID) > 1;
SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor INNER JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Age HAVING COUNT(visit.Museum_ID) > 1;
SELECT visitor.ID, visitor.Name, visitor.Age FROM visitor JOIN visit ON visit.visitor_ID = visitor.ID GROUP BY visitor.ID HAVING COUNT(DISTINCT visit.Museum_ID) > 1;
SELECT v.ID, v.Name, v.Age FROM visitor v JOIN ( SELECT visitor_ID FROM visit GROUP BY visitor_ID HAVING COUNT(DISTINCT Museum_ID) > 1 ) vt ON v.ID = vt.visitor_ID;

SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Level_of_membership ORDER BY SUM(visit.Total_spent) DESC LIMIT 1;
SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Level_of_membership HAVING SUM(visit.Total_spent) = (SELECT MAX(SUM(Total_spent)) FROM visit GROUP BY visitor_ID);
SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Level_of_membership HAVING SUM(visit.Total_spent) = (SELECT MAX(SUM(Total_spent)) FROM visit GROUP BY visitor_ID);
SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Level_of_membership ORDER BY SUM(visit.Total_spent) DESC LIMIT 1;
SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Level_of_membership ORDER BY SUM(visit.Total_spent) DESC LIMIT 1;
SELECT v.ID, v.Name, v.Level_of_membership FROM visitor v JOIN visit vi ON v.ID = vi.visitor_ID GROUP BY v.ID, v.Name, v.Level_of_membership HAVING SUM(vi.Total_spent) = (SELECT MAX(SUM(Total_spent)) FROM visit GROUP BY visitor_ID);
SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Level_of_membership ORDER BY SUM(visit.Total_spent) DESC LIMIT 1;
SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Level_of_membership ORDER BY SUM(visit.Total_spent) DESC LIMIT 1;
SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Level_of_membership ORDER BY SUM(visit.Total_spent) DESC LIMIT 1;
SELECT visitor.ID, visitor.Name, visitor.Level_of_membership FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID GROUP BY visitor.ID, visitor.Name, visitor.Level_of_membership HAVING SUM(visit.Total_spent) = ( SELECT MAX(spend) FROM ( SELECT SUM(Total_spent) AS spend FROM visit GROUP BY visitor_ID ) AS subquery );

SELECT m.Museum_ID, m.Name FROM museum m JOIN visit v ON m.Museum_ID = v.Museum_ID GROUP BY m.Museum_ID, m.Name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID, museum.Name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID, museum.Name ORDER BY COUNT(visit.visitor_ID) DESC LIMIT 1;
SELECT m.Museum_ID, m.Name FROM museum m JOIN visit v ON v.Museum_ID = m.Museum_ID GROUP BY m.Museum_ID, m.Name ORDER BY COUNT(v.visitor_ID) DESC LIMIT 1;
SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID, museum.Name ORDER BY COUNT(visit.visitor_ID) DESC LIMIT 1;
SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID, museum.Name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID, museum.Name ORDER BY COUNT(visit.visitor_ID) DESC LIMIT 1;
SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID, museum.Name ORDER BY COUNT(visit.visitor_ID) DESC LIMIT 1;
SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID, museum.Name ORDER BY COUNT(visit.visitor_ID) DESC LIMIT 1;
SELECT museum.Museum_ID, museum.Name FROM museum JOIN visit ON museum.Museum_ID = visit.Museum_ID GROUP BY museum.Museum_ID, museum.Name ORDER BY COUNT(visit.visitor_ID) DESC LIMIT 1;

SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit);
SELECT m.Name FROM museum m LEFT JOIN visit v ON m.Museum_ID = v.Museum_ID WHERE v.visitor_ID IS NULL;
SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit);
SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit);
SELECT m.Name FROM museum m LEFT JOIN visit v ON m.Museum_ID = v.Museum_ID WHERE v.visitor_ID IS NULL;
SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit);
SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit);
SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit);
SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit);
SELECT Name FROM museum WHERE Museum_ID NOT IN (SELECT Museum_ID FROM visit);

SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visit.visitor_ID = visitor.ID WHERE visit.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit);
SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE visit.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit);
SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID ORDER BY visit.Num_of_Ticket DESC LIMIT 1;
SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE visit.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit);
SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE visit.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit);
SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE visit.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit);
SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE visit.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit);
SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID ORDER BY visit.Num_of_Ticket DESC LIMIT 1;
SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE visit.Num_of_Ticket = (SELECT MAX(Num_of_Ticket) FROM visit);
SELECT visitor.Name, visitor.Age FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID ORDER BY visit.Num_of_Ticket DESC LIMIT 1;

SELECT SUM(visit.Total_spent) FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE visitor.Level_of_membership = 1;
SELECT SUM(visit.Total_spent) as total_expense FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE visitor.Level_of_membership = 1;
SELECT SUM(visit.Total_spent) as Total_Ticket_Expense FROM visit JOIN visitor on visit.visitor_ID = visitor.ID WHERE visitor.Level_of_membership = 'lv 1';
SELECT SUM(visit.Total_spent) as Total_Ticket_Expense FROM visit JOIN visitor ON visit.visitor_ID = visitor.ID WHERE visitor.Level_of_membership = 'lv 1';
SELECT SUM(visit.Total_spent) as Total_Ticket_Expense FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE visitor.Level_of_membership = 1;
SELECT SUM(v.Total_spent) AS Total_Ticket_Expense FROM visitor AS vis JOIN visit AS v ON v.visitor_ID = vis.ID WHERE vis.Level_of_membership = "lv 1";
SELECT SUM(visit.Total_spent) AS Total_Ticket_Expense FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE visitor.Level_of_membership = 'lv 1';
SELECT SUM(visit.Total_spent) AS Total_Ticket_Expense FROM visitor INNER JOIN visit ON visitor.ID = visit.visitor_ID WHERE visitor.Level_of_membership = 'lv 1';
SELECT SUM(v.Total_spent) as Total_Ticket_Expense FROM visit v JOIN visitor vi ON v.visitor_ID = vi.ID WHERE vi.Level_of_membership = 'lv 1';
SELECT SUM(visit.Total_spent) AS Total_Ticket_Expense FROM visitor JOIN visit ON visitor.ID = visit.visitor_ID WHERE visitor.Level_of_membership = 'lv 1';

SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code ='USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';

SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = "USA";
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';

SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;

SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;

SELECT DISTINCT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.year IN (2013, 2016) GROUP BY players.player_id HAVING COUNT(DISTINCT matches.year) = 2;
SELECT DISTINCT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.year IN (2013, 2016) GROUP BY players.player_id HAVING COUNT(DISTINCT matches.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.year IN (2013, 2016) GROUP BY p.first_name, p.last_name HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.year IN (2013, 2016) GROUP BY players.player_id HAVING COUNT(DISTINCT matches.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.year IN (2013, 2016) GROUP BY players.player_id HAVING COUNT(DISTINCT matches.year) = 2;
SELECT DISTINCT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE year IN (2013, 2016) GROUP BY players.first_name, players.last_name HAVING COUNT(DISTINCT year) = 2;
SELECT DISTINCT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.year IN (2013, 2016) GROUP BY players.player_id HAVING COUNT(DISTINCT matches.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;

SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.year IN (2013, 2016) GROUP BY p.first_name, p.last_name HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m1 ON p.player_id = m1.winner_id AND m1.year = 2013 JOIN matches m2 ON p.player_id = m2.winner_id AND m2.year = 2016;
SELECT DISTINCT p.first_name, p.last_name FROM players p INNER JOIN matches m1 ON p.player_id = m1.winner_id AND m1.year = 2013 INNER JOIN matches m2 ON p.player_id = m2.winner_id AND m2.year = 2016;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m1 ON p.player_id = m1.winner_id AND m1.year = 2013 JOIN matches m2 ON p.player_id = m2.winner_id AND m2.year = 2016;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON m.winner_id = p.player_id WHERE m.year in (2013, 2016) GROUP BY p.first_name, p.last_name HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p INNER JOIN matches m ON p.player_id = m.winner_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p INNER JOIN matches m ON p.player_id = m.winner_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;

SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);

SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);
SELECT COUNT(*) FROM matches WHERE year IN (2013, 2016);

SELECT players.country_code, players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT players.country_code, players.first_name FROM players INNER JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ("WTA Championships", "Australian Open") GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT distinct players.first_name, players.country_code FROM players JOIN matches ON (players.player_id = matches.winner_id) WHERE (matches.tourney_name = 'WTA Championships' AND players.player_id IN (SELECT winner_id from matches where tourney_name = 'Australian Open'));
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT players.first_name, players.country_code FROM players JOIN matches on players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT p.country_code, p.first_name FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY p.player_id HAVING COUNT(DISTINCT m.tourney_name) = 2;
SELECT DISTINCT players.first_name, players.country_code FROM players INNER JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches AS m1 ON players.player_id = m1.winner_id JOIN matches AS m2 ON players.player_id = m2.winner_id WHERE (m1.tourney_name = 'WTA Championships' AND m2.tourney_name = 'Australian Open');

SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE (m.tourney_name = 'WTA Championships' OR m.tourney_name = 'Australian Open');
SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m ON (p.player_id = m.winner_id) WHERE (m.tourney_name = 'WTA Championships' OR m.tourney_name = 'Australian Open') GROUP BY p.player_id HAVING COUNT(DISTINCT m.tourney_name) = 2;
SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m ON m.winner_id = p.player_id WHERE m.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY p.player_id HAVING COUNT(DISTINCT m.tourney_name) = 2;
SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY p.player_id HAVING COUNT(DISTINCT m.tourney_name) = 2;
SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m1 ON p.player_id = m1.winner_id JOIN matches m2 ON p.player_id = m2.winner_id WHERE (m1.tourney_name = 'WTA Championships' AND m2.tourney_name = 'Australian Open');
SELECT DISTINCT players.first_name, players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT players.first_name, players.country_code FROM players INNER JOIN matches ON players.player_id = matches.winner_id WHERE (matches.tourney_name = 'WTA Championships' OR matches.tourney_name = 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY p.player_id HAVING COUNT(DISTINCT m.tourney_name) = 2;
SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m1 ON p.player_id = m1.winner_id JOIN matches m2 ON p.player_id = m2.winner_id WHERE (m1.tourney_name = 'WTA Championships' AND m2.tourney_name = 'Australian Open');
SELECT DISTINCT players.first_name, players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id WHERE (matches.tourney_name = 'WTA Championships' OR matches.tourney_name = 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;

SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);

SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1;
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1;
SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1;
SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1;
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1;
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1;
SELECT first_name, country_code FROM players ORDER BY birth_date LIMIT 1;

SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;

SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;

SELECT first_name, last_name FROM players WHERE hand = 'Left' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'Left' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'Left' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'Left' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'Left' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'Left' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'Left' ORDER BY birth_date;

SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'Left' ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'Left' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;

SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE p.player_id = ( SELECT winner_id FROM ( SELECT winner_id, COUNT(*) AS wins FROM matches GROUP BY winner_id ORDER BY wins DESC LIMIT 1 ) );
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id JOIN matches m ON p.player_id = m.winner_id GROUP BY p.first_name, p.last_name, r.ranking_points ORDER BY COUNT(m.winner_id) DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN matches m on p.player_id = m.winner_id JOIN rankings r on p.player_id = r.player_id GROUP BY p.player_id, p.first_name, p.last_name, r.ranking_points ORDER BY COUNT(m.winner_id) DESC LIMIT 1;
SELECT players.first_name, players.last_name, rankings.ranking_points FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id, players.first_name, players.last_name, rankings.ranking_points ORDER BY COUNT(matches.winner_id) DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id JOIN (SELECT winner_id, COUNT(winner_id) as wins FROM matches GROUP BY winner_id ORDER BY wins DESC LIMIT 1) w on w.winner_id = p.player_id;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN ( SELECT winner_id, COUNT(*) as wins FROM matches GROUP BY winner_id ORDER BY wins DESC LIMIT 1 ) as m ON p.player_id = m.winner_id JOIN rankings r ON r.player_id = p.player_id;
SELECT p.first_name, p.last_name, r.ranking_points FROM matches m JOIN players p ON m.winner_id = p.player_id JOIN rankings r ON r.player_id = p.player_id GROUP BY p.player_id ORDER BY COUNT(*) DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id JOIN ( SELECT winner_id, COUNT(*) as win_count FROM matches GROUP BY winner_id ORDER BY win_count DESC LIMIT 1 ) AS m ON m.winner_id = p.player_id;
SELECT players.first_name, players.last_name, rankings.ranking_points FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY matches.winner_id ORDER BY COUNT(matches.winner_id) DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE p.player_id = ( SELECT winner_id FROM ( SELECT winner_id, COUNT(*) as wins FROM matches GROUP BY winner_id ORDER BY wins DESC LIMIT 1 ) as most_wins );

SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id ORDER BY COUNT(*) DESC, r.ranking_points DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id, p.first_name, p.last_name, r.ranking_points ORDER BY COUNT(*) DESC, r.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name, rankings.ranking_points FROM players JOIN matches on players.player_id = matches.winner_id JOIN rankings on players.player_id = rankings.player_id GROUP BY players.player_id, rankings.ranking_points ORDER BY COUNT(matches.match_num) DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE p.player_id = ( SELECT winner_id FROM matches GROUP BY winner_id ORDER BY COUNT(winner_id) DESC LIMIT 1 );
SELECT players.first_name, players.last_name, rankings.ranking_points FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(matches.winner_id) DESC, rankings.ranking_points DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE p.player_id = ( SELECT winner_id FROM ( SELECT winner_id, COUNT(*) as win_count FROM matches GROUP BY winner_id ORDER BY win_count DESC LIMIT 1 ) as most_wins ) ``` This query first finds the player id of the player who has won the most matches from the matches table. After finding the player id, it then joins the players and rankings table on the player id to get the name of the player and the rank points of the player.;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id JOIN matches m ON p.player_id = m.winner_id GROUP BY p.player_id ORDER BY COUNT(m.match_num) DESC, r.ranking_points DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id ORDER BY COUNT(m.winner_id) DESC, r.ranking_points DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id ORDER BY COUNT(m.winner_id) DESC, r.ranking_points DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p INNER JOIN matches m ON p.player_id = m.winner_id INNER JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id, r.ranking_points ORDER BY COUNT(*) DESC, r.ranking_points DESC LIMIT 1;

SELECT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id WHERE m.tourney_name = "Australian Open" ORDER BY r.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' and rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings);
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND matches.tourney_name = 'Australian Open';
SELECT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id WHERE m.tourney_name = 'Australian Open' ORDER BY r.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' AND rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings);
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;

SELECT players.first_name, players.last_name FROM matches JOIN players ON matches.winner_id = players.player_id JOIN rankings ON rankings.player_id = players.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT p.first_name, p.last_name FROM players p JOIN matches m ON m.winner_id = p.player_id JOIN rankings r ON r.player_id = p.player_id WHERE m.tourney_name = 'Australian Open' ORDER BY r.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name FROM players INNER JOIN matches ON players.player_id = matches.winner_id INNER JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT p.first_name, p.last_name FROM players p JOIN matches m ON m.winner_id = p.player_id JOIN rankings r ON r.player_id = p.player_id WHERE m.tourney_name = 'Australian Open' ORDER BY r.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY matches.winner_rank_points DESC LIMIT 1;
SELECT players.first_name, players.last_name FROM players JOIN matches ON matches.winner_id = players.player_id JOIN rankings ON rankings.player_id = players.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name FROM matches JOIN players ON matches.winner_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;

SELECT p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches INNER JOIN players AS p1 ON matches.winner_id = p1.player_id INNER JOIN players AS p2 ON matches.loser_id = p2.player_id ORDER BY matches.minutes DESC LIMIT 1;
SELECT p1.first_name || ' ' || p1.last_name AS Winner, p2.first_name || ' ' || p2.last_name AS Loser FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id WHERE matches.minutes = (SELECT MAX(minutes) FROM matches);
SELECT p1.first_name || ' ' || p1.last_name as winner_name, p2.first_name || ' ' || p2.last_name as loser_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id WHERE matches.minutes = (SELECT MAX(minutes) FROM matches);
SELECT p1.first_name || ' ' || p1.last_name as loser_name, p2.first_name || ' ' || p2.last_name as winner_name FROM matches JOIN players p1 ON matches.loser_id = p1.player_id JOIN players p2 ON matches.winner_id = p2.player_id WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT pl.first_name || ' ' || pl.last_name AS loser_name, pw.first_name || ' ' || pw.last_name AS winner_name FROM matches m INNER JOIN players pl ON m.loser_id = pl.player_id INNER JOIN players pw ON m.winner_id = pw.player_id WHERE m.minutes = ( SELECT MAX(minutes) FROM matches );
SELECT p1.first_name as winner_first_name, p1.last_name as winner_last_name, p2.first_name as loser_first_name, p2.last_name as loser_last_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id WHERE matches.minutes = (SELECT MAX(minutes) FROM matches);
SELECT p1.first_name || ' ' || p1.last_name as winner_name, p2.first_name || ' ' || p2.last_name as loser_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id WHERE matches.minutes = (SELECT MAX(minutes) FROM matches);
SELECT p1.first_name || ' ' || p1.last_name AS loser_name, p2.first_name || ' ' || p2.last_name AS winner_name FROM matches m JOIN players p1 ON m.loser_id = p1.player_id JOIN players p2 ON m.winner_id = p2.player_id WHERE m.minutes = (SELECT MAX(minutes) FROM matches);
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);

SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT w.first_name AS winner_first_name, w.last_name AS winner_last_name, l.first_name AS loser_first_name, l.last_name AS loser_last_name FROM matches JOIN players w ON matches.winner_id = w.player_id JOIN players l ON matches.loser_id = l.player_id ORDER BY matches.minutes DESC LIMIT 1;
SELECT w.first_name AS winner_first_name, w.last_name AS winner_last_name, l.first_name AS loser_first_name, l.last_name AS loser_last_name FROM matches JOIN players w ON matches.winner_id = w.player_id JOIN players l ON matches.loser_id = l.player_id ORDER BY matches.minutes DESC LIMIT 1;
SELECT winner.first_name AS winner_first_name, winner.last_name AS winner_last_name, loser.first_name AS loser_first_name, loser.last_name AS loser_last_name FROM matches JOIN players AS winner ON matches.winner_id = winner.player_id JOIN players AS loser ON matches.loser_id = loser.player_id WHERE matches.minutes = (SELECT MAX(minutes) FROM matches);
SELECT w.first_name AS winner_first_name, w.last_name AS winner_last_name, l.first_name AS loser_first_name, l.last_name AS loser_last_name FROM matches JOIN players w ON matches.winner_id = w.player_id JOIN players l ON matches.loser_id = l.player_id WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id ORDER BY matches.minutes DESC LIMIT 1;
SELECT P1.first_name || ' ' || P1.last_name AS Winner, P2.first_name || ' ' || P2.last_name AS Loser FROM matches JOIN players P1 ON matches.winner_id = P1.player_id JOIN players P2 ON matches.loser_id = P2.player_id WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches JOIN players AS p1 ON matches.winner_id = p1.player_id JOIN players AS p2 ON matches.loser_id = p2.player_id ORDER BY matches.minutes DESC LIMIT 1;
SELECT (p1.first_name || ' ' || p1.last_name) AS winner_name, (p2.first_name || ' ' || p2.last_name) AS loser_name FROM matches INNER JOIN players p1 ON matches.winner_id = p1.player_id INNER JOIN players p2 ON matches.loser_id = p2.player_id ORDER BY matches.minutes DESC LIMIT 1;
SELECT w.first_name AS winner_first_name, w.last_name AS winner_last_name, l.first_name AS loser_first_name, l.last_name AS loser_last_name FROM matches JOIN players AS w ON matches.winner_id = w.player_id JOIN players AS l ON matches.loser_id = l.player_id ORDER BY matches.minutes DESC LIMIT 1;

SELECT country_code, COUNT(*) as number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) as number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) as number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) as number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) as number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) AS number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) as number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) AS number_of_players FROM players GROUP BY country_code;

SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) as number_of_players FROM players GROUP BY country_code;
SELECT country_code AS nation, COUNT(*) AS number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) AS number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) as number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) as total_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code;
SELECT country_code as Nation, COUNT(*) as Total_Players FROM players GROUP BY country_code;

SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;

SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code, COUNT(player_id) AS num_players FROM players GROUP BY country_code ORDER BY num_players DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code, COUNT(player_id) as player_count FROM players GROUP BY country_code ORDER BY player_count DESC LIMIT 1;
SELECT country_code, COUNT(player_id) as number_of_players FROM players GROUP BY country_code ORDER BY number_of_players DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;

SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;

SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;

SELECT P.first_name, P.last_name, R.ranking FROM players P JOIN matches M ON P.player_id = M.winner_id JOIN rankings R ON P.player_id = R.player_id ORDER BY M.winner_age ASC LIMIT 3;
SELECT p.first_name, p.last_name, r.ranking FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id WHERE m.winner_age is not null ORDER BY m.winner_age ASC LIMIT 3;
SELECT p.first_name, p.last_name, m.winner_rank FROM players p JOIN matches m ON p.player_id = m.winner_id ORDER BY m.winner_age ASC LIMIT 3;
SELECT winner_name, winner_rank FROM (SELECT winner_name, winner_rank, winner_age FROM matches ORDER BY winner_age ASC LIMIT 3) AS youngest_victors;
SELECT p.first_name, p.last_name, m.winner_rank FROM players p JOIN matches m ON p.player_id = m.winner_id ORDER BY m.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.winner_age IS NOT NULL ORDER BY matches.winner_age ASC LIMIT 3;
SELECT p.first_name, p.last_name, r.ranking FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON m.winner_id = r.player_id ORDER BY m.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.winner_age LIMIT 3;
SELECT players.first_name, players.last_name, MIN(rankings.ranking) as rank FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE matches.winner_age IN (SELECT MIN(winner_age) from matches) GROUP BY players.player_id LIMIT 3;
SELECT p.first_name, p.last_name, m.winner_rank FROM players p JOIN matches m ON m.winner_id = p.player_id ORDER BY m.winner_age ASC LIMIT 3;

SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT p.first_name, p.last_name, r.ranking FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id ORDER BY m.winner_age ASC LIMIT 3;
SELECT p.first_name, p.last_name, r.ranking FROM players p INNER JOIN matches m ON p.player_id = m.winner_id INNER JOIN rankings r ON r.player_id = m.winner_id WHERE m.winner_age IS NOT NULL ORDER BY m.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM matches JOIN players ON matches.winner_id = players.player_id JOIN rankings ON rankings.player_id = players.player_id ORDER BY winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.winner_age ASC LIMIT 3;

SELECT COUNT(DISTINCT winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE tourney_name = 'WTA Championships' AND players.hand = 'L';
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L' AND winner_id IN (SELECT player_id FROM players WHERE hand = 'L');
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L' AND winner_id IN (SELECT player_id FROM players);
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L' AND winner_id IN (SELECT player_id FROM players WHERE hand = 'L');
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(DISTINCT winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE tourney_name = 'WTA Championships' AND players.hand = 'L';
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L' AND winner_id IN (SELECT player_id FROM players);
SELECT COUNT(DISTINCT winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE tourney_name = 'WTA Championships' AND players.hand = 'L';
SELECT COUNT(DISTINCT winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE tourney_name = 'WTA Championships' AND hand = 'Left';
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L';

SELECT COUNT(DISTINCT matches.winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'WTA Championships' AND players.hand = 'Left';
SELECT COUNT(DISTINCT m.winner_id) FROM matches m JOIN players p ON m.winner_id = p.player_id WHERE m.tourney_name = 'WTA Championships' AND p.hand = 'L';
SELECT COUNT(*) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'WTA Championships' AND players.hand = 'Left';
SELECT COUNT(DISTINCT matches.winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'WTA Championships' AND players.hand = 'L';
SELECT COUNT(*) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE players.hand = 'L' AND matches.tourney_name = 'WTA Championships';
SELECT COUNT(DISTINCT matches.winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'WTA Championships' AND players.hand = 'L';
SELECT COUNT(DISTINCT winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(DISTINCT matches.winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'WTA Championships' AND players.hand = 'L';
SELECT COUNT(DISTINCT matches.winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'WTA Championships' AND players.hand = 'L';
SELECT COUNT(DISTINCT matches.winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'WTA Championships' AND players.hand = 'Left';

SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';
SELECT COUNT(*) FROM ship WHERE disposition_of_ship = 'Captured';

SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE death.killed > 10;
SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE death.killed > 10 GROUP BY battle.id, battle.name;
SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE death.killed > 10 GROUP BY battle.id, battle.name;
SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE death.killed > 10;
SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE death.killed > 10;
SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE death.killed > 10 GROUP BY battle.id, battle.name;
SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE death.killed > 10 GROUP BY battle.id, battle.name;
SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE death.killed > 10 GROUP BY battle.id, battle.name;
SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE death.killed > 10;
SELECT battle.id, battle.name FROM battle JOIN ship ON battle.id = ship.lost_in_battle JOIN death ON ship.id = death.caused_by_ship_id WHERE death.killed > 10 GROUP BY battle.id, battle.name;

SELECT ship.id, ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY SUM(death.injured) DESC LIMIT 1;
SELECT ship.id, ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY SUM(death.injured) DESC LIMIT 1;
SELECT ship.id, ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY SUM(death.injured) DESC LIMIT 1;
SELECT ship.id, ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY SUM(death.injured) DESC LIMIT 1;
SELECT ship.id, ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY SUM(death.injured) DESC LIMIT 1;
SELECT ship.id, ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY SUM(death.injured) DESC LIMIT 1;
SELECT ship.id, ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY SUM(death.injured) DESC LIMIT 1;
SELECT ship.id, ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY SUM(death.injured) DESC LIMIT 1;
SELECT s.id, s.name FROM ship s JOIN death d ON s.id = d.caused_by_ship_id GROUP BY s.id, s.name ORDER BY SUM(d.injured) DESC LIMIT 1;
SELECT ship.id, ship.name FROM ship JOIN death ON ship.id = death.caused_by_ship_id GROUP BY ship.id, ship.name ORDER BY SUM(death.injured) DESC LIMIT 1;

SELECT battle.name, battle.date FROM battle JOIN ship ON ship.lost_in_battle = battle.id WHERE ship.name IN ('Lettice', 'HMS Atalanta');
SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name IN ('Lettice', 'HMS Atalanta');
SELECT battle.name, battle.date FROM battle JOIN ship ON ship.lost_in_battle = battle.id WHERE ship.name IN ('Lettice', 'HMS Atalanta');
SELECT battle.name, battle.date FROM battle INNER JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name IN ('Lettice', 'HMS Atalanta');
SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name IN ('Lettice', 'HMS Atalanta');
SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name IN ('Lettice', 'HMS Atalanta');
SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name IN ('Lettice', 'HMS Atalanta');
SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name IN ('Lettice', 'HMS Atalanta');
SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name IN ('Lettice', 'HMS Atalanta');
SELECT battle.name, battle.date FROM battle JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.name IN ('Lettice', 'HMS Atalanta');

SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location != 'English Channel' OR ship.location IS NULL;
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location != 'English Channel' OR ship.location IS NULL;
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location != 'English Channel' OR ship.location IS NULL;
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location != 'English Channel' OR ship.location IS NULL;
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location != 'English Channel' OR ship.location IS NULL;
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location != 'English Channel' OR ship.location IS NULL;
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location != 'English Channel' OR ship.location IS NULL;
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location != 'English Channel' OR ship.location IS NULL;
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle WHERE ship.location != 'English Channel' OR ship.location IS NULL;
SELECT battle.name, battle.result, battle.bulgarian_commander FROM battle LEFT JOIN ship ON battle.id = ship.lost_in_battle WHERE (ship.location != 'English Channel' OR ship.location IS NULL) AND ship.id IS NULL;

SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';
SELECT course_description FROM Courses WHERE course_name = 'math';

SELECT course_description FROM Courses WHERE course_name LIKE '%math%';
SELECT course_description FROM Courses WHERE course_name LIKE '%math%';
SELECT course_description FROM Courses WHERE course_name LIKE '%math%';
SELECT course_description FROM Courses WHERE course_name LIKE '%math%';
SELECT course_description FROM Courses WHERE course_name LIKE '%math%';
SELECT course_description FROM Courses WHERE course_name LIKE '%math%';
SELECT course_description FROM Courses WHERE course_name LIKE '%math%';
SELECT course_description FROM Courses WHERE course_name LIKE '%math%';
SELECT course_description FROM Courses WHERE course_name LIKE '%math%';
SELECT course_description FROM Courses WHERE course_name LIKE '%math%';

SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';

SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';
SELECT zip_postcode FROM Addresses WHERE city = 'Port Chelsea';

SELECT s.last_name FROM Students s JOIN Addresses a ON s.current_address_id = a.address_id LEFT JOIN Student_Enrolment se ON s.student_id = se.student_id WHERE a.state_province_county = 'North Carolina' AND se.degree_program_id IS NULL;
SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.degree_program_id IS NULL;
SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.degree_program_id IS NULL;
SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.degree_program_id IS NULL;
SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.degree_program_id IS NULL;
SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.degree_program_id IS NULL;
SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment on Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' and Student_Enrolment.degree_program_id IS NULL;
SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id=Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id=Student_Enrolment.student_id WHERE Addresses.state_province_county='North Carolina' AND Student_Enrolment.degree_program_id IS NULL;
SELECT S.last_name FROM Students S JOIN Addresses A on S.current_address_id=A.address_id LEFT JOIN Student_Enrolment SE on S.student_id=SE.student_id WHERE A.state_province_county='North Carolina' AND SE.degree_program_id IS NULL;
SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.degree_program_id IS NULL;

SELECT S.last_name FROM Students S JOIN Addresses A ON S.current_address_id = A.address_id LEFT JOIN Student_Enrolment SE ON S.student_id = SE.student_id WHERE A.state_province_county = 'North Carolina' AND SE.degree_program_id IS NULL;
SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.degree_program_id IS NULL;
SELECT Students.last_name FROM Students INNER JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.degree_program_id IS NULL;
SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.degree_program_id IS NULL;
SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.degree_program_id IS NULL;
SELECT DISTINCT Students.last_name FROM Students LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id INNER JOIN Addresses ON Students.current_address_id = Addresses.address_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.degree_program_id IS NULL;
SELECT Students.last_name FROM Students LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id JOIN Addresses ON Students.current_address_id = Addresses.address_id WHERE Student_Enrolment.degree_program_id IS NULL AND Addresses.state_province_county = 'North Carolina';
SELECT DISTINCT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.degree_program_id IS NULL;
SELECT Students.last_name FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.student_id IS NULL;
SELECT Students.last_name FROM Students LEFT JOIN Addresses ON Students.current_address_id = Addresses.address_id LEFT JOIN Student_Enrolment ON Students.student_id = Student_Enrolment.student_id WHERE Addresses.state_province_county = 'North Carolina' AND Student_Enrolment.degree_program_id IS NULL;

SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';

SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';
SELECT cell_mobile_number FROM Students WHERE first_name = 'Timmothy' AND last_name = 'Ward';

SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_first_registered LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered = (SELECT MIN(date_first_registered) FROM Students);

SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students WHERE date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students WHERE date_first_registered IS NOT NULL AND date_left IS NOT NULL ORDER BY date_left ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students ORDER BY date_left ASC LIMIT 1;

SELECT first_name, middle_name, last_name FROM Students WHERE date_left = (SELECT MIN(date_left) FROM Students);
SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students WHERE Students.date_left IS NOT NULL ORDER BY Students.date_left ASC LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students WHERE date_left = (SELECT MIN(date_left) FROM Students);
SELECT first_name, middle_name, last_name FROM Students WHERE date_left = (SELECT MIN(date_left) FROM Students);
SELECT Students.first_name, Students.middle_name, Students.last_name FROM Students ORDER BY Students.date_left LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students WHERE date_left = (SELECT MIN(date_left) FROM Students) LIMIT 1;
SELECT first_name, middle_name, last_name FROM Students WHERE date_left = ( SELECT MIN(date_left) FROM Students WHERE date_left IS NOT NULL );
SELECT first_name, middle_name, last_name FROM Students WHERE date_left = (SELECT MIN(date_left) FROM Students);
SELECT first_name, middle_name, last_name FROM Students WHERE date_left = ( SELECT MIN(date_left) FROM Students WHERE date_left IS NOT NULL );
SELECT first_name, middle_name, last_name FROM Students WHERE date_left = (SELECT MIN(date_left) FROM Students);

SELECT current_address_id, line_1, line_2, line_3, COUNT(student_id) AS student_count FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id GROUP BY current_address_id, line_1, line_2, line_3 ORDER BY student_count DESC LIMIT 1;
SELECT current_address_id, line_1, line_2, line_3, COUNT(student_id) as student_count FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id GROUP BY current_address_id, line_1, line_2, line_3 ORDER BY student_count DESC LIMIT 1;
SELECT Addresses.address_id, Addresses.line_1, Addresses.line_2, Addresses.line_3, COUNT(Students.student_id) AS student_count FROM Addresses INNER JOIN Students ON Addresses.address_id = Students.current_address_id GROUP BY Addresses.address_id ORDER BY student_count DESC LIMIT 1;
SELECT current_address_id, line_1, line_2, line_3, COUNT(*) as number_of_students FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id GROUP BY current_address_id, line_1, line_2, line_3 ORDER BY number_of_students DESC LIMIT 1;
SELECT A.address_id, A.line_1, A.line_2, A.line_3 FROM Addresses A JOIN Students S ON S.current_address_id = A.address_id GROUP BY A.address_id, A.line_1, A.line_2, A.line_3 ORDER BY COUNT(S.student_id) DESC LIMIT 1;
SELECT current_address_id, line_1, line_2, line_3, COUNT(*) AS student_count FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id GROUP BY current_address_id ORDER BY student_count DESC LIMIT 1;
SELECT Addresses.address_id, Addresses.line_1, Addresses.line_2, Addresses.line_3, count(*) as student_count FROM Students INNER JOIN Addresses ON Students.current_address_id = Addresses.address_id GROUP BY Addresses.address_id, Addresses.line_1, Addresses.line_2, Addresses.line_3 ORDER BY student_count DESC LIMIT 1;
SELECT address_id, line_1, line_2, line_3, COUNT(student_id) AS number_of_students FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id GROUP BY address_id, line_1, line_2, line_3 ORDER BY number_of_students DESC LIMIT 1;
SELECT current_address_id, line_1, line_2, line_3, COUNT(student_id) AS num_students FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id GROUP BY current_address_id ORDER BY num_students DESC LIMIT 1;
SELECT current_address_id, line_1, line_2, line_3 FROM Students JOIN Addresses ON Students.current_address_id = Addresses.address_id GROUP BY current_address_id, line_1, line_2, line_3 ORDER BY COUNT(*) DESC LIMIT 1;

SELECT address_id, line_1, line_2, count(student_id) as student_count FROM Addresses LEFT JOIN Students ON Addresses.address_id = Students.current_address_id GROUP BY address_id, line_1, line_2 ORDER BY student_count DESC LIMIT 1;
SELECT A.address_id, A.line_1, A.line_2 FROM Addresses A INNER JOIN Students S ON A.address_id = S.current_address_id GROUP BY A.address_id, A.line_1, A.line_2 ORDER BY COUNT(S.student_id) DESC LIMIT 1;
SELECT Addresses.address_id, Addresses.line_1, Addresses.line_2 FROM Addresses JOIN Students ON Addresses.address_id = Students.current_address_id GROUP BY Addresses.address_id, Addresses.line_1, Addresses.line_2 ORDER BY COUNT(*) DESC LIMIT 1;
SELECT a.address_id, a.line_1, a.line_2 FROM Addresses a JOIN Students s ON a.address_id = s.current_address_id GROUP BY a.address_id, a.line_1, a.line_2 ORDER BY COUNT(s.student_id) DESC LIMIT 1;
SELECT A.address_id, A.line_1, A.line_2 FROM Addresses A JOIN Students S ON A.address_id = S.current_address_id GROUP BY A.address_id, A.line_1, A.line_2 ORDER BY COUNT(S.student_id) DESC LIMIT 1;
SELECT a.address_id, a.line_1, a.line_2 FROM Addresses a JOIN Students s ON a.address_id = s.current_address_id GROUP BY a.address_id, a.line_1, a.line_2 ORDER BY COUNT(s.student_id) DESC LIMIT 1;
SELECT A.address_id, A.line_1, A.line_2, COUNT(S.student_id) AS student_count FROM Students S JOIN Addresses A ON S.current_address_id = A.address_id GROUP BY A.address_id, A.line_1, A.line_2 ORDER BY student_count DESC LIMIT 1;
SELECT A.address_id, A.line_1, A.line_2 FROM Addresses A INNER JOIN Students S ON A.address_id = S.current_address_id GROUP BY A.address_id, A.line_1, A.line_2 ORDER BY COUNT(S.student_id) DESC LIMIT 1;
SELECT A.address_id, A.line_1, A.line_2 FROM Addresses A JOIN Students S ON A.address_id = S.current_address_id GROUP BY A.address_id, A.line_1, A.line_2 ORDER BY COUNT(*) DESC LIMIT 1;
SELECT address_id, line_1, line_2 FROM Addresses WHERE address_id IN ( SELECT current_address_id FROM Students GROUP BY current_address_id ORDER BY COUNT(student_id) DESC LIMIT 1 );

SELECT DISTINCT s.semester_name FROM Semesters s JOIN Student_Enrolment se ON s.semester_id = se.semester_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Master', 'Bachelor') GROUP BY s.semester_name HAVING COUNT(DISTINCT dp.degree_summary_name) = 2;
SELECT DISTINCT S.semester_name, S.semester_id FROM Semesters S JOIN Student_Enrolment SE ON S.semester_id = SE.semester_id JOIN Degree_Programs DP ON DP.degree_program_id = SE.degree_program_id WHERE DP.degree_summary_name IN ('Master', 'Bachelor') GROUP BY S.semester_id, S.semester_name HAVING COUNT(DISTINCT DP.degree_summary_name) = 2;
SELECT DISTINCT s.semester_name FROM Semesters s JOIN Student_Enrolment se ON s.semester_id = se.semester_id JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ("Master", "Bachelor") HAVING COUNT(DISTINCT dp.degree_summary_name) = 2;
SELECT DISTINCT(Semesters.semester_name) FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name IN ('Master','Bachelor') GROUP BY Semesters.semester_name HAVING COUNT(DISTINCT Degree_Programs.degree_summary_name) = 2;
SELECT DISTINCT Semesters.semester_name FROM Semesters INNER JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id INNER JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name IN ('Master', 'Bachelor');
SELECT DISTINCT semester_name FROM Semesters WHERE semester_id IN ( SELECT DISTINCT semester_id FROM Student_Enrolment WHERE degree_program_id IN ( SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name LIKE '%Master%' OR degree_summary_name LIKE '%Bachelor%' ) );
SELECT DISTINCT(Semesters.semester_name) FROM Semesters JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name IN ('Master', 'Bachelor');
SELECT DISTINCT s.semester_name FROM Semesters s INNER JOIN Student_Enrolment se ON s.semester_id = se.semester_id INNER JOIN Degree_Programs dp ON se.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Master', 'Bachelor') GROUP BY s.semester_name HAVING COUNT(DISTINCT dp.degree_summary_name) = 2;
SELECT semester_name FROM Semesters INNER JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id INNER JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE degree_summary_name IN ('Master', 'Bachelor') GROUP BY semester_name HAVING COUNT(DISTINCT degree_summary_name) = 2;
SELECT Semesters.semester_name FROM Semesters INNER JOIN Student_Enrolment ON Semesters.semester_id = Student_Enrolment.semester_id INNER JOIN Degree_Programs ON Student_Enrolment.degree_program_id = Degree_Programs.degree_program_id WHERE Degree_Programs.degree_summary_name IN ('Master', 'Bachelor') GROUP BY Semesters.semester_name HAVING COUNT(DISTINCT Degree_Programs.degree_summary_name) = 2;

SELECT DISTINCT se.semester_id FROM Semesters se INNER JOIN Student_Enrolment s_en ON se.semester_id = s_en.semester_id INNER JOIN Degree_Programs dp ON s_en.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY se.semester_id HAVING COUNT(DISTINCT dp.degree_summary_name) = 2;
SELECT DISTINCT se.semester_id FROM Semesters se JOIN Student_Enrolment se_enr ON se.semester_id = se_enr.semester_id JOIN Degree_Programs deg_prog ON se_enr.degree_program_id = deg_prog.degree_program_id WHERE deg_prog.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY se.semester_id HAVING COUNT(DISTINCT deg_prog.degree_summary_name) > 1;
SELECT DISTINCT se.semester_id FROM Semesters se JOIN Student_Enrolment st_en ON se.semester_id = st_en.semester_id JOIN Degree_Programs dp ON st_en.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY se.semester_id HAVING COUNT(DISTINCT dp.degree_summary_name) = 2;
SELECT DISTINCT se.semester_id FROM Semesters AS se JOIN Student_Enrolment AS en ON se.semester_id = en.semester_id JOIN Degree_Programs AS dp ON en.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY se.semester_id HAVING COUNT(DISTINCT dp.degree_summary_name) = 2;
SELECT DISTINCT(SE.semester_id) FROM Semesters SE JOIN Student_Enrolment STEN ON STEN.semester_id = SE.semester_id JOIN Degree_Programs DP ON DP.degree_program_id = STEN.degree_program_id WHERE DP.degree_summary_name IN ('Masters', 'Bachelors');
SELECT distinct semester_id FROM Student_Enrolment WHERE degree_program_id IN ( SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name IN ('Masters', 'Bachelors'));
SELECT DISTINCT se.semester_id FROM Semesters se JOIN Student_Enrolment en ON se.semester_id = en.semester_id JOIN Degree_Programs dp on en.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') HAVING COUNT(DISTINCT dp.degree_summary_name) = 2;
SELECT DISTINCT se.semester_id FROM Semesters se JOIN Student_Enrolment enroll ON se.semester_id = enroll.semester_id JOIN Degree_Programs dp ON enroll.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY se.semester_id HAVING COUNT(DISTINCT dp.degree_summary_name) = 2;
SELECT DISTINCT(se.semester_id) FROM Semesters se JOIN Student_Enrolment se_en ON se.semester_id = se_en.semester_id JOIN Degree_Programs dp ON se_en.degree_program_id = dp.degree_program_id WHERE dp.degree_summary_name IN ('Masters', 'Bachelors') GROUP BY se.semester_id HAVING COUNT(DISTINCT dp.degree_summary_name) > 1;
SELECT DISTINCT semester_id FROM Student_Enrolment WHERE degree_program_id IN ( SELECT degree_program_id FROM Degree_Programs WHERE degree_summary_name IN ('Masters', 'Bachelors') );

SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582';
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582';
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582';
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582';
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582';
SELECT first_name FROM Students S JOIN Addresses A ON S.permanent_address_id = A.address_id WHERE A.country = 'Haiti' OR S.cell_mobile_number = '09700166582';
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE country = 'Haiti' OR cell_mobile_number = '09700166582';
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE country = 'Haiti' OR cell_mobile_number = '09700166582';
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582';
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582';

SELECT first_name FROM Students s JOIN Addresses a ON s.permanent_address_id = a.address_id WHERE a.country = 'Haiti' OR s.cell_mobile_number = '09700166582';
SELECT first_name FROM Students INNER JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582';
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582';
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = "Haiti" OR Students.cell_mobile_number = "09700166582";
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582';
SELECT first_name FROM Students WHERE permanent_address_id IN (SELECT address_id FROM Addresses WHERE country = 'Haiti') OR cell_mobile_number = '09700166582';
SELECT first_name FROM Students LEFT JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE (country = 'Haiti' OR cell_mobile_number = '09700166582');
SELECT first_name FROM Students INNER JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582';
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE Addresses.country = 'Haiti' OR Students.cell_mobile_number = '09700166582';
SELECT first_name FROM Students JOIN Addresses ON Students.permanent_address_id = Addresses.address_id WHERE country = 'Haiti' OR cell_mobile_number = '09700166582';

SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;

SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;
SELECT Title FROM Cartoon ORDER BY Title ASC;

SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT * FROM Cartoon WHERE Directed_by = 'Ben Jones';

SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones';

SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuhr';

SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuh';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuh';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuh';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuh';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuh';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuh';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuh';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuh';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuh';
SELECT COUNT(*) FROM Cartoon WHERE Written_by = 'Joseph Kuh';

SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date ASC;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by, Original_air_date FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;

SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;
SELECT Title, Directed_by FROM Cartoon ORDER BY Original_air_date;

SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';

SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by='Ben Jones' OR Directed_by='Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';
SELECT Title FROM Cartoon WHERE Directed_by = 'Ben Jones' OR Directed_by = 'Brandon Vietti';

SELECT Country, COUNT(*) as Number_of_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_Channels DESC LIMIT 1;
SELECT Country, COUNT(*) as Number_of_TV_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_TV_Channels DESC LIMIT 1;
SELECT Country, COUNT(*) as Number_of_TV_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_TV_Channels DESC LIMIT 1;
SELECT Country, COUNT(*) as Number_of_TV_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_TV_Channels DESC LIMIT 1;
SELECT Country, COUNT(*) AS Number_of_TV_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_TV_Channels DESC LIMIT 1;
SELECT Country, COUNT(*) as Number_of_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_Channels DESC LIMIT 1;
SELECT Country, COUNT(*) as Number_of_TV_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_TV_Channels DESC LIMIT 1;
SELECT Country, COUNT(*) as NumberOfChannels FROM TV_Channel GROUP BY Country ORDER BY NumberOfChannels DESC LIMIT 1;
SELECT Country, COUNT(*) as NumberOfChannels FROM TV_Channel GROUP BY Country ORDER BY NumberOfChannels DESC LIMIT 1;
SELECT Country, COUNT(*) as NumberOfChannels FROM TV_Channel GROUP BY Country ORDER BY NumberOfChannels DESC LIMIT 1;

SELECT Country, COUNT(*) as Number_of_TV_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_TV_Channels DESC LIMIT 1;
SELECT Country, COUNT(*) as Number_of_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_Channels DESC LIMIT 1;
SELECT Country, COUNT(*) as num_channels FROM TV_Channel GROUP BY Country ORDER BY num_channels DESC LIMIT 1;
SELECT Country, COUNT(*) as NumberOfChannels FROM TV_Channel GROUP BY Country ORDER BY NumberOfChannels DESC LIMIT 1;
SELECT Country, COUNT(*) as NumberOfChannels FROM TV_Channel GROUP BY Country ORDER BY NumberOfChannels DESC LIMIT 1;
SELECT Country, COUNT(*) as Total_Channels FROM TV_Channel GROUP BY Country ORDER BY Total_Channels DESC LIMIT 1;
SELECT Country, COUNT(*) as Number_of_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_Channels DESC LIMIT 1;
SELECT Country, COUNT(*) AS Num_Channels FROM TV_Channel GROUP BY Country ORDER BY Num_Channels DESC LIMIT 1;
SELECT Country, COUNT(*) as Number_of_Channels FROM TV_Channel GROUP BY Country ORDER BY Number_of_Channels DESC LIMIT 1;
SELECT Country, COUNT(*) as Channel_Count FROM TV_Channel GROUP BY Country ORDER BY Channel_Count DESC LIMIT 1;

SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Content FROM TV_Channel WHERE series_name = "Sky Radio";

SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';
SELECT Content FROM TV_Channel WHERE series_name = 'Sky Radio';

SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";
SELECT Package_Option FROM TV_Channel WHERE series_name = "Sky Radio";

SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';

SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';
SELECT COUNT(*) FROM TV_Channel WHERE Language = 'English';

SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = 'The Rise of the Blue Beetle!';
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = 'The Rise of the Blue Beetle!';
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = 'The Rise of the Blue Beetle!';
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = 'The Rise of the Blue Beetle!';
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = "The Rise of the Blue Beetle!";
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = 'The Rise of the Blue Beetle!';
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = 'The Rise of the Blue Beetle!';
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = 'The Rise of the Blue Beetle!';
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = 'The Rise of the Blue Beetle!';
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = 'The Rise of the Blue Beetle!';

SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = "The Rise of the Blue Beetle";
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = "The Rise of the Blue Beetle";
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = "The Rise of the Blue Beetle";
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = "The Rise of the Blue Beetle";
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = "The Rise of the Blue Beetle";
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = "The Rise of the Blue Beetle";
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = "The Rise of the Blue Beetle";
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Title = "The Rise of the Blue Beetle";
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = "The Rise of the Blue Beetle";
SELECT TV_Channel.series_name FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Title = "The Rise of the Blue Beetle";

SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT Cartoon.Title FROM Cartoon INNER JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Cartoon.Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";

SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio');
SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Title FROM Cartoon WHERE Channel IN (SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio');
SELECT Title FROM Cartoon WHERE Channel IN ( SELECT id FROM TV_Channel WHERE series_name = 'Sky Radio' );
SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Title FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';

SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime" UNION SELECT Original_air_date FROM Cartoon WHERE Title = "A Love of a Lifetime";
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime" UNION SELECT Original_air_date FROM Cartoon WHERE Title = "A Love of a Lifetime";
SELECT Air_Date FROM TV_series WHERE series_name = "A Love of a Lifetime" UNION SELECT Original_air_date FROM Cartoon WHERE Title = "A Love of a Lifetime";
SELECT Original_air_date FROM Cartoon WHERE Title = "A Love of a Lifetime";
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime" UNION SELECT Original_air_date as Air_Date FROM Cartoon WHERE Title = "A Love of a Lifetime";
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime" UNION SELECT Original_air_date FROM Cartoon WHERE Title = "A Love of a Lifetime";
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime" UNION SELECT Original_air_date FROM Cartoon WHERE Title = "A Love of a Lifetime";
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime' UNION SELECT Original_air_date FROM Cartoon WHERE Title = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE Episode = "A Love of a Lifetime" UNION SELECT Original_air_date FROM Cartoon WHERE Title = "A Love of a Lifetime";
SELECT Original_air_date FROM Cartoon WHERE Title = "A Love of a Lifetime";

SELECT Air_Date FROM TV_series WHERE series_name = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE series_name = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE series_name = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE series_name = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE series_name = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE series_name = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE Episode = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE series_name = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE series_name = 'A Love of a Lifetime';
SELECT Air_Date FROM TV_series WHERE series_name = 'A Love of a Lifetime';

SELECT Weekly_Rank FROM TV_series INNER JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series JOIN TV_Channel ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.series_name = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series INNER JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series INNER JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series INNER JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE series_name = 'A Love of a Lifetime';
SELECT Weekly_Rank FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'A Love of a Lifetime';

SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
SELECT Weekly_Rank FROM TV_series WHERE series_name = "A Love of a Lifetime";
SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
SELECT Weekly_Rank FROM TV_series WHERE series_name = "A Love of a Lifetime";
SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";
SELECT Weekly_Rank FROM TV_series WHERE series_name = "A Love of a Lifetime";
SELECT Weekly_Rank FROM TV_series WHERE Episode = "A Love of a Lifetime";

SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = "A Love of a Lifetime";
SELECT TV_Channel.series_name FROM TV_Channel INNER JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = "A Love of a Lifetime";
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = "A Love of a Lifetime";
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = "A Love of a Lifetime";
SELECT TV_Channel.series_name FROM TV_Channel INNER JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = "A Love of a Lifetime";
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = "A Love of a Lifetime";
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = "A Love of a Lifetime";
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = "A Love of a Lifetime";
SELECT TV_Channel.series_name FROM TV_Channel JOIN TV_series ON TV_Channel.id = TV_series.Channel WHERE TV_series.Episode = "A Love of a Lifetime";
SELECT TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.id IN ( SELECT TV_series.Channel FROM TV_series WHERE TV_series.Episode = "A Love of a Lifetime" ) OR TV_Channel.id IN ( SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Title = "A Love of a Lifetime" );

SELECT series_name FROM TV_Channel WHERE Content = "A Love of a Lifetime";
SELECT series_name FROM TV_Channel WHERE Content = "A Love of a Lifetime";
SELECT series_name FROM TV_Channel WHERE Content = "A Love of a Lifetime";
SELECT series_name FROM TV_Channel WHERE Content = "A Love of a Lifetime";
SELECT series_name FROM TV_Channel WHERE Content = "A Love of a Lifetime";
SELECT series_name FROM TV_Channel WHERE id IN ( SELECT Channel FROM TV_series WHERE Episode = "A Love of a Lifetime");
SELECT series_name FROM TV_Channel WHERE Content = "A Love of a Lifetime";
SELECT series_name FROM TV_Channel WHERE Content = "A Love of a Lifetime";
SELECT series_name FROM TV_Channel WHERE Content = "A Love of a Lifetime";
SELECT series_name FROM TV_Channel WHERE Content = "A Love of a Lifetime";

SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = "Sky Radio";
SELECT TV_series.Episode FROM TV_series JOIN TV_Channel ON TV_Channel.id = TV_series.Channel WHERE TV_Channel.series_name = "Sky Radio";

SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Episode FROM TV_series INNER JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Episode FROM TV_series INNER JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';
SELECT Episode FROM TV_series JOIN TV_Channel ON TV_series.Channel = TV_Channel.id WHERE TV_Channel.series_name = 'Sky Radio';

SELECT Directed_by, COUNT(*) as Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) AS Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) as number_of_cartoons FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) as Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) as Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) as Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) as Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;

SELECT Directed_by, COUNT(*) as Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) as Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) as Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) as Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) as Number_of_Cartoons_Created FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) as count FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) as Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) as Total_Cartoons FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) AS Number_of_Cartoons FROM Cartoon GROUP BY Directed_by;
SELECT Directed_by, COUNT(*) as Count FROM Cartoon GROUP BY Directed_by;

SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;

SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;
SELECT Production_code, Channel FROM Cartoon ORDER BY Original_air_date DESC LIMIT 1;

SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = TRUE;
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT Package_Option, series_name FROM TV_Channel WHERE Hight_definition_TV = true;
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';

SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';
SELECT TV_Channel.Package_Option, TV_Channel.series_name FROM TV_Channel WHERE TV_Channel.Hight_definition_TV = 'Yes';

SELECT DISTINCT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM Cartoon INNER JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM TV_Channel INNER JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM TV_Channel INNER JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'Todd Casey';

SELECT DISTINCT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT Country FROM TV_Channel WHERE id IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey');
SELECT DISTINCT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey';
SELECT DISTINCT TV_Channel.Country FROM Cartoon JOIN TV_Channel ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Written_by = 'Todd Casey';

SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey');
SELECT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey');
SELECT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey');
SELECT Country FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey' );
SELECT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey');
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey' );
SELECT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey');
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey' );
SELECT Country FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey' );
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey' );

SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey' );
SELECT Country FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey' );
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey' );
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey' );
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey');
SELECT Country FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey');
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey' );
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey' );
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey' );
SELECT DISTINCT Country FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Written_by = 'Todd Casey' );

SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel INNER JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON Cartoon.Channel = TV_Channel.id WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');

SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel INNER JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon on TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');
SELECT TV_Channel.series_name, TV_Channel.Country FROM TV_Channel JOIN Cartoon ON TV_Channel.id = Cartoon.Channel WHERE Cartoon.Directed_by IN ('Ben Jones', 'Michael Chang');

SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';

SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';
SELECT Pixel_aspect_ratio_PAR, Country FROM TV_Channel WHERE Language != 'English';

SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2;
SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2;
SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2;
SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2;
SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2;
SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2;
SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2;
SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2;
SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(id) > 2;
SELECT id FROM TV_Channel GROUP BY Country HAVING COUNT(*) > 2;

SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones');
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones');
SELECT id FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones');
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones');
SELECT id FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT id FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT id FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones');
SELECT id FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );

SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones');
SELECT id FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT id FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT id FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT id FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones');
SELECT id FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones');
SELECT id FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = "Ben Jones" );
SELECT id FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones');

SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT Package_Option FROM TV_Channel WHERE id NOT IN (SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones');

SELECT TV_Channel.Package_Option FROM TV_Channel WHERE NOT EXISTS ( SELECT 1 FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones' AND Cartoon.Channel = TV_Channel.id );
SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.id NOT IN ( SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones' );
SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.id NOT IN ( SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones' );
SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.id NOT IN ( SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones' );
SELECT TV_Channel.Package_Option FROM TV_Channel WHERE NOT EXISTS ( SELECT 1 FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones' AND Cartoon.Channel = TV_Channel.id );
SELECT Package_Option FROM TV_Channel WHERE id NOT IN ( SELECT Channel FROM Cartoon WHERE Directed_by = 'Ben Jones' );
SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.id NOT IN (SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones');
SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.id NOT IN ( SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones' );
SELECT TV_Channel.Package_Option FROM TV_Channel WHERE TV_Channel.id NOT IN ( SELECT Cartoon.Channel FROM Cartoon WHERE Cartoon.Directed_by = 'Ben Jones' );

SELECT people.Name, poker_player.Earnings FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC;
SELECT people.Name, poker_player.Earnings FROM poker_player INNER JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC;
SELECT people.Name, poker_player.Earnings FROM poker_player INNER JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC;
SELECT P.Name, PP.Earnings FROM poker_player AS PP JOIN people AS P ON PP.People_ID = P.People_ID ORDER BY PP.Earnings DESC;
SELECT pp.Poker_Player_ID, p.Name, pp.Earnings FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY pp.Earnings DESC;
SELECT people.Name, poker_player.Earnings FROM poker_player INNER JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC;
SELECT people.Name, poker_player.Earnings FROM poker_player INNER JOIN people ON poker_player.People_ID=people.People_ID ORDER BY poker_player.Earnings DESC;
SELECT people.Name, poker_player.Earnings FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC;
SELECT people.Name, poker_player.Earnings FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC;
SELECT people.Name, poker_player.Earnings FROM poker_player INNER JOIN people ON poker_player.People_ID = people.People_ID ORDER BY poker_player.Earnings DESC;

SELECT pp.Money_Rank FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player pp INNER JOIN people p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT Money_Rank FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID ORDER BY Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player pp INNER JOIN people p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE p.Height = (SELECT MAX(Height) FROM people);

SELECT pp.Money_Rank FROM poker_player AS pp JOIN people AS p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player AS pp JOIN people AS p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE p.Height = (SELECT MAX(Height) FROM people);
SELECT pp.Money_Rank FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player pp JOIN people p on pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT p.Money_Rank FROM poker_player p JOIN people pe ON p.People_ID = pe.People_ID ORDER BY pe.Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;
SELECT pp.Money_Rank FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID WHERE p.Height = (SELECT MAX(Height) FROM people);
SELECT pp.Money_Rank FROM poker_player pp JOIN people p ON pp.People_ID = p.People_ID ORDER BY p.Height DESC LIMIT 1;

SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player INNER JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;

SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;
SELECT AVG(poker_player.Earnings) FROM poker_player JOIN people ON poker_player.People_ID = people.People_ID WHERE people.Height > 200;

SELECT Nationality, COUNT(*) as NumberOfPeople FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) as Number_of_People FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) as Number_of_People FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) as NumberOfPeople FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) as Number_Of_People FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) as Number_of_People FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) as Number_of_People FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) AS NumberOfPeople FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) as NumberOfPeople FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality;

SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) as NumberOfPeople FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) as Total_People FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality;
SELECT Nationality, COUNT(*) FROM people GROUP BY Nationality;

SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2;
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2;
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2;
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2;
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2;
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2;
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2;
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2;
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2;
SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(People_ID) >= 2;

SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';

SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';
SELECT Name FROM people WHERE Nationality != 'Russia';

SELECT MAX(created) AS LastVoteDate FROM VOTES WHERE state = 'CA';
SELECT MAX(created) AS last_date_created FROM VOTES WHERE state = 'CA';
SELECT MAX(created) as last_date_created FROM VOTES WHERE state = 'CA';
SELECT MAX(created) AS last_vote_date FROM VOTES WHERE state = 'CA';
SELECT MAX(created) FROM VOTES WHERE state='CA';
SELECT MAX(created) as last_date_created FROM VOTES INNER JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state WHERE AREA_CODE_STATE.state = 'CA';
SELECT MAX(created) AS LastDate FROM VOTES WHERE state = 'CA';
SELECT MAX(created) AS last_date_created FROM VOTES JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state WHERE AREA_CODE_STATE.state = 'CA';
SELECT MAX(created) AS last_date_created FROM VOTES WHERE state = 'CA';
SELECT MAX(created) AS last_date_created FROM VOTES WHERE state = 'CA';

SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) as totalCount FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) AS Number_Of_Votes FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES INNER JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state WHERE VOTES.state IN ('NY', 'CA');
SELECT COUNT(*) FROM VOTES WHERE state IN ('NY', 'CA');

SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling';
SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling';
SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling';
SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling';
SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling';
SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling';
SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling';
SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling';
SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling';
SELECT VOTES.created, VOTES.state, VOTES.phone_number FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name = 'Tabatha Gehling';

SELECT ACS.area_code FROM AREA_CODE_STATE ACS WHERE EXISTS ( SELECT 1 FROM VOTES V INNER JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Tabatha Gehling' AND V.state = ACS.state ) AND EXISTS ( SELECT 1 FROM VOTES V INNER JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name = 'Kelly Clauss' AND V.state = ACS.state ) GROUP BY ACS.area_code ```;
SELECT DISTINCT ACS.area_code FROM AREA_CODE_STATE ACS INNER JOIN VOTES V ON ACS.state = V.state INNER JOIN CONTESTANTS C1 ON V.contestant_number = C1.contestant_number AND C1.contestant_name = 'Tabatha Gehling' WHERE EXISTS ( SELECT 1 FROM VOTES V2 INNER JOIN CONTESTANTS C2 ON V2.contestant_number = C2.contestant_number AND C2.contestant_name = 'Kelly Clauss' WHERE V2.state = ACS.state );
SELECT DISTINCT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss') GROUP BY AREA_CODE_STATE.area_code HAVING COUNT(DISTINCT CONTESTANTS.contestant_name) = 2;
SELECT DISTINCT AREA_CODE_STATE.area_code FROM VOTES JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state WHERE CONTESTANTS.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss') GROUP BY AREA_CODE_STATE.area_code HAVING COUNT(DISTINCT CONTESTANTS.contestant_name) = 2;
SELECT DISTINCT ACS.area_code FROM AREA_CODE_STATE ACS WHERE EXISTS( SELECT 1 FROM VOTES V INNER JOIN CONTESTANTS C ON C.contestant_number = V.contestant_number WHERE ACS.state = V.state AND C.contestant_name = 'Tabatha Gehling' ) AND EXISTS( SELECT 1 FROM VOTES V INNER JOIN CONTESTANTS C ON C.contestant_number = V.contestant_number WHERE ACS.state = V.state AND C.contestant_name = 'Kelly Clauss' );
SELECT DISTINCT ACS.area_code FROM AREA_CODE_STATE ACS JOIN VOTES V ON ACS.state = V.state JOIN CONTESTANTS C ON V.contestant_number = C.contestant_number WHERE C.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss') GROUP BY ACS.area_code HAVING COUNT(DISTINCT C.contestant_name) = 2;
SELECT DISTINCT acs.area_code FROM AREA_CODE_STATE acs JOIN VOTES v ON acs.state = v.state JOIN CONTESTANTS c ON v.contestant_number = c.contestant_number WHERE c.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss') GROUP BY acs.area_code HAVING COUNT(DISTINCT c.contestant_name) = 2;
SELECT DISTINCT AREA_CODE_STATE.area_code FROM AREA_CODE_STATE JOIN VOTES ON AREA_CODE_STATE.state = VOTES.state JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss') GROUP BY AREA_CODE_STATE.area_code HAVING COUNT(DISTINCT CONTESTANTS.contestant_name) = 2 ```;
SELECT DISTINCT acs.area_code FROM VOTES v JOIN CONTESTANTS c on v.contestant_number = c.contestant_number JOIN AREA_CODE_STATE acs on v.state = acs.state WHERE c.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss') GROUP BY acs.area_code HAVING COUNT(DISTINCT c.contestant_name) = 2;
SELECT DISTINCT AREA_CODE_STATE.area_code FROM VOTES INNER JOIN AREA_CODE_STATE ON VOTES.state = AREA_CODE_STATE.state INNER JOIN CONTESTANTS ON VOTES.contestant_number = CONTESTANTS.contestant_number WHERE CONTESTANTS.contestant_name IN ('Tabatha Gehling', 'Kelly Clauss') GROUP BY AREA_CODE_STATE.area_code HAVING COUNT(DISTINCT CONTESTANTS.contestant_name) = 2;

SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;

SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;
SELECT Name FROM country WHERE IndepYear > 1950;

SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%';
SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%republic%';
SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%';
SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%';
SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%republic%';
SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%republic%';
SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%';
SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%';
SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%republic%';
SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%Republic%';

SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm LIKE '%republic%';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';
SELECT COUNT(*) FROM country WHERE GovernmentForm = 'Republic';

SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) as total_surface_area FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) AS TotalSurfaceArea FROM country WHERE Region = 'Caribbean';

SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Carribean';
SELECT SUM(SurfaceArea) AS TotalSurfaceArea FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Region = 'Caribbean';
SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Carribean';
SELECT SUM(SurfaceArea) FROM country WHERE Continent = 'Carribean';

SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';

SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';
SELECT Continent FROM country WHERE Name = 'Anguilla';

SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul';
SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul';
SELECT country.Region FROM country JOIN city ON city.CountryCode = country.Code WHERE city.Name = 'Kabul';
SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul';
SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul';
SELECT country.Region FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Kabul';
SELECT country.Region FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Kabul';
SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul';
SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul';
SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul';

SELECT country.Region FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Kabul';
SELECT country.Region FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Kabul';
SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul';
SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul';
SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul';
SELECT country.Region FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Kabul';
SELECT country.Region FROM city JOIN country ON city.CountryCode = country.Code WHERE city.Name = 'Kabul';
SELECT country.Region FROM country INNER JOIN city ON city.CountryCode = country.Code WHERE city.Name = 'Kabul';
SELECT country.Region FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Kabul';
SELECT country.Region FROM country JOIN city ON country.Code = city.CountryCode WHERE city.Name = 'Kabul';

SELECT Language, MAX(Percentage) as PopulationPercentage FROM countrylanguage WHERE CountryCode = ( SELECT Code FROM country WHERE Name = 'Aruba' ) GROUP BY Language ORDER BY PopulationPercentage DESC LIMIT 1;
SELECT Language, MAX(Percentage) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT Language FROM countrylanguage WHERE CountryCode = ( SELECT Code FROM country WHERE Name = 'Aruba' ) ORDER BY Percentage DESC LIMIT 1;
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1;
SELECT Language, MAX(Percentage) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name='Aruba');
SELECT Language FROM countrylanguage WHERE CountryCode = ( SELECT Code FROM country WHERE Name = 'Aruba' ) ORDER BY Percentage DESC LIMIT 1;
SELECT Language, MAX(Percentage) AS Most_Popular_Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT Language, MAX(Percentage) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Aruba';
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1;
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1;

SELECT Language FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Aruba' ORDER BY Percentage DESC LIMIT 1;
SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Aruba' ORDER BY Percentage DESC LIMIT 1;
SELECT Language FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.Name = "Aruba" AND IsOfficial = "T";
SELECT Language FROM countrylanguage INNER JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Aruba' AND countrylanguage.IsOfficial = 'T';
SELECT Language FROM countrylanguage WHERE CountryCode = ( SELECT Code FROM country WHERE Name = 'Aruba' ) AND Percentage = ( SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = ( SELECT Code FROM country WHERE Name = 'Aruba' ) );
SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Aruba' ORDER BY Percentage DESC LIMIT 1;
SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Aruba' ORDER BY Percentage DESC LIMIT 1;
SELECT Language FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.Name = 'Aruba' ORDER BY Percentage DESC LIMIT 1;
SELECT Language FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba') ORDER BY Percentage DESC LIMIT 1;
SELECT Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Name = 'Aruba' ORDER BY Percentage DESC LIMIT 1;

SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name='Brazil';

SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';
SELECT Population, LifeExpectancy FROM country WHERE Name = 'Brazil';

SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';

SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';
SELECT Region, Population FROM country WHERE Name = 'Angola';

SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';

SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = "Central Africa";
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';
SELECT AVG(LifeExpectancy) FROM country WHERE Region = 'Central Africa';

SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1;
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT Name FROM country WHERE Continent='Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT country.Name FROM country WHERE country.Continent = 'Asia' ORDER BY country.LifeExpectancy LIMIT 1;
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT country.Name FROM country WHERE country.Continent = 'Asia' ORDER BY country.LifeExpectancy ASC LIMIT 1;

SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT Name FROM country WHERE Continent='Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT Name FROM country WHERE Continent = 'Asia' AND LifeExpectancy = ( SELECT MIN(LifeExpectancy) FROM country WHERE Continent = 'Asia' );
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy ASC LIMIT 1;
SELECT Name FROM country WHERE Continent = 'Asia' ORDER BY LifeExpectancy LIMIT 1;

SELECT SUM(country.Population) AS TotalPopulation, MAX(country.GNP) AS MaximumGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) AS TotalPopulation, MAX(country.GNP) AS MaxGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) AS TotalPopulation, MAX(country.GNP) AS MaximumGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) as TotalPopulation, MAX(country.GNP) as MaximumGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) as TotalPopulation, MAX(country.GNP) as MaximumGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) AS TotalPopulation, MAX(country.GNP) AS MaximumGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) as TotalPopulation, MAX(country.GNP) as MaxGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) AS TotalPopulation, MAX(country.GNP) AS MaximumGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) as TotalPopulation, MAX(country.GNP) as MaximumGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) as TotalPopulation, MAX(country.GNP) as MaximumGNP FROM country WHERE country.Continent = 'Asia';

SELECT SUM(country.Population) as TotalPopulation, MAX(country.GNP) as LargestGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) as TotalPopulation, MAX(country.GNP) as LargestGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) as TotalPopulation, MAX(country.GNP) as LargestGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) AS TotalPopulation, MAX(country.GNP) AS LargestGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) as Total_Population, MAX(country.GNP) as Largest_GNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(Population) AS TotalPopulation, MAX(GNP) AS LargestGNP FROM country WHERE Continent = 'Asia';
SELECT SUM(country.Population) AS Total_Population, MAX(country.GNP) AS Largest_GNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) AS TotalPopulation, MAX(country.GNP) AS LargestGNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) as Total_Population, MAX(country.GNP) as Largest_GNP FROM country WHERE country.Continent = 'Asia';
SELECT SUM(country.Population) as TotalPopulation, MAX(country.GNP) as LargestGNP FROM country WHERE country.Continent = 'Asia';

SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent='Africa' AND GovernmentForm LIKE '%republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent='Africa' AND GovernmentForm LIKE '%Republic%';

SELECT AVG(LifeExpectancy) FROM country WHERE Continent='Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Continent = 'Africa' AND country.GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';
SELECT AVG(LifeExpectancy) FROM country WHERE Continent = 'Africa' AND GovernmentForm LIKE '%Republic%';

SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) as Total_Surface_Area FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) AS TotalSurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) as Total_SurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe');

SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) as TotalSurfaceArea FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');
SELECT SUM(SurfaceArea) FROM country WHERE Continent IN ('Asia', 'Europe');

SELECT Population FROM city WHERE Name = 'Gelderland';
SELECT Population FROM city WHERE District = 'Gelderland';
SELECT Population FROM city WHERE Name = 'Gelderland';
SELECT Population FROM city WHERE District='Gelderland';
SELECT Population FROM city WHERE Name = 'Gelderland';
SELECT Population FROM city WHERE District = 'Gelderland';
SELECT Population FROM city WHERE District = 'Gelderland';
SELECT Population FROM city WHERE District = 'Gelderland';
SELECT Population FROM city WHERE District = 'Gelderland';
SELECT Population FROM city WHERE District = 'Gelderland';

SELECT SUM(city.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Name = 'Gelderland';
SELECT SUM(city.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE city.District = 'Gelderland';
SELECT SUM(city.Population) FROM city WHERE city.District = 'Gelderland';
SELECT SUM(city.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE city.District = 'Gelderland';
SELECT SUM(city.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE city.District = 'Gelderland';
SELECT SUM(city.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE city.District = 'Gelderland';
SELECT SUM(city.Population) FROM city INNER JOIN country ON city.CountryCode = country.Code WHERE city.District = 'Gelderland';
SELECT SUM(city.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Name = 'Gelderland';
SELECT SUM(city.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE city.District = 'Gelderland';
SELECT SUM(city.Population) FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Name = 'Gelderland';

SELECT AVG(country.GNP) as average_GNP, SUM(country.Population) as total_population FROM country WHERE country.Code IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English');
SELECT AVG(country.GNP) as Average_GNP, SUM(country.Population) as Total_Population FROM country WHERE country.Code2 = 'US';
SELECT AVG(country.GNP) as Average_GNP, SUM(country.Population) as Total_Population FROM country WHERE country.Code2 = 'US';
SELECT AVG(country.GNP) as Average_GNP, SUM(country.Population) as Total_Population FROM country WHERE country.Code2 = 'US';
SELECT AVG(country.GNP) as AverageGNP, SUM(country.Population) as TotalPopulation FROM country WHERE country.Code IN ( SELECT country.Code FROM country WHERE country.Code2 = 'US' );
SELECT AVG(country.GNP) AS Average_GNP, SUM(country.Population) AS Total_Population FROM country WHERE country.Code2 = 'US';
SELECT AVG(country.GNP) AS Average_GNP, SUM(country.Population) AS Total_Population FROM country WHERE country.Code IN (SELECT city.CountryCode FROM city WHERE city.CountryCode = 'US');
SELECT AVG(country.GNP) as Average_GNP, SUM(country.Population) as Total_Population FROM country WHERE country.Code2 = 'US';
SELECT AVG(country.GNP) AS AverageGNP, SUM(country.Population) AS TotalPopulation FROM country WHERE country.Code2 = 'US';
SELECT AVG(country.GNP) as AverageGNP, SUM(country.Population) as TotalPopulation FROM country WHERE country.Code2 = 'US';

SELECT AVG(country.GNP) as Mean_GNP, SUM(country.Population) as Total_Population FROM country WHERE country.GovernmentForm = 'US Territory';
SELECT AVG(country.GNP) as Mean_GNP, SUM(country.Population) as Total_Population FROM country WHERE country.Region = 'US territory';
SELECT AVG(GNP) as Mean_GNP, SUM(Population) as Total_Population FROM country WHERE GovernmentForm = 'US Territory';
SELECT AVG(country.GNP) AS mean_GNP, SUM(country.Population) AS total_population FROM country WHERE country.GovernmentForm LIKE '%US territory%';
SELECT AVG(country.GNP) AS Mean_GNP, SUM(country.Population) AS Total_Population FROM country WHERE country.Code2 = 'US';
SELECT AVG(GNP) as mean_gnp, SUM(Population) as total_population FROM country WHERE GovernmentForm = 'US Territory';
SELECT AVG(country.GNP) AS 'Mean GNP', SUM(country.Population) AS 'Total Population' FROM country WHERE country.GovernmentForm = 'US Territory';
SELECT AVG(country.GNP) as Mean_GNP, SUM(country.Population) as Total_Population FROM country WHERE country.GovernmentForm = 'US Territory';
SELECT AVG(country.GNP) AS Mean_GNP, SUM(country.Population) AS Total_Population FROM country WHERE country.GovernmentForm = 'US Territory';
SELECT AVG(country.GNP) AS Mean_GNP, SUM(country.Population) AS Total_Population FROM country WHERE country.Region = 'US Territory';

SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';

SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';
SELECT COUNT(DISTINCT GovernmentForm) FROM country WHERE Continent = 'Africa';

SELECT COUNT(*) AS TotalLanguages FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(Language) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) AS Total_Languages FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) AS TotalLanguages FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');

SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = ( SELECT Code FROM country WHERE Name = 'Aruba' );
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Aruba');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name='Aruba');

SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';

SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name='Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = ( SELECT Code FROM country WHERE Name = 'Afghanistan' ) AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = ( SELECT Code FROM country WHERE Name = 'Afghanistan' );
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan');
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = 'Afghanistan') AND IsOfficial = 'T';
SELECT COUNT(*) FROM countrylanguage WHERE CountryCode = (SELECT Code FROM country WHERE Name = "Afghanistan") AND IsOfficial = "T";

SELECT Name FROM country WHERE Code = ( SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1);
SELECT Name FROM country WHERE Code IN ( SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1 );
SELECT Name FROM country WHERE Code = ( SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1 );
SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY count(countrylanguage.Language) DESC LIMIT 1;
SELECT Name FROM country WHERE Code IN ( SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT Name FROM country WHERE Code = ( SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1 );
SELECT Name FROM country WHERE Code = ( SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1 );
SELECT Name FROM country WHERE Code = (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1);
SELECT country.Name FROM country WHERE country.Code IN ( SELECT countrylanguage.CountryCode FROM countrylanguage GROUP BY countrylanguage.CountryCode ORDER BY COUNT(countrylanguage.Language) DESC LIMIT 1);
SELECT c.Name FROM country AS c JOIN countrylanguage AS l ON c.Code = l.CountryCode GROUP BY c.Name ORDER BY COUNT(DISTINCT l.Language) DESC LIMIT 1;

SELECT Name FROM country WHERE Code = ( SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1);
SELECT Name FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(Language) DESC LIMIT 1);
SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY COUNT(DISTINCT countrylanguage.Language) DESC LIMIT 1;
SELECT country.Name FROM country WHERE country.Code = ( SELECT countrylanguage.CountryCode FROM countrylanguage GROUP BY countrylanguage.CountryCode ORDER BY COUNT(countrylanguage.Language) DESC LIMIT 1 );
SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY COUNT(countrylanguage.Language) DESC LIMIT 1;
SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY COUNT(DISTINCT countrylanguage.Language) DESC LIMIT 1;
SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY COUNT(countrylanguage.Language) DESC LIMIT 1;
SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY COUNT(countrylanguage.Language) DESC LIMIT 1;
SELECT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY COUNT(DISTINCT countrylanguage.Language) DESC LIMIT 1;
SELECT country.Name AS Nation FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY COUNT(DISTINCT countrylanguage.Language) DESC LIMIT 1;

SELECT Continent, COUNT(DISTINCT Language) AS LanguageCount FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY LanguageCount DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent FROM country INNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;

SELECT Continent FROM country INNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT countrylanguage.Language) DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent, COUNT(DISTINCT Language) AS Languages_Count FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY Languages_Count DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;
SELECT Continent, COUNT(DISTINCT Language) as 'Num_Languages' FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY Num_Languages DESC LIMIT 1;
SELECT Continent FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY Continent ORDER BY COUNT(DISTINCT Language) DESC LIMIT 1;

SELECT DISTINCT country.Name FROM country JOIN countrylanguage AS cl1 ON country.Code = cl1.CountryCode JOIN countrylanguage AS cl2 ON country.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl1.IsOfficial = 'T' AND cl2.Language = 'French' AND cl2.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage AS cl1 ON country.Code = cl1.CountryCode JOIN countrylanguage AS cl2 ON country.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl2.Language = 'French';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage AS EnglishLang ON country.Code = EnglishLang.CountryCode JOIN countrylanguage AS FrenchLang ON country.Code = FrenchLang.CountryCode WHERE EnglishLang.Language = 'English' AND FrenchLang.Language = 'French';
SELECT DISTINCT c.Name FROM country AS c JOIN countrylanguage AS l1 ON c.Code = l1.CountryCode JOIN countrylanguage AS l2 ON c.Code = l2.CountryCode WHERE l1.Language = 'English' AND l2.Language = 'French';
SELECT country.Name FROM country JOIN countrylanguage AS english ON country.Code = english.CountryCode JOIN countrylanguage AS french ON country.Code = french.CountryCode WHERE english.Language = 'English' AND french.Language = 'French';
SELECT country.Name FROM country JOIN countrylanguage AS CL1 ON country.Code = CL1.CountryCode JOIN countrylanguage AS CL2 ON country.Code = CL2.CountryCode WHERE CL1.Language = 'English' AND CL2.Language = 'French';
SELECT country.Name FROM country JOIN countrylanguage AS cl1 ON country.Code = cl1.CountryCode JOIN countrylanguage AS cl2 ON country.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl2.Language = 'French';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage AS cl1 ON country.Code = cl1.CountryCode JOIN countrylanguage AS cl2 ON country.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl1.IsOfficial = 'T' AND cl2.Language = 'French' AND cl2.IsOfficial = 'T';
SELECT DISTINCT c.Name FROM country c JOIN countrylanguage l1 ON c.Code = l1.CountryCode JOIN countrylanguage l2 ON c.Code = l2.CountryCode WHERE l1.Language = 'English' AND l2.Language = 'French';
SELECT DISTINCT c.Name FROM country c JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl1.IsOfficial = 'T' AND cl2.Language = 'French' AND cl2.IsOfficial = 'T';

SELECT DISTINCT c1.Name FROM country c1 JOIN countrylanguage cl1 ON c1.Code = cl1.CountryCode JOIN countrylanguage cl2 ON c1.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl2.Language = 'French';
SELECT DISTINCT c1.Name FROM country AS c1 JOIN countrylanguage AS cl1 ON cl1.CountryCode = c1.Code JOIN countrylanguage AS cl2 ON cl2.CountryCode = c1.Code WHERE (cl1.Language = 'English' AND cl2.Language = 'French');
SELECT DISTINCT c.Name FROM country c JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl2.Language = 'French';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage AS c1 ON country.Code = c1.CountryCode JOIN countrylanguage AS c2 ON country.Code = c2.CountryCode WHERE c1.Language = 'English' AND c2.Language = 'French';
SELECT DISTINCT c1.Name FROM country c1 JOIN countrylanguage cl1 ON c1.Code = cl1.CountryCode JOIN countrylanguage cl2 ON c1.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl2.Language = 'French';
SELECT DISTINCT c.Name FROM country c JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl2.Language = 'French';
SELECT DISTINCT c.Name FROM country c JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl2.Language = 'French';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage AS cl1 ON country.Code = cl1.CountryCode JOIN countrylanguage AS cl2 ON country.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl2.Language = 'French';
SELECT DISTINCT c.Name FROM country c JOIN countrylanguage l1 ON c.Code = l1.CountryCode JOIN countrylanguage l2 ON c.Code = l2.CountryCode WHERE (l1.Language = 'English' AND l2.Language = 'French');
SELECT DISTINCT c.Name FROM country AS c JOIN countrylanguage AS cl1 ON c.Code = cl1.CountryCode JOIN countrylanguage AS cl2 ON c.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl2.Language = 'French';

SELECT country.Name FROM country JOIN countrylanguage AS cl1 ON country.Code = cl1.CountryCode JOIN countrylanguage AS cl2 ON country.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl1.IsOfficial = 'T' AND cl2.Language = 'French' AND cl2.IsOfficial = 'T';
SELECT country.Name FROM country JOIN countrylanguage AS c1 ON c1.CountryCode = country.Code JOIN countrylanguage AS c2 ON c2.CountryCode = country.Code WHERE c1.Language = 'English' AND c1.IsOfficial = 'T' AND c2.Language = 'French' AND c2.IsOfficial = 'T';
SELECT country.Name FROM country JOIN countrylanguage AS cl1 ON country.Code = cl1.CountryCode JOIN countrylanguage AS cl2 ON country.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl1.IsOfficial = 'T' AND cl2.Language = 'French' AND cl2.IsOfficial = 'T';
SELECT country.Name FROM country JOIN countrylanguage AS cl1 ON cl1.CountryCode = country.Code JOIN countrylanguage AS cl2 ON cl2.CountryCode = country.Code WHERE cl1.Language = 'English' AND cl1.IsOfficial = 'T' AND cl2.Language = 'French' AND cl2.IsOfficial = 'T';
SELECT country.Name FROM country JOIN countrylanguage AS cl1 ON country.Code = cl1.CountryCode JOIN countrylanguage AS cl2 ON country.Code = cl2.CountryCode WHERE cl1.Language='English' AND cl1.IsOfficial='T' AND cl2.Language='French' AND cl2.IsOfficial='T';
SELECT country.Name FROM country JOIN countrylanguage AS cl1 ON country.Code = cl1.CountryCode JOIN countrylanguage AS cl2 ON country.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl1.IsOfficial = 'T' AND cl2.Language = 'French' AND cl2.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage as cl1 on country.Code = cl1.CountryCode JOIN countrylanguage as cl2 on country.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl1.IsOfficial = 'T' AND cl2.Language = 'French' AND cl2.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage AS cl1 ON country.Code = cl1.CountryCode AND cl1.Language = 'English' AND cl1.IsOfficial = 'T' JOIN countrylanguage AS cl2 ON country.Code = cl2.CountryCode AND cl2.Language = 'French' AND cl2.IsOfficial = 'T';
SELECT country.Name FROM country JOIN countrylanguage AS english ON country.Code = english.CountryCode JOIN countrylanguage AS french ON country.Code = french.CountryCode WHERE english.Language = 'English' AND english.IsOfficial = 'T' AND french.Language = 'French' AND french.IsOfficial = 'T';
SELECT country.Name FROM country JOIN countrylanguage as lang1 ON country.Code = lang1.CountryCode JOIN countrylanguage as lang2 ON country.Code = lang2.CountryCode WHERE lang1.Language = 'English' AND lang1.IsOfficial = 'T' AND lang2.Language = 'French' AND lang2.IsOfficial = 'T';

SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T') OR (countrylanguage.Language = 'French' AND countrylanguage.IsOfficial = 'T');
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'French') AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT c.Name FROM country AS c JOIN countrylanguage AS cl1 ON c.Code = cl1.CountryCode JOIN countrylanguage AS cl2 ON c.Code = cl2.CountryCode WHERE (cl1.Language = 'English' AND cl1.IsOfficial = 'T') AND (cl2.Language = 'French' AND cl2.IsOfficial = 'T');
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'French') AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT c.Name FROM country c JOIN countrylanguage cl1 ON c.Code = cl1.CountryCode JOIN countrylanguage cl2 ON c.Code = cl2.CountryCode WHERE cl1.Language = 'English' AND cl1.IsOfficial = 'T' AND cl2.Language = 'French' AND cl2.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T') AND country.Code IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'French' AND IsOfficial = 'T');
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T') OR (countrylanguage.Language = 'French' AND countrylanguage.IsOfficial = 'T');
SELECT Name FROM country WHERE Code IN ( SELECT CountryCode FROM countrylanguage WHERE (Language = 'English' OR Language = 'French') AND IsOfficial = 'T' );
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'French') AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'French') AND countrylanguage.IsOfficial = 'T';

SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country INNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';

SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT country.Continent) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';
SELECT COUNT(DISTINCT(country.Continent)) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese';

SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language IN ('English', 'Dutch');
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language IN ('English', 'Dutch');
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language IN ('English', 'Dutch');
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language IN ('English', 'Dutch');
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (Language = 'English' OR Language = 'Dutch');
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language IN ('English', 'Dutch');
SELECT DISTINCT Region FROM country WHERE Code IN ( SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'Dutch') );
SELECT DISTINCT Region FROM country WHERE Code IN ( SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'Dutch') );
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language IN ('English', 'Dutch');
SELECT DISTINCT Region FROM country WHERE Code IN ( SELECT CountryCode FROM countrylanguage WHERE Language IN ('English', 'Dutch') );

SELECT DISTINCT Region FROM country INNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language IN ('Dutch', 'English');
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language IN ('Dutch', 'English');
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language IN ('Dutch', 'English');
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language IN ('Dutch', 'English');
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language IN ('Dutch', 'English');
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language = 'Dutch' OR Language = 'English';
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language IN ('Dutch', 'English');
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language IN ('Dutch', 'English');
SELECT DISTINCT Region FROM country WHERE Code IN ( SELECT CountryCode FROM countrylanguage WHERE Language IN ('Dutch', 'English') );
SELECT DISTINCT Region FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language IN ('Dutch', 'English');

SELECT DISTINCT c.Name FROM country AS c JOIN countrylanguage AS cl ON cl.CountryCode = c.Code WHERE (cl.Language = 'English' OR cl.Language = 'Dutch') AND cl.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language IN ('English', 'Dutch') AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country INNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT country.Name FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language = 'English' OR countrylanguage.Language = 'Dutch') AND countrylanguage.IsOfficial = 'T';

SELECT countrylanguage.Language FROM countrylanguage INNER JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language ORDER BY SUM(countrylanguage.Percentage * country.Population) / 100 DESC LIMIT 1;
SELECT countrylanguage.Language FROM countrylanguage INNER JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language ORDER BY SUM(countrylanguage.Percentage * country.Population) / 100 DESC LIMIT 1;
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language ORDER BY SUM(countrylanguage.Percentage) DESC LIMIT 1;
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language ORDER BY SUM(countrylanguage.Percentage * country.Population / 100) DESC LIMIT 1;
SELECT Language, SUM(Population * Percentage / 100) AS NumberOfSpeakers FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Continent = 'Asia' GROUP BY Language ORDER BY NumberOfSpeakers DESC LIMIT 1;
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language ORDER BY SUM(country.Population * countrylanguage.Percentage / 100) DESC LIMIT 1;
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language ORDER BY SUM(country.Population * countrylanguage.Percentage / 100) DESC LIMIT 1;
SELECT countrylanguage.Language, SUM(country.Population) as TotalPopulation FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language ORDER BY TotalPopulation DESC LIMIT 1;
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY countrylanguage.Language ORDER BY SUM(countrylanguage.Percentage * country.Population / 100) DESC LIMIT 1;
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.Continent='Asia' GROUP BY countrylanguage.Language ORDER BY SUM(country.Population * countrylanguage.Percentage / 100) DESC LIMIT 1;

SELECT Language, COUNT(DISTINCT CountryCode) AS NumberOfCountries FROM countrylanguage WHERE CountryCode IN ( SELECT Code FROM country WHERE Continent = 'Asia' ) GROUP BY Language ORDER BY NumberOfCountries DESC LIMIT 1;
SELECT Language, COUNT(DISTINCT country.Code) as NumOfNations FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.Continent = 'Asia' GROUP BY Language ORDER BY NumOfNations DESC LIMIT 1;
SELECT Language, COUNT(DISTINCT CountryCode) as Number_of_Countries FROM countrylanguage INNER JOIN country ON countrylanguage.CountryCode = country.Code WHERE Continent = 'Asia' GROUP BY Language ORDER BY Number_of_Countries DESC LIMIT 1;
SELECT Language, COUNT(DISTINCT CountryCode) as Num_Countries FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE Continent = 'Asia') GROUP BY Language ORDER BY Num_Countries DESC LIMIT 1;
SELECT Language, COUNT(DISTINCT CountryCode) AS NumCountries FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE Continent = 'Asia' GROUP BY Language ORDER BY NumCountries DESC LIMIT 1;
SELECT Language, COUNT(DISTINCT CountryCode) AS NumberOfCountries FROM countrylanguage WHERE CountryCode IN ( SELECT Code FROM country WHERE Continent = 'Asia' ) GROUP BY Language ORDER BY NumberOfCountries DESC LIMIT 1;
SELECT Language, COUNT(DISTINCT country.Code) as numberOfCountries FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE Continent = 'Asia' GROUP BY Language ORDER BY numberOfCountries DESC LIMIT 1;
SELECT Language, COUNT(DISTINCT CountryCode) AS NumberOfCountries FROM countrylanguage WHERE CountryCode IN ( SELECT Code FROM country WHERE Continent = 'Asia' ) GROUP BY Language ORDER BY NumberOfCountries DESC LIMIT 1;
SELECT Language, COUNT(DISTINCT country.Code) as NumOfNations FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE Continent = 'Asia' GROUP BY Language ORDER BY NumOfNations DESC LIMIT 1;
SELECT Language, COUNT(DISTINCT country.Code) as Num_Countries FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Continent = 'Asia' GROUP BY Language ORDER BY Num_Countries DESC LIMIT 1;

SELECT DISTINCT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.GovernmentForm = 'Republic' GROUP BY countrylanguage.Language HAVING COUNT(country.Code) = 1;
SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic' GROUP BY Code HAVING COUNT(Code) = 1);
SELECT Language FROM countrylanguage WHERE CountryCode IN ( SELECT Code FROM country WHERE GovernmentForm = 'Republic' ) GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = 1;
SELECT DISTINCT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.GovernmentForm = 'Republic' GROUP BY countrylanguage.Language HAVING COUNT(country.Code) = 1;
SELECT language FROM countrylanguage WHERE CountryCode IN ( SELECT Code FROM country WHERE GovernmentForm = 'Republic' ) GROUP BY language HAVING COUNT(DISTINCT CountryCode) = 1;
SELECT Language FROM countrylanguage WHERE CountryCode IN ( SELECT Code FROM country WHERE GovernmentForm = 'Republic' ) GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = 1;
SELECT Language FROM countrylanguage WHERE CountryCode IN ( SELECT Code FROM country WHERE GovernmentForm = 'Republic' ) GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = 1;
SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic') GROUP BY Language HAVING COUNT(CountryCode) = 1;
SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic') GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = 1;
SELECT countrylanguage.Language FROM countrylanguage INNER JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.GovernmentForm = 'Republic' GROUP BY countrylanguage.Language HAVING COUNT(country.Name) = 1;

SELECT language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic') GROUP BY language HAVING COUNT(DISTINCT CountryCode) = 1;
SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic') GROUP BY Language HAVING COUNT(CountryCode) = 1;
SELECT Language FROM countrylanguage WHERE CountryCode IN (SELECT Code FROM country WHERE GovernmentForm = 'Republic') GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = 1;
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE GovernmentForm = 'Republic' GROUP BY countrylanguage.Language HAVING COUNT(country.Name) = 1;
SELECT Language FROM countrylanguage GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = 1 AND MAX(GovernmentForm) = 'Republic';
SELECT Language FROM countrylanguage WHERE CountryCode IN ( SELECT Code FROM country WHERE GovernmentForm = 'Republic' ) GROUP BY Language HAVING COUNT(CountryCode) = 1;
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON country.Code=countrylanguage.CountryCode WHERE country.GovernmentForm LIKE '%Republic%' GROUP BY countrylanguage.Language HAVING COUNT(countrylanguage.Language) = 1;
SELECT L.Language FROM countrylanguage L JOIN country C ON L.CountryCode = C.Code WHERE C.GovernmentForm = 'Republic' GROUP BY L.Language HAVING COUNT(DISTINCT C.Code) = 1;
SELECT Language FROM countrylanguage WHERE CountryCode IN ( SELECT Code FROM country WHERE GovernmentForm = 'Republic' ) GROUP BY Language HAVING COUNT(DISTINCT CountryCode) = 1;
SELECT countrylanguage.Language FROM countrylanguage INNER JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.GovernmentForm = 'Republic' GROUP BY countrylanguage.Language HAVING COUNT(countrylanguage.CountryCode) = 1;

SELECT city.Name, city.Population FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name, MAX(city.Population) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English';
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name, MAX(city.Population) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' GROUP BY city.Name ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name FROM city JOIN country ON country.Code = city.CountryCode JOIN countrylanguage ON countrylanguage.CountryCode = country.Code WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name, city.Population FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;

SELECT city.Name, MAX(city.Population) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON countrylanguage.CountryCode = country.Code WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name, city.Population FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name, city.Population FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name, MAX(city.Population) FROM city JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' GROUP BY city.Name ORDER BY MAX(city.Population) DESC LIMIT 1;
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name, city.Population FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name, city.Population FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name, MAX(city.Population) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' GROUP BY city.Name ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name, city.Population FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' ORDER BY city.Population DESC LIMIT 1;
SELECT city.Name, MAX(city.Population) FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' GROUP BY city.Name ORDER BY MAX(city.Population) DESC LIMIT 1;

SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'Asia' ORDER BY country.SurfaceArea DESC LIMIT 1;
SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'Asia' ORDER BY country.SurfaceArea DESC LIMIT 1;
SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'Asia' ORDER BY country.SurfaceArea DESC LIMIT 1;
SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'Asia' ORDER BY country.SurfaceArea DESC LIMIT 1;
SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'Asia' ORDER BY country.SurfaceArea DESC LIMIT 1;
SELECT country.Name, country.Population, country.LifeExpectancy FROM country WHERE country.Continent = 'Asia' ORDER BY country.SurfaceArea DESC LIMIT 1;
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1;
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1;
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1;
SELECT Name, Population, LifeExpectancy FROM country WHERE Continent = 'Asia' ORDER BY SurfaceArea DESC LIMIT 1;

SELECT AVG(country.LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F';
SELECT AVG(country.LifeExpectancy) FROM country INNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F';
SELECT AVG(country.LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F';
SELECT AVG(country.LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F';
SELECT AVG(country.LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F';
SELECT AVG(country.LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F';
SELECT AVG(country.LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F';
SELECT AVG(country.LifeExpectancy) FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F';
SELECT AVG(country.LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F';
SELECT AVG(country.LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'F';

SELECT AVG(country.LifeExpectancy) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'T';
SELECT AVG(country.LifeExpectancy) FROM country WHERE NOT EXISTS (SELECT 1 FROM countrylanguage WHERE countrylanguage.CountryCode = country.Code AND countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T');
SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Code NOT IN ( SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T' );
SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T');
SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T');
SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Code NOT IN ( SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English' AND countrylanguage.IsOfficial = 'T' );
SELECT AVG(country.LifeExpectancy) as MeanLifeExpectancy FROM country WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = 'English' and IsOfficial = 'T' );
SELECT AVG(country.LifeExpectancy) FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English' OR countrylanguage.IsOfficial = 'F';
SELECT AVG(country.LifeExpectancy) FROM country WHERE country.Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T' );

SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English');
SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN ( SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English' );
SELECT SUM(country.Population) AS Total_Population FROM country WHERE country.Code NOT IN ( SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English');
SELECT SUM(country.Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
SELECT SUM(country.Population) as Total_Population FROM country WHERE country.Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = 'English' );
SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN ( SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English');
SELECT SUM(country.Population) AS Total_Population FROM country WHERE country.Code NOT IN ( SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English' );
SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN ( SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English' );
SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English');
SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English');

SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English');
SELECT SUM(country.Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = 'English' );
SELECT SUM(country.Population) FROM country WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = 'English' );
SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN ( SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English' );
SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN (SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English');
SELECT SUM(country.Population) FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = 'English' );
SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = 'English' );
SELECT SUM(country.Population) FROM country WHERE country.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');

SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM countrylanguage INNER JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';

SELECT Language FROM countrylanguage WHERE IsOfficial = 'T' AND CountryCode = (SELECT Code FROM country WHERE HeadOfState = 'Beatrix');
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';
SELECT countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.HeadOfState = 'Beatrix' AND countrylanguage.IsOfficial = 'T';

SELECT COUNT(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) as Total_Unique_Official_Languages FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM countrylanguage INNER JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';

SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM countrylanguage JOIN country ON countrylanguage.CountryCode = country.Code WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country INNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT countrylanguage.Language) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.IndepYear < 1930 AND countrylanguage.IsOfficial = 'T';

SELECT c.Name FROM country c WHERE c.SurfaceArea > (SELECT MAX(c2.SurfaceArea) FROM country c2 WHERE c2.Continent = 'Europe');
SELECT DISTINCT c1.Name FROM country c1 WHERE c1.SurfaceArea > ( SELECT MAX(c2.SurfaceArea) FROM country c2 WHERE c2.Continent = 'Europe' );
SELECT DISTINCT c1.Name FROM country c1 WHERE c1.SurfaceArea > (SELECT MAX(c2.SurfaceArea) FROM country c2 WHERE c2.Continent = 'Europe');
SELECT DISTINCT c1.Name FROM country c1 WHERE c1.SurfaceArea > ( SELECT MAX(c2.SurfaceArea) FROM country c2 WHERE c2.Continent = 'Europe' );
SELECT c1.Name FROM country c1 WHERE c1.SurfaceArea > (SELECT MAX(c2.SurfaceArea) FROM country c2 WHERE c2.Continent = 'Europe');
SELECT c.Name FROM country c WHERE c.SurfaceArea > (SELECT MAX(c1.SurfaceArea) FROM country c1 WHERE c1.Continent = 'Europe');
SELECT DISTINCT c1.Name FROM country c1 WHERE c1.SurfaceArea > ( SELECT MAX(c2.SurfaceArea) FROM country c2 WHERE c2.Continent = 'Europe' );
SELECT c1.Name FROM country c1 WHERE c1.SurfaceArea > (SELECT MAX(c2.SurfaceArea) FROM country c2 WHERE c2.Continent = 'Europe');
SELECT DISTINCT c1.Name FROM country c1 WHERE c1.SurfaceArea > (SELECT MAX(c2.SurfaceArea) FROM country c2 WHERE c2.Continent = 'Europe');
SELECT DISTINCT Name FROM country WHERE SurfaceArea > ( SELECT MAX(SurfaceArea) FROM country WHERE Continent = 'Europe' );

SELECT c1.* FROM country c1 WHERE c1.SurfaceArea > ALL ( SELECT c2.SurfaceArea FROM country c2 WHERE c2.Continent = 'Europe' );
SELECT c.Name FROM country AS c WHERE c.SurfaceArea > ALL (SELECT SurfaceArea FROM country WHERE Continent='Europe');
SELECT c1.Name FROM country AS c1 WHERE c1.SurfaceArea > ALL (SELECT c2.SurfaceArea FROM country AS c2 WHERE c2.Continent = 'Europe');
SELECT c1.Name FROM country AS c1 WHERE c1.SurfaceArea > ALL (SELECT c2.SurfaceArea FROM country AS c2 WHERE c2.Continent = 'Europe');
SELECT c1.Name FROM country AS c1 WHERE c1.SurfaceArea > ALL (SELECT c2.SurfaceArea FROM country AS c2 WHERE c2.Continent = 'Europe');
SELECT c1.Name FROM country c1 WHERE c1.SurfaceArea > ALL (SELECT c2.SurfaceArea FROM country c2 WHERE c2.Continent = 'Europe');
SELECT c1.Name FROM country c1 WHERE c1.SurfaceArea > ALL ( SELECT c2.SurfaceArea FROM country c2 WHERE c2.Continent = 'Europe' );
SELECT c1.Name FROM country c1 WHERE c1.SurfaceArea > ANY (SELECT c2.SurfaceArea FROM country c2 WHERE c2.Continent = 'Europe');
SELECT c1.Name FROM country AS c1 WHERE c1.SurfaceArea > ALL ( SELECT c2.SurfaceArea FROM country AS c2 WHERE c2.Continent = 'Europe' );
SELECT c1.Name FROM country AS c1 WHERE c1.SurfaceArea > ALL (SELECT c2.SurfaceArea FROM country AS c2 WHERE c2.Continent = 'Europe');

SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < ANY (SELECT c2.Population FROM country c2 WHERE c2.Continent = 'Asia');
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < ( SELECT MIN(c2.Population) FROM country c2 WHERE c2.Continent = 'Asia' );
SELECT country.Name FROM country WHERE Continent = 'Africa' AND Population < (SELECT MIN(Population) FROM country WHERE Continent = 'Asia');
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < ANY (SELECT c2.Population FROM country c2 WHERE c2.Continent = 'Asia');
SELECT country.Name FROM country WHERE Continent='Africa' and Population < ( SELECT MIN(Population) FROM country WHERE Continent='Asia');
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < ANY (SELECT c2.Population FROM country c2 WHERE c2.Continent = 'Asia');
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < (SELECT MIN(c2.Population) FROM country c2 WHERE c2.Continent = 'Asia');
SELECT DISTINCT c1.Name FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < ANY (SELECT c2.Population FROM country c2 WHERE c2.Continent = 'Asia');
SELECT c1.Name FROM country AS c1 WHERE c1.Continent = 'Africa' AND c1.Population < ( SELECT MIN(c2.Population) FROM country AS c2 WHERE c2.Continent = 'Asia' );
SELECT c1.Name FROM country AS c1 WHERE c1.Continent = 'Africa' AND c1.Population < ( SELECT MIN(c2.Population) FROM country AS c2 WHERE c2.Continent = 'Asia' );

SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < ( SELECT MIN(c2.Population) FROM country c2 WHERE c2.Continent = 'Asia' );
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < ANY (SELECT c2.Population FROM country c2 WHERE c2.Continent = 'Asia');
SELECT c1.Name FROM country as c1 WHERE c1.Continent = 'Africa' AND c1.Population < ( SELECT MIN(c2.Population) FROM country as c2 WHERE c2.Continent = 'Asia' );
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < ALL ( SELECT c2.Population FROM country c2 WHERE c2.Continent = 'Asia' );
SELECT a.Name FROM country a WHERE a.Continent = 'Africa' AND a.Population < ALL ( SELECT b.Population FROM country b WHERE b.Continent = 'Asia' );
SELECT africa.Name FROM country AS africa WHERE africa.Continent = 'Africa' AND africa.Population < ALL (SELECT asia.Population FROM country AS asia WHERE asia.Continent = 'Asia');
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < ANY (SELECT c2.Population FROM country c2 WHERE c2.Continent = 'Asia');
SELECT c1.Name FROM country AS c1 WHERE c1.Continent = 'Africa' AND c1.Population < ALL ( SELECT c2.Population FROM country AS c2 WHERE c2.Continent = 'Asia' );
SELECT DISTINCT c1.Name FROM country c1 WHERE c1.Continent='Africa' AND c1.Population < (SELECT MIN(c2.Population) FROM country c2 WHERE c2.Continent='Asia');
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Africa' AND c1.Population < (SELECT MIN(c2.Population) FROM country c2 WHERE c2.Continent = 'Asia');

SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > ( SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa' );
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa');
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > ( SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa' );
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa');
SELECT c1.Name FROM country AS c1 WHERE c1.Continent = 'Asia' AND c1.Population > ( SELECT MAX(c2.Population) FROM country AS c2 WHERE c2.Continent = 'Africa' );
SELECT c1.Name FROM country AS c1 WHERE c1.Continent = 'Asia' AND c1.Population > ALL (SELECT c2.Population FROM country AS c2 WHERE c2.Continent = 'Africa');
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa');
SELECT c1.Name FROM country AS c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(c2.Population) FROM country AS c2 WHERE c2.Continent = 'Africa');
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > ( SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa' );
SELECT c1.Name FROM country AS c1 WHERE c1.Continent = 'Asia' AND c1.Population > ( SELECT MAX(c2.Population) FROM country AS c2 WHERE c2.Continent = 'Africa' );

SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > ( SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa' );
SELECT `Name` FROM `country` WHERE `Continent` = 'Asia' AND `Population` > ( SELECT MAX(`Population`) FROM `country` WHERE `Continent` = 'Africa' );
SELECT c1.Name FROM country AS c1 WHERE c1.Continent = 'Asia' AND c1.Population > ( SELECT MAX(c2.Population) FROM country AS c2 WHERE c2.Continent = 'Africa' );
SELECT c1.Name FROM country AS c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(c2.Population) FROM country AS c2 WHERE c2.Continent = 'Africa');
SELECT c1.Name FROM country AS c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(c2.Population) FROM country AS c2 WHERE c2.Continent = 'Africa');
SELECT c1.Name FROM country AS c1 WHERE c1.Continent = 'Asia' AND c1.Population > (SELECT MAX(c2.Population) FROM country AS c2 WHERE c2.Continent = 'Africa');
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > ( SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa' );
SELECT c1.Name FROM country c1 WHERE c1.Continent = 'Asia' AND c1.Population > ( SELECT MAX(c2.Population) FROM country c2 WHERE c2.Continent = 'Africa' );
SELECT C1.Name FROM country C1 WHERE C1.Continent = 'Asia' AND C1.Population > (SELECT MAX(C2.Population) FROM country C2 WHERE C2.Continent = 'Africa');
SELECT country.Name FROM country WHERE Continent = 'Asia' AND Population > (SELECT MAX(Population) FROM country WHERE Continent = 'Africa');

SELECT DISTINCT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL;
SELECT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
SELECT DISTINCT c.Code FROM country c WHERE c.Code NOT IN ( SELECT cl.CountryCode FROM countrylanguage cl WHERE cl.Language = 'English' );
SELECT DISTINCT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE Language != 'English' OR Language IS NULL;
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';

SELECT DISTINCT country.Code FROM country WHERE country.Code NOT IN ( SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English' );
SELECT Code FROM country WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = 'English' );
SELECT DISTINCT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL;
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT Code FROM country WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = 'English' );
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL;
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';

SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English';
SELECT DISTINCT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English';
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';

SELECT DISTINCT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
SELECT DISTINCT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
SELECT DISTINCT Code FROM country WHERE Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = 'English' );
SELECT DISTINCT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
SELECT DISTINCT Code FROM country WHERE Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
SELECT DISTINCT country.Code FROM country WHERE country.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English');
SELECT DISTINCT country.Code FROM country WHERE country.Code NOT IN ( SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English' );
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';
SELECT DISTINCT country.Code FROM country WHERE country.Code NOT IN ( SELECT CountryCode FROM countrylanguage WHERE Language = 'English' );
SELECT DISTINCT CountryCode FROM countrylanguage WHERE Language != 'English';

SELECT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL) AND country.GovernmentForm != 'Republic';
SELECT DISTINCT CL.CountryCode FROM countrylanguage CL JOIN country C ON CL.CountryCode = C.Code WHERE CL.Language != 'English' AND C.GovernmentForm != 'Republic';
SELECT DISTINCT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL) AND country.GovernmentForm != 'Republic';
SELECT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL) AND country.GovernmentForm != 'Republic';
SELECT DISTINCT(country.Code) FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English' AND country.GovernmentForm != 'Republic';
SELECT DISTINCT(country.Code) FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL) AND country.GovernmentForm != 'Republic';
SELECT DISTINCT country.Code FROM country WHERE country.Code NOT IN ( SELECT countrylanguage.CountryCode FROM countrylanguage WHERE countrylanguage.Language = 'English' ) AND country.GovernmentForm != 'Republic';
SELECT DISTINCT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL) AND country.GovernmentForm != 'Republic';
SELECT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL) AND country.GovernmentForm != 'Republic';
SELECT DISTINCT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language != 'English' AND country.GovernmentForm != 'Republic';

SELECT DISTINCT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm NOT LIKE '%Republic%' AND ( countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL );
SELECT DISTINCT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE (country.GovernmentForm NOT LIKE '%Republic%' OR country.GovernmentForm IS NULL) AND (countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL);
SELECT DISTINCT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm NOT LIKE '%Republic%' AND (countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL);
SELECT DISTINCT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm NOT LIKE '%Republic%' AND (countrylanguage.Language!='English' OR countrylanguage.Language IS NULL);
SELECT DISTINCT country.Code FROM country LEFT JOIN countrylanguage on country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm NOT LIKE '%Republic%' AND (countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL);
SELECT DISTINCT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm != 'Republic' AND (countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL);
SELECT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm != 'Republic' AND (countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL);
SELECT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE GovernmentForm != 'Republic' AND (Language != 'English' OR Language IS NULL);
SELECT c.Code FROM country c LEFT JOIN countrylanguage cl ON c.Code = cl.CountryCode WHERE cl.Language != 'English' AND c.GovernmentForm NOT LIKE '%Republic%';
SELECT country.Code FROM country LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.GovernmentForm NOT LIKE '%Republic%' AND (countrylanguage.Language != 'English' OR countrylanguage.Language IS NULL);

SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'T';
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'Europe' AND country.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND (countrylanguage.Language != 'English' OR countrylanguage.IsOfficial = 'F');
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'T';
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND (countrylanguage.Language != 'English' OR countrylanguage.IsOfficial = 'F');
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code LEFT JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND (countrylanguage.Language != 'English' OR countrylanguage.IsOfficial = 'F');
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND countrylanguage.Language != 'English' AND countrylanguage.IsOfficial = 'T';
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND (countrylanguage.Language != 'English' OR countrylanguage.IsOfficial = 'F');
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Europe' AND NOT (countrylanguage.Language='English' AND countrylanguage.IsOfficial='T');
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code WHERE country.Continent = 'Europe' AND country.Code NOT IN (SELECT CountryCode FROM countrylanguage WHERE Language = 'English' AND IsOfficial = 'T');

SELECT DISTINCT city.Name FROM city INNER JOIN country ON city.CountryCode = country.Code INNER JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T' AND country.Continent = 'Asia';
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T' AND country.Continent = 'Asia';
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T' AND country.Continent = 'Asia';

SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON city.CountryCode = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT DISTINCT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T';
SELECT city.Name FROM city JOIN country ON city.CountryCode = country.Code JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE country.Continent = 'Asia' AND countrylanguage.Language = 'Chinese' AND countrylanguage.IsOfficial = 'T' GROUP BY city.Name;

SELECT country.Name, country.IndepYear, country.SurfaceArea FROM country WHERE country.Code IN (SELECT countrylanguage.CountryCode FROM countrylanguage GROUP BY countrylanguage.CountryCode HAVING COUNT(DISTINCT countrylanguage.Language) = (SELECT MIN(tmp.cnt) FROM (SELECT COUNT(DISTINCT countrylanguage.Language) as cnt FROM countrylanguage GROUP BY countrylanguage.CountryCode ) as tmp) LIMIT 1);
SELECT country.Name, country.IndepYear, country.SurfaceArea FROM country WHERE country.Code IN (SELECT countrylanguage.CountryCode FROM countrylanguage GROUP BY countrylanguage.CountryCode HAVING COUNT(countrylanguage.Language) = (SELECT MIN(t.CountLanguage) FROM ( SELECT COUNT(countrylanguage.Language) AS CountLanguage FROM countrylanguage GROUP BY countrylanguage.CountryCode) AS t)) LIMIT 1;
SELECT country.Name, country.IndepYear, country.SurfaceArea FROM country WHERE country.Code = ( SELECT countrylanguage.CountryCode FROM countrylanguage GROUP BY countrylanguage.CountryCode ORDER BY COUNT(countrylanguage.Language) LIMIT 1);
SELECT country.Name, country.IndepYear, country.SurfaceArea FROM country WHERE country.Code = ( SELECT countrylanguage.CountryCode FROM countrylanguage GROUP BY countrylanguage.CountryCode HAVING COUNT(DISTINCT countrylanguage.Language) = ( SELECT MIN(count_languages) FROM ( SELECT COUNT(DISTINCT Language) AS count_languages FROM countrylanguage GROUP BY CountryCode ) ) ) LIMIT 1;
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Code IN ( SELECT CountryCode FROM countrylanguage GROUP BY CountryCode HAVING COUNT(DISTINCT Language) = ( SELECT MIN(COUNT(*)) FROM countrylanguage GROUP BY CountryCode) );
SELECT country.Name, country.IndepYear, country.SurfaceArea FROM country WHERE country.Code IN ( SELECT CountryCode FROM ( SELECT CountryCode, COUNT(DISTINCT Language) AS Lang_Count FROM countrylanguage GROUP BY CountryCode ORDER BY Lang_Count LIMIT 1 ) );
SELECT country.Name, country.IndepYear, country.SurfaceArea FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY COUNT(countrylanguage.Language) ASC LIMIT 1;
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Code = ( SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(DISTINCT Language) ASC LIMIT 1 );
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Code IN (SELECT CountryCode FROM countrylanguage GROUP BY CountryCode ORDER BY COUNT(DISTINCT Language) ASC LIMIT 1);
SELECT c.Name, c.IndepYear, c.SurfaceArea FROM country c WHERE c.Code = ( SELECT cl.CountryCode FROM countrylanguage cl GROUP BY cl.CountryCode ORDER BY COUNT(DISTINCT cl.Language) ASC LIMIT 1 );

SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);
SELECT Name, IndepYear, SurfaceArea FROM country ORDER BY Population ASC LIMIT 1;
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);
SELECT Name, IndepYear, SurfaceArea FROM country WHERE Population = (SELECT MIN(Population) FROM country);

SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);
SELECT c.Population, c.Name, c.HeadOfState FROM country c ORDER BY c.SurfaceArea DESC LIMIT 1;
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);
SELECT c.Population, c.Name, c.HeadOfState FROM country c ORDER BY c.SurfaceArea DESC LIMIT 1;
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);
SELECT Population, Name, HeadOfState FROM country WHERE SurfaceArea = (SELECT MAX(SurfaceArea) FROM country);

SELECT District, COUNT(*) AS NumberOfCities FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(*) as City_Count FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(ID) as NumberOfCities FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(*) as Num_Cities FROM city GROUP BY District HAVING AVG(Population) < (SELECT AVG(Population) FROM city);
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(*) as NumberOfCities FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(*) as number_of_cities FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT c.District, COUNT(*) as NumberOfCities FROM city c WHERE c.Population > (SELECT AVG(Population) FROM city) GROUP BY c.District;

SELECT c.District, COUNT(*) as NumberOfCities FROM city c INNER JOIN ( SELECT District, AVG(Population) as average_population FROM city GROUP BY District ) subq on c.District = subq.District WHERE c.Population > subq.average_population GROUP BY c.District;
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(*) as City_Count FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT c.District, COUNT(*) as Count_Cities FROM city c WHERE c.Population > (SELECT AVG(Population) FROM city) GROUP BY c.District;
SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(ID) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(*) as Number_Of_Cities FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(*) FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;
SELECT District, COUNT(*) as NumberOfCities FROM city WHERE Population > (SELECT AVG(Population) FROM city) GROUP BY District;

SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;
SELECT Name, SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5;

SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;

SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;
SELECT Name FROM country ORDER BY Population DESC LIMIT 3;

SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;

SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;
SELECT Name FROM country ORDER BY Population ASC LIMIT 3;

SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';

SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';
SELECT COUNT(*) FROM country WHERE Continent = 'Asia';

SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;

SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent='Europe' AND Population=80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;
SELECT Name FROM country WHERE Continent = 'Europe' AND Population = 80000;

SELECT SUM(country.Population) AS TotalPopulation, AVG(country.SurfaceArea) AS AverageArea FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) AS Total_Population, AVG(country.SurfaceArea) AS Average_Area FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) as TotalPopulation, AVG(country.SurfaceArea) as AverageArea FROM country WHERE country.Continent = 'North America' and country.SurfaceArea > 3000;
SELECT SUM(country.Population) as Total_Population, AVG(country.SurfaceArea) as Average_Area FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) AS Total_Population, AVG(country.SurfaceArea) AS Average_Area FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) AS TotalPopulation, AVG(country.SurfaceArea) AS AverageArea FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) as Total_Population, AVG(country.SurfaceArea) as Average_Area FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) AS TotalPopulation, AVG(country.SurfaceArea) AS AverageArea FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) AS TotalPopulation, AVG(country.SurfaceArea) AS AverageArea FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) AS TotalPopulation, AVG(country.SurfaceArea) AS AverageArea FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;

SELECT SUM(country.Population) AS Total_Population, AVG(country.Population) AS Average_Population FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) AS TotalPopulation, AVG(country.Population) AS AveragePopulation FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) as Total_Population, AVG(country.Population) as Average_Population FROM country WHERE Continent = 'North America' AND SurfaceArea > 3000;
SELECT SUM(country.Population) as Total_Population, AVG(country.Population) as Average_Population FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) AS Total_Population, AVG(country.Population) AS Average_Population FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) as TotalPopulation, AVG(country.Population) as AveragePopulation FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) AS total_population, AVG(country.Population) AS average_population FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) AS TotalPopulation, AVG(country.Population) AS AveragePopulation FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;
SELECT SUM(country.Population) AS TotalPopulation, AVG(country.Population) AS AveragePopulation FROM country WHERE Continent='North America' AND SurfaceArea > 3000;
SELECT SUM(country.Population) as TotalPopulation, AVG(country.Population) as AveragePopulation FROM country WHERE country.Continent = 'North America' AND country.SurfaceArea > 3000;

SELECT * FROM city WHERE Population > 160000 AND Population < 900000;
SELECT * FROM city WHERE Population > 160000 AND Population < 900000;
SELECT * FROM city WHERE Population > 160000 AND Population < 900000;
SELECT * FROM city WHERE Population > 160000 AND Population < 900000;
SELECT * FROM city WHERE Population > 160000 AND Population < 900000;
SELECT * FROM city WHERE Population > 160000 AND Population < 900000;
SELECT * FROM city WHERE Population > 160000 AND Population < 900000;
SELECT * FROM city WHERE Population > 160000 AND Population < 900000;
SELECT * FROM city WHERE Population > 160000 AND Population < 900000;
SELECT * FROM city WHERE Population > 160000 AND Population < 900000;

SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;
SELECT Name FROM city WHERE Population BETWEEN 160000 AND 900000;

SELECT c.Name as Country, cl.Language, MAX(cl.Percentage) as Percentage FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Name ORDER BY Percentage DESC;
SELECT c.Name as Country, cl.Language, MAX(cl.Percentage) FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Name;
SELECT country.Name, countrylanguage.Language, MAX(countrylanguage.Percentage) as Percentage FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name;
SELECT country.Name AS Country, countrylanguage.Language AS Language, MAX(countrylanguage.Percentage) AS Highest_Percentage FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name ORDER BY Highest_Percentage DESC;
SELECT cl.CountryCode, cl.Language, MAX(cl.Percentage) AS MaxPercentage FROM countrylanguage AS cl GROUP BY cl.CountryCode;
SELECT c.Name AS 'Country', cl.Language, MAX(cl.Percentage) AS 'Percentage' FROM country c JOIN countrylanguage cl ON c.Code = cl.CountryCode GROUP BY c.Code ORDER BY c.Name;
SELECT country.Name AS Country, countrylanguage.Language FROM country JOIN ( SELECT CountryCode, MAX(Percentage) AS MaxPercentage FROM countrylanguage GROUP BY CountryCode ) AS MaxCountryLanguage ON country.Code = MaxCountryLanguage.CountryCode JOIN countrylanguage ON countrylanguage.CountryCode = MaxCountryLanguage.CountryCode AND countrylanguage.Percentage = MaxCountryLanguage.MaxPercentage;
SELECT c.Name AS Country, l.Language, MAX(l.Percentage) AS Percentage FROM country c JOIN countrylanguage l ON c.Code = l.CountryCode GROUP BY c.Name ORDER BY Percentage DESC;
SELECT country.Name AS Country, MAX(countrylanguage.Percentage) AS Max_Percentage, countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Name;
SELECT cl.CountryCode, cl.Language, MAX(cl.Percentage) FROM countrylanguage cl GROUP BY cl.CountryCode;

SELECT country.Code, countrylanguage.Language, MAX(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code;
SELECT country.Code, countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Percentage = ( SELECT MAX(Percentage) FROM countrylanguage AS cl2 WHERE cl2.CountryCode = country.Code );
SELECT country.Code, country.Name, countrylanguage.Language, MAX(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code, country.Name, countrylanguage.Language;
SELECT country.Code, countrylanguage.Language, MAX(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code;
SELECT country.Code, countrylanguage.Language, MAX(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code, countrylanguage.Language;
SELECT country.Code, countrylanguage.Language, MAX(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code;
SELECT country.Code AS nation_code, countrylanguage.Language, MAX(countrylanguage.Percentage) AS max_percentage FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code;
SELECT country.Code AS NationCode, countrylanguage.Language FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Percentage = ( SELECT MAX(Percentage) FROM countrylanguage WHERE CountryCode = country.Code );
SELECT country.Code, country.Name, countrylanguage.Language, MAX(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code, country.Name;
SELECT country.Code, country.Name, countrylanguage.Language, MAX(countrylanguage.Percentage) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode GROUP BY country.Code, country.Name, countrylanguage.Language;

SELECT COUNT(DISTINCT country.Name) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' GROUP BY country.Name ORDER BY countrylanguage.Percentage DESC;
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' ORDER BY countrylanguage.Percentage DESC;
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' ORDER BY countrylanguage.Percentage DESC;
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' ORDER BY countrylanguage.Percentage DESC;
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' ORDER BY countrylanguage.Percentage DESC;
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' ORDER BY countrylanguage.Percentage DESC;
SELECT COUNT(DISTINCT CountryCode) FROM countrylanguage WHERE Language = 'Spanish' GROUP BY CountryCode ORDER BY Percentage DESC;
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' GROUP BY country.Code ORDER BY countrylanguage.Percentage DESC;
SELECT COUNT(DISTINCT(country.Code)) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' GROUP BY country.Code ORDER BY countrylanguage.Percentage DESC;
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' GROUP BY country.Code HAVING countrylanguage.Percentage = MAX(countrylanguage.Percentage);

SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(*) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT country.Name) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT COUNT(DISTINCT country.Code) FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';

SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC;
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC;
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC;
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC;
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC;
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC;
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC;
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC;
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' ORDER BY countrylanguage.Percentage DESC;
SELECT CountryCode FROM countrylanguage WHERE Language = 'Spanish' ORDER BY Percentage DESC;

SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' ORDER BY countrylanguage.Percentage DESC;
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';
SELECT country.Code FROM country JOIN countrylanguage ON country.Code = countrylanguage.CountryCode WHERE countrylanguage.Language = 'Spanish' AND countrylanguage.IsOfficial = 'T';

SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;
SELECT Name FROM conductor ORDER BY Age ASC;

SELECT Name FROM conductor ORDER BY Age;
SELECT Name FROM conductor ORDER BY Age;
SELECT Name FROM conductor ORDER BY Age;
SELECT Name FROM conductor ORDER BY Age;
SELECT Name FROM conductor ORDER BY Age;
SELECT Name FROM conductor ORDER BY Age;
SELECT Name FROM conductor ORDER BY Age;
SELECT Name FROM conductor ORDER BY Age;
SELECT Name FROM conductor ORDER BY Age;
SELECT Name FROM conductor ORDER BY Age;

SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';

SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';
SELECT Name FROM conductor WHERE Nationality != 'USA';

SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC;

SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, YEAR(CURRENT_DATE) - Year_of_Founded as Existence_Time FROM orchestra ORDER BY Existence_Time ASC;
SELECT Record_Company, (YEAR(CURRENT_DATE) - Year_of_Founded) AS 'Time Existed' FROM orchestra ORDER BY 'Time Existed' ASC;
SELECT Record_Company, (YEAR(CURRENT_DATE) - Year_of_Founded) AS Time_Exist FROM orchestra ORDER BY Time_Exist ASC;
SELECT Record_Company, (CURRENT_DATE - Year_of_Founded) as Existence_Time FROM orchestra ORDER BY Existence_Time ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;

SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format IN ("CD", "DVD");
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ("CD", "DVD");
SELECT COUNT(DISTINCT orchestra.Orchestra_ID) FROM orchestra WHERE orchestra.Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(DISTINCT orchestra.Orchestra_ID) FROM orchestra WHERE orchestra.Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');
SELECT COUNT(DISTINCT Orchestra_ID) FROM orchestra WHERE Major_Record_Format IN ('CD', 'DVD');

SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';

SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';
SELECT grade FROM Highschooler WHERE name = 'Kyle';

SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;

SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;
SELECT name FROM Highschooler WHERE grade = 10;

SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';

SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';
SELECT ID FROM Highschooler WHERE name = 'Kyle';

SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9,10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9,10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);

SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9,10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);
SELECT COUNT(*) FROM Highschooler WHERE grade IN (9, 10);

SELECT grade, COUNT(*) AS 'Number of Highschoolers' FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) as num_highschoolers FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) as Number_of_Highschoolers FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) as Total_Students FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) as 'Number of Highschoolers' FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) as number_of_highschoolers FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(ID) as numberOfHighSchoolers FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) as num_students FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) AS NumberOfHighSchoolers FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) as number_of_highschoolers FROM Highschooler GROUP BY grade;

SELECT grade, COUNT(*) as num_students FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(ID) as 'Number of Students' FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(ID) AS 'Number of Students' FROM Highschooler GROUP BY grade;
SELECT grade, COUNT(*) as NumberOfStudents FROM Highschooler GROUP BY grade;

SELECT grade, COUNT(*) as TotalHighschoolers FROM Highschooler GROUP BY grade ORDER BY TotalHighschoolers DESC LIMIT 1;
SELECT grade, COUNT(ID) as number_of_highschoolers FROM Highschooler GROUP BY grade ORDER BY number_of_highschoolers DESC LIMIT 1;
SELECT grade, COUNT(*) as total_students FROM Highschooler GROUP BY grade ORDER BY total_students DESC LIMIT 1;
SELECT grade, COUNT(*) AS number_of_students FROM Highschooler GROUP BY grade ORDER BY number_of_students DESC LIMIT 1;
SELECT grade, COUNT(ID) as 'Number of Students' FROM Highschooler GROUP BY grade ORDER BY COUNT(ID) DESC LIMIT 1;
SELECT grade, COUNT(*) as student_count FROM Highschooler GROUP BY grade ORDER BY student_count DESC LIMIT 1;
SELECT grade, COUNT(*) AS Total FROM Highschooler GROUP BY grade ORDER BY Total DESC LIMIT 1;
SELECT grade, COUNT(*) as count FROM Highschooler GROUP BY grade ORDER BY count DESC LIMIT 1;
SELECT grade, COUNT(*) AS count FROM Highschooler GROUP BY grade ORDER BY count DESC LIMIT 1;
SELECT grade, COUNT(*) as num_of_students FROM Highschooler GROUP BY grade ORDER BY num_of_students DESC LIMIT 1;

SELECT H2.name FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle';
SELECT H.name FROM Highschooler H JOIN Friend F ON H.ID = F.friend_id JOIN Highschooler HS ON HS.ID = F.student_id WHERE HS.name = 'Kyle';
SELECT H2.name FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle';
SELECT H2.name FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle';
SELECT H2.name FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle';
SELECT h2.name FROM Highschooler h1 JOIN Friend f ON h1.ID = f.student_id JOIN Highschooler h2 ON f.friend_id = h2.ID WHERE h1.name = 'Kyle';
SELECT H2.name FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle';
SELECT H2.name FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID WHERE H1.name = "Kyle";
SELECT H2.name FROM Highschooler H1, Highschooler H2, Friend F WHERE H1.name = 'Kyle' AND F.student_id = H1.ID AND H2.ID = F.friend_id;
SELECT H2.name FROM Highschooler AS H1 JOIN Friend ON H1.ID = Friend.student_id JOIN Highschooler AS H2 ON Friend.friend_id = H2.ID WHERE H1.name = 'Kyle';

SELECT H2.name FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle';
SELECT h2.name FROM Highschooler h1 JOIN Friend f ON h1.ID = f.student_id JOIN Highschooler h2 ON f.friend_id = h2.ID WHERE h1.name = 'Kyle';
SELECT H2.name FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle';
SELECT H.name FROM Highschooler H JOIN Friend F ON H.ID = F.friend_id WHERE F.student_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');
SELECT H2.name FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle';
SELECT H2.name FROM Highschooler H1, Highschooler H2, Friend F WHERE H1.name = 'Kyle' AND H1.ID = F.student_id AND H2.ID = F.friend_id;
SELECT H2.name FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle';
SELECT h2.name FROM Highschooler h1 JOIN Friend f ON h1.ID = f.student_id JOIN Highschooler h2 ON f.friend_id = h2.ID WHERE h1.name = 'Kyle';
SELECT H2.name FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle';
SELECT H2.name FROM Highschooler H1 JOIN Friend F ON H1.ID = F.student_id JOIN Highschooler H2 ON F.friend_id = H2.ID WHERE H1.name = 'Kyle';

SELECT COUNT(*) as NumberOfFriends FROM Friend INNER JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Highschooler H JOIN Friend F ON H.ID = F.student_id WHERE H.name = 'Kyle';
SELECT COUNT(*) FROM Friend F JOIN Highschooler H ON F.student_id = H.ID WHERE H.name = 'Kyle';
SELECT COUNT(*) FROM Highschooler h JOIN Friend f ON h.ID = f.student_id WHERE h.name = 'Kyle';
SELECT COUNT(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Highschooler h JOIN Friend f ON h.ID = f.student_id WHERE h.name = 'Kyle';
SELECT COUNT(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Highschooler h JOIN Friend f ON h.ID = f.student_id WHERE h.name = 'Kyle';
SELECT COUNT(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';

SELECT COUNT(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Highschooler h JOIN Friend f ON h.ID = f.student_id WHERE h.name = 'Kyle';
SELECT COUNT(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Friend JOIN Highschooler ON (Friend.student_id = Highschooler.ID) WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Friend INNER JOIN Highschooler ON Highschooler.ID = Friend.student_id WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Friend INNER JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Friend JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Friend INNER JOIN Highschooler ON Friend.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';

SELECT COUNT(*) FROM Likes INNER JOIN Highschooler ON Likes.liked_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Likes JOIN Highschooler ON Likes.liked_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Likes JOIN Highschooler ON Likes.liked_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Likes INNER JOIN Highschooler ON Likes.liked_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Likes JOIN Highschooler ON Likes.liked_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Likes JOIN Highschooler ON Likes.liked_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Likes, Highschooler WHERE Highschooler.name = 'Kyle' AND Highschooler.ID = Likes.liked_id;
SELECT COUNT(*) FROM Likes JOIN Highschooler ON Likes.liked_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Likes INNER JOIN Highschooler ON Likes.liked_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Likes JOIN Highschooler ON Likes.liked_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';

SELECT COUNT(*) FROM Likes WHERE liked_id = (SELECT ID FROM Highschooler WHERE name = 'Kyle');
SELECT COUNT(*) FROM Likes JOIN Highschooler on Likes.student_id = Highschooler.ID WHERE Highschooler.name = "Kyle";
SELECT COUNT(*) FROM Likes JOIN Highschooler ON Likes.student_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Likes WHERE liked_id = ( SELECT ID FROM Highschooler WHERE name = 'Kyle' );
SELECT COUNT(*) FROM Likes JOIN Highschooler ON Likes.liked_id = Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Likes WHERE Likes.student_id = (SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'Kyle');
SELECT COUNT(*) FROM Likes INNER JOIN Highschooler ON Likes.student_id=Highschooler.ID WHERE Highschooler.name = 'Kyle';
SELECT COUNT(*) FROM Likes WHERE Likes.student_id = ( SELECT Highschooler.ID FROM Highschooler WHERE Highschooler.name = 'Kyle' );
SELECT COUNT(*) as likes_count FROM Likes JOIN Highschooler ON Likes.liked_id = Highschooler.ID WHERE Highschooler.name = 'Kyle' ```;
SELECT COUNT(*) FROM Likes JOIN Highschooler ON Highschooler.ID = Likes.student_id WHERE Highschooler.name = 'Kyle';

SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN ( SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN ( SELECT Friend.student_id FROM Friend );
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) AS average_grade FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN ( SELECT Friend.student_id FROM Friend );

SELECT AVG(Highschooler.grade) as Average_grade FROM Highschooler, Friend WHERE Highschooler.ID = Friend.student_id;
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT student_id FROM Friend);
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) AS average_grade FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) as Avg_Grade FROM Highschooler WHERE Highschooler.ID IN (SELECT Friend.student_id FROM Friend);
SELECT AVG(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID IN (SELECT student_id FROM Friend);

SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN ( SELECT student_id FROM Friend );
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN ( SELECT student_id FROM Friend );
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);

SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(Highschooler.grade) FROM Highschooler WHERE Highschooler.ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);
SELECT MIN(grade) FROM Highschooler WHERE ID NOT IN (SELECT student_id FROM Friend);

SELECT DISTINCT Professionals.professional_id, Professionals.last_name, Professionals.cell_phone FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.last_name, Professionals.cell_phone HAVING COUNT(Treatments.treatment_id) > 2 OR Professionals.state = 'Indiana';
SELECT DISTINCT P.professional_id, P.last_name, P.cell_number FROM Professionals P LEFT JOIN Treatments T ON P.professional_id = T.professional_id WHERE state = 'Indiana' OR P.professional_id IN ( SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2 );
SELECT DISTINCT P.professional_id, P.last_name, P.cell_number FROM Professionals P LEFT JOIN Treatments T ON P.professional_id = T.professional_id WHERE P.state = 'Indiana' OR T.professional_id IN ( SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2 );
SELECT P.professional_id, P.last_name, P.cell_number FROM Professionals P LEFT JOIN Treatments T ON P.professional_id = T.professional_id WHERE P.state = 'Indiana' OR T.professional_id IN ( SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2 );
SELECT DISTINCT P.professional_id, P.last_name, P.cell_number FROM Professionals P LEFT JOIN Treatments T ON P.professional_id = T.professional_id WHERE P.state = 'Indiana' OR T.professional_id IN ( SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2 );
SELECT DISTINCT Professionals.professional_id, Professionals.last_name, Professionals.cell_phone FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' OR Professionals.professional_id IN ( SELECT Professionals.professional_id FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING COUNT(Treatments.treatment_id) > 2 );
SELECT DISTINCT P.professional_id, P.last_name, P.cell_number FROM Professionals P LEFT JOIN Treatments T ON P.professional_id = T.professional_id WHERE P.state = 'Indiana' OR T.professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2);
SELECT DISTINCT P.professional_id, P.last_name, P.cell_number FROM Professionals P LEFT JOIN Treatments T ON P.professional_id = T.professional_id WHERE P.state = 'Indiana' OR P.professional_id IN (SELECT T.professional_id FROM Treatments T GROUP BY T.professional_id HAVING COUNT(T.treatment_id) > 2);
SELECT DISTINCT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' OR Professionals.professional_id IN ( SELECT Professionals.professional_id FROM Treatments INNER JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY Professionals.professional_id HAVING COUNT(*) > 2 );
SELECT DISTINCT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals LEFT JOIN Treatments on Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' OR Professionals.professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2);

SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_phone FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.last_name, Professionals.cell_phone HAVING COUNT(Treatments.treatment_id) >2 OR Professionals.state = 'Indiana';
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_phone FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.last_name, Professionals.cell_phone HAVING COUNT(Treatments.treatment_id) > 2 OR Professionals.state = 'Indiana';
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_phone FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING COUNT(Treatments.treatment_id) > 2 OR Professionals.state = 'Indiana';
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_phone FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.last_name, Professionals.cell_phone HAVING COUNT(Treatments.treatment_id) > 2 OR Professionals.state = 'Indiana';
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.last_name, Professionals.cell_number HAVING Professionals.state = 'Indiana' OR COUNT(Treatments.treatment_id) > 2;
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_phone FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' OR Professionals.professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2);
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_phone FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' OR Professionals.professional_id IN ( SELECT Treatments.professional_id FROM Treatments GROUP BY Treatments.professional_id HAVING COUNT(Treatments.treatment_id) > 2 );
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_phone FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' OR Treatments.professional_id IN ( SELECT Treatments.professional_id FROM Treatments GROUP BY Treatments.professional_id HAVING COUNT(Treatments.treatment_id) > 2 );
SELECT p.professional_id, p.last_name, p.cell_number FROM Professionals AS p LEFT JOIN Treatments AS t ON t.professional_id = p.professional_id WHERE p.state = 'Indiana' GROUP BY p.professional_id, p.last_name, p.cell_number HAVING COUNT(t.treatment_id) > 2 UNION SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana';
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals WHERE Professionals.state = 'Indiana' OR Professionals.professional_id IN ( SELECT Treatments.professional_id FROM Treatments GROUP BY Treatments.professional_id HAVING COUNT(Treatments.treatment_id) > 2 );

SELECT DISTINCT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Owners ON Dogs.owner_id = Owners.owner_id GROUP BY Dogs.dog_id, Owners.owner_id HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Owners ON Dogs.owner_id = Owners.owner_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Owners ON Dogs.owner_id = Owners.owner_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.dog_id HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Owners ON Dogs.owner_id = Owners.owner_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Owners ON Dogs.owner_id = Owners.owner_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;

SELECT d.owner_id, o.first_name, o.last_name, COUNT(d.dog_id) AS Number_of_dogs FROM Dogs d JOIN Owners o ON d.owner_id = o.owner_id GROUP BY d.owner_id, o.first_name, o.last_name ORDER BY Number_of_dogs DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1;
SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id IN ( SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(dog_id) DESC LIMIT 1 );
SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id IN ( SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(dog_id) DESC LIMIT 1 );
SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id IN ( SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id IN ( SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1);
SELECT owner_id, first_name, last_name, COUNT(*) as dog_count FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY owner_id, first_name, last_name ORDER BY dog_count DESC LIMIT 1;
SELECT owner_id, first_name, last_name, COUNT(*) as number_of_dogs FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY owner_id, first_name, last_name ORDER BY number_of_dogs DESC LIMIT 1;
SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id IN ( SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT owner_id, first_name, last_name, COUNT(dog_id) as dog_count FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY owner_id, first_name, last_name ORDER BY dog_count DESC LIMIT 1;

SELECT o.owner_id, o.first_name, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id, o.first_name, o.last_name ORDER BY COUNT(d.dog_id) DESC LIMIT 1;
SELECT o.owner_id, o.first_name, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id, o.first_name, o.last_name ORDER BY COUNT(d.dog_id) DESC LIMIT 1;
SELECT O.owner_id, O.first_name, O.last_name FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id GROUP BY O.owner_id, O.first_name, O.last_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1;
SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id IN ( SELECT owner_id FROM ( SELECT owner_id, COUNT(*) as dog_count FROM Dogs GROUP BY owner_id ORDER BY dog_count DESC LIMIT 1 ) );
SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1;
SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id = ( SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT o.owner_id, o.first_name, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id, o.first_name, o.last_name HAVING COUNT(d.dog_id) = ( SELECT MAX(dog_count) FROM ( SELECT COUNT(dog_id) AS dog_count FROM Dogs GROUP BY owner_id ) t );
SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1;
SELECT owner_id, first_name, last_name FROM Owners WHERE owner_id IN ( SELECT owner_id FROM Dogs GROUP BY owner_id ORDER BY COUNT(dog_id) DESC LIMIT 1 );

SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.role_code, Professionals.first_name HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.role_code, Professionals.first_name HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.role_code, Professionals.first_name HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.role_code, Professionals.first_name HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT P.professional_id, P.role_code, P.first_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.role_code, P.first_name HAVING COUNT(*) >= 2;
SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.role_code, Professionals.first_name HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.role_code, Professionals.first_name HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT P.professional_id, P.role_code, P.first_name FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.role_code, P.first_name HAVING COUNT(T.treatment_id) >= 2;
SELECT p.professional_id, p.role_code, p.first_name FROM Professionals p INNER JOIN Treatments t ON t.professional_id = p.professional_id GROUP BY p.professional_id, p.role_code, p.first_name HAVING COUNT(t.treatment_id) >= 2;
SELECT P.professional_id, P.role_code, P.first_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.role_code, P.first_name HAVING COUNT(T.treatment_id) >= 2;

SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.role_code, Professionals.first_name HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.role_code, Professionals.first_name HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT P.professional_id, P.role_code, P.first_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.role_code, P.first_name HAVING COUNT(T.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.role_code, Professionals.first_name HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT p.professional_id, p.role_code, p.first_name FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id, p.role_code, p.first_name HAVING COUNT(*) >= 2;
SELECT p.professional_id, p.role_code, p.first_name FROM Professionals p JOIN Treatments t ON t.professional_id = p.professional_id GROUP BY p.professional_id, p.role_code, p.first_name HAVING COUNT(t.treatment_id) >= 2;
SELECT P.professional_id, P.role_code, P.first_name FROM Professionals P JOIN Treatments T ON T.professional_id = P.professional_id GROUP BY P.professional_id, P.role_code, P.first_name HAVING COUNT(T.treatment_id) >= 2;
SELECT P.professional_id, P.role_code, P.first_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.role_code, P.first_name HAVING COUNT(T.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.role_code, Professionals.first_name HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.role_code, Professionals.first_name FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.role_code, Professionals.first_name HAVING COUNT(Treatments.treatment_id) >= 2;

SELECT treatment_type_description FROM Treatment_Types INNER JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types INNER JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY treatment_type_description ORDER BY AVG(cost_of_treatment) ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = ( SELECT treatment_type_code FROM Treatments GROUP BY treatment_type_code ORDER BY AVG(cost_of_treatment) ASC LIMIT 1 );
SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = (SELECT treatment_type_code FROM Treatments WHERE cost_of_treatment = (SELECT MIN(cost_of_treatment) FROM Treatments));
SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code WHERE cost_of_treatment = (SELECT MIN(cost_of_treatment) FROM Treatments);
SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = (SELECT treatment_type_code FROM Treatments WHERE cost_of_treatment = (SELECT MIN(cost_of_treatment) FROM Treatments));

SELECT Treatment_Types.treatment_type_description FROM Treatments INNER JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code ORDER BY Treatments.cost_of_treatment ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code ORDER BY Treatments.cost_of_treatment ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1;
SELECT tt.treatment_type_description FROM Treatment_Types AS tt JOIN Treatments AS t ON tt.treatment_type_code = t.treatment_type_code ORDER BY t.cost_of_treatment ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code ORDER BY Treatments.cost_of_treatment ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = (SELECT treatment_type_code FROM Treatments ORDER BY cost_of_treatment ASC LIMIT 1);
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code ORDER BY Treatments.cost_of_treatment ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code ORDER BY Treatments.cost_of_treatment LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code ORDER BY cost_of_treatment ASC LIMIT 1;

SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT o.owner_id, o.zip_code FROM Owners o JOIN Dogs d on o.owner_id = d.owner_id JOIN Treatments t on d.dog_id = t.dog_id GROUP BY o.owner_id, o.zip_code ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Treatments.dog_id = Dogs.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners INNER JOIN Dogs ON Dogs.owner_id = Owners.owner_id INNER JOIN Treatments ON Treatments.dog_id = Dogs.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;

SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Treatments.dog_id = Dogs.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT O.owner_id, O.zip_code FROM Owners O INNER JOIN Dogs D ON O.owner_id = D.owner_id INNER JOIN Treatments T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.zip_code ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs on Dogs.owner_id = Owners.owner_id JOIN Treatments on Treatments.dog_id = Dogs.dog_id GROUP BY Owners.owner_id ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;

SELECT P.first_name, P.last_name FROM Professionals AS P JOIN Treatments AS T ON P.professional_id = T.professional_id WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT P.first_name, P.last_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT P.first_name, P.last_name FROM Professionals P JOIN Treatments T ON T.professional_id = P.professional_id WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT P.first_name, P.last_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT Professionals.first_name, Professionals.last_name FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);

SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments) GROUP BY Professionals.first_name, Professionals.last_name;
SELECT DISTINCT P.first_name, P.last_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT P.first_name, P.last_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT P.first_name, P.last_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id WHERE T.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT Professionals.first_name, Professionals.last_name FROM Professionals WHERE EXISTS ( SELECT 1 FROM Treatments WHERE Treatments.professional_id = Professionals.professional_id AND Treatments.cost_of_treatment < (SELECT AVG(Treatments.cost_of_treatment) FROM Treatments) );
SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Treatments.professional_id = Professionals.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(Treatments.cost_of_treatment) FROM Treatments);

SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Dogs INNER JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Dogs INNER JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'Virginia';

SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'Virginia';

SELECT Owners.last_name FROM Owners INNER JOIN Dogs ON Dogs.owner_id = Owners.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.date_of_birth DESC LIMIT 1;
SELECT Owners.last_name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.age ASC LIMIT 1;
SELECT Owners.last_name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.age LIMIT 1;

SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT last_name FROM Owners, Dogs WHERE Owners.owner_id = Dogs.owner_id ORDER BY dogs.date_of_birth DESC LIMIT 1;
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id ORDER BY Dogs.date_of_birth DESC LIMIT 1;
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.date_of_birth = (SELECT MAX(Dogs.date_of_birth) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT o.last_name FROM Owners o JOIN Dogs d on o.owner_id = d.owner_id WHERE d.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.date_of_birth DESC LIMIT 1;

SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');

SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');
SELECT email_address FROM Professionals WHERE state IN ('Hawaii', 'Wisconsin');

SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);

SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs);

SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;

SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;

SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'Yes';
SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'Yes';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'yes';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'yes';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'Yes';
SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'Y';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'yes';
SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'Y';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'Yes';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'yes';

SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'yes';
SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'Yes';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'y';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'Yes';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'Y';
SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'Yes';
SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'Yes';
SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'yes';
SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 'Y';
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 'Y';

SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;

SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;
SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC;

SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';

SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';

SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);

SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948,1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948,1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);
SELECT Name FROM singer WHERE Birth_Year IN (1948, 1949);

SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer WHERE Net_Worth_Millions = (SELECT MAX(Net_Worth_Millions) FROM singer);
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;
SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1;

SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as NumberOfSingers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;

SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as NumberOfSingers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) FROM singer GROUP BY Citizenship;

SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) AS total FROM singer GROUP BY Citizenship ORDER BY total DESC LIMIT 1;
SELECT Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(Citizenship) AS Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship ORDER BY NumberOfSingers DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Number FROM singer GROUP BY Citizenship ORDER BY Number DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as count FROM singer GROUP BY Citizenship ORDER BY count DESC LIMIT 1;

SELECT Citizenship, COUNT(*) as count FROM singer GROUP BY Citizenship ORDER BY count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as count FROM singer GROUP BY Citizenship ORDER BY count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) AS frequency FROM singer GROUP BY Citizenship ORDER BY frequency DESC LIMIT 1;
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship ORDER BY NumberOfSingers DESC LIMIT 1;
SELECT Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as num FROM singer GROUP BY Citizenship ORDER BY num DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Num FROM singer GROUP BY Citizenship ORDER BY Num DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) AS "Number of Singers" FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1;

SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship AS Nationality, MAX(Net_Worth_Millions) AS Max_Net_Worth FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship AS Nationality, MAX(Net_Worth_Millions) AS Maximum_Net_Worth FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;

SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;

SELECT DISTINCT s.Name FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID WHERE so.Sales > 300000;
SELECT DISTINCT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT s.Name FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID WHERE so.Sales > 300000;
SELECT DISTINCT s.Name FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID WHERE so.Sales > 300000;
SELECT DISTINCT s.Name FROM singer AS s JOIN song AS so ON s.Singer_ID = so.Singer_ID WHERE so.Sales > 300000;
SELECT DISTINCT s.Name FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID WHERE so.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT s.Name FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID WHERE so.Sales > 300000;
SELECT DISTINCT s.Name FROM singer AS s JOIN song AS sg ON s.Singer_ID = sg.Singer_ID WHERE sg.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;

SELECT DISTINCT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song on singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;

SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(Singer_ID) > 1;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;
SELECT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955 GROUP BY Citizenship HAVING COUNT(DISTINCT Singer_ID) > 1;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_year < 1945 OR Birth_year > 1955;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;
SELECT DISTINCT s.Citizenship FROM singer s WHERE s.Birth_Year < 1945 OR s.Birth_Year > 1955;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;
SELECT DISTINCT s1.Citizenship FROM singer s1 JOIN singer s2 ON s1.Citizenship = s2.Citizenship WHERE s1.Birth_Year < 1945 AND s2.Birth_Year > 1955;

SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year < 1945 OR Birth_Year > 1955;
SELECT DISTINCT singer.Citizenship FROM singer WHERE singer.Birth_Year < 1945 OR singer.Birth_Year > 1955;
SELECT DISTINCT s1.Citizenship FROM singer s1, singer s2 WHERE s1.Birth_Year < 1945 AND s2.Birth_Year > 1955 AND s1.Citizenship = s2.Citizenship;

SELECT property_name FROM Properties INNER JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE (property_type_description = 'house' OR property_type_description = 'apartment') AND room_count > 1;
SELECT property_name FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE (property_type_description = 'House' OR property_type_description = 'Apartment') AND room_count > 1;
SELECT p.property_name FROM Properties p JOIN Ref_Property_Types rpt ON p.property_type_code = rpt.property_type_code WHERE (rpt.property_type_description = 'house' OR rpt.property_type_description = 'apartment') AND p.room_count > 1;
SELECT p.property_name FROM Properties p INNER JOIN Ref_Property_Types rpt ON p.property_type_code = rpt.property_type_code WHERE (rpt.property_type_description = 'House' OR rpt.property_type_description = 'Apartment') AND p.room_count > 1;
SELECT Properties.property_name FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE (Ref_Property_Types.property_type_description = 'House' OR Ref_Property_Types.property_type_description = 'Apartment') AND Properties.room_count > 1;
SELECT DISTINCT Properties.property_name FROM Properties INNER JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE (Ref_Property_Types.property_type_description = "House" OR Ref_Property_Types.property_type_description = "Apartment") AND Properties.room_count > 1;
SELECT p.property_name FROM Properties p JOIN Ref_Property_Types rpt ON p.property_type_code = rpt.property_type_code WHERE (rpt.property_type_description = 'House' OR rpt.property_type_description = 'Apartment') AND p.room_count > 1;
SELECT P.property_name FROM Properties P JOIN Ref_Property_Types RPT ON P.property_type_code = RPT.property_type_code WHERE (RPT.property_type_description = 'House' OR RPT.property_type_description = 'Apartment') AND P.room_count > 1;
SELECT P.property_name FROM Properties P JOIN Ref_Property_Types RPT ON P.property_type_code = RPT.property_type_code WHERE (RPT.property_type_description = 'House' OR RPT.property_type_description = 'Apartment') AND P.room_count > 1;
SELECT property_name FROM Properties JOIN Ref_Property_Types ON Properties.property_type_code = Ref_Property_Types.property_type_code WHERE (property_type_description = 'House' OR property_type_description = 'Apartment') AND room_count > 1;

