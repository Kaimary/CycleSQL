SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;

SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) AS Total_Singers FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) AS total_singers FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;

SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;

SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;
SELECT Name, Country FROM singer ORDER BY Birthday ASC;

SELECT AVG(Singer_ID) as average_id, MIN(Singer_ID) as minimum_id, MAX(Singer_ID) as maximum_id FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) as Average_ID, MIN(Singer_ID) as Minimum_ID, MAX(Singer_ID) as Maximum_ID FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) as Average, MIN(Singer_ID) as Minimum, MAX(Singer_ID) as Maximum FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) as Average_ID, MIN(Singer_ID) as Min_ID, MAX(Singer_ID) as Max_ID FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) as Average_ID, MIN(Singer_ID) as Minimum_ID, MAX(Singer_ID) as Maximum_ID FROM singer WHERE Country = 'France';
SELECT AVG(Singer_ID) as Average_ID, MIN(Singer_ID) as Minimum_ID, MAX(Singer_ID) as Maximum_ID FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) AS Average_ID, MIN(Singer_ID) AS Minimum_ID, MAX(Singer_ID) AS Maximum_ID FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) as average_id, MIN(Singer_ID) as min_id, MAX(Singer_ID) as max_id FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) as Average_ID, MIN(Singer_ID) as Minimum_ID, MAX(Singer_ID) as Maximum_ID FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) as Average_ID, MIN(Singer_ID) as Minimum_ID, MAX(Singer_ID) as Maximum_ID FROM singer WHERE Country = 'France';

SELECT AVG(Singer_ID) as Average_ID, MIN(Singer_ID) as Minimum_ID, MAX(Singer_ID) as Maximum_ID FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) as Average, MIN(Singer_ID) as Minimum, MAX(Singer_ID) as Maximum FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) as Average, MIN(Singer_ID) as Minimum, MAX(Singer_ID) as Maximum FROM singer WHERE Country='French';
SELECT AVG(Singer_ID) as Average_ID, MIN(Singer_ID) as Minimum_ID, MAX(Singer_ID) as Maximum_ID FROM singer WHERE Country = 'France';
SELECT AVG(Singer_ID) as Average, MIN(Singer_ID) as Minimum, MAX(Singer_ID) as Maximum FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) as Average_ID, MIN(Singer_ID) as Minimum_ID, MAX(Singer_ID) as Maximum_ID FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) AS Average_ID, MIN(Singer_ID) AS Minimum_ID, MAX(Singer_ID) AS Maximum_ID FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) as Average, MIN(Singer_ID) as Minimum, MAX(Singer_ID) as Maximum FROM singer WHERE Country = 'French';
SELECT AVG(Singer_ID) AS Average_ID, MIN(Singer_ID) AS Minimum_ID, MAX(Singer_ID) AS Maximum_ID FROM singer WHERE Country = 'France';
SELECT AVG(Singer_ID) AS Average, MIN(Singer_ID) AS Minimum, MAX(Singer_ID) AS Maximum FROM singer WHERE Country = 'French';

SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT s.Song_Name, s.Song_release_year FROM singer s WHERE s.Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Birthday = (SELECT MAX(Birthday) from singer);
SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT S.Name, S.Song_release_year FROM singer S WHERE S.Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT singer.Name AS singer_name, singer.Song_Name, singer.Song_release_year FROM singer WHERE singer.Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT Name, Song_release_year FROM singer WHERE Birthday = (SELECT MAX(Birthday) FROM singer);

SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT Name, Song_release_year FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE Birthday = (SELECT MIN(Birthday) FROM singer);
SELECT Name, Song_release_year FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT Name, Song_release_year FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT Name, Song_release_year FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID WHERE Birthday = (SELECT MAX(Birthday) FROM singer);
SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Birthday = ( SELECT MAX(si.Birthday) FROM singer si );
SELECT s.Name, s.Song_release_year FROM singer s WHERE s.Birthday = (SELECT MAX(Birthday) FROM singer);

SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;

SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE Birthday LIKE '2001-%';
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;
SELECT DISTINCT Country FROM singer WHERE Birthday LIKE '2001-%';
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) = 2001;

SELECT Country, COUNT(*) as Singer_Count FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(Singer_ID) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(Singer_ID) as NumberOfSingers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_singers FROM singer GROUP BY Country;

SELECT Country, COUNT(*) as number_of_singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as number_of_singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Singer_Count FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS Count FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as Number_of_Singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) as number_of_singers FROM singer GROUP BY Country;
SELECT Country, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Country;

SELECT s.Song_Name FROM singer s WHERE YEAR(CURDATE()) - YEAR(s.Birthday) > (SELECT AVG(YEAR(CURDATE()) - YEAR(Birthday)) FROM singer);
SELECT s.Song_Name FROM singer s WHERE YEAR(CURDATE()) - YEAR(s.Birthday) > (SELECT AVG(YEAR(CURDATE()) - YEAR(Birthday)) FROM singer);
SELECT s.Song_Name FROM singer s WHERE YEAR(CURDATE()) - YEAR(s.Birthday) > (SELECT AVG(YEAR(CURDATE()) - YEAR(Birthday)) FROM singer);
SELECT Song_Name FROM singer WHERE (YEAR(CURDATE()) - YEAR(Birthday)) > (SELECT AVG(YEAR(CURDATE()) - YEAR(Birthday)) FROM singer);
SELECT Song_Name FROM singer WHERE (YEAR(CURRENT_DATE) - YEAR(Birthday)) > (SELECT AVG(YEAR(CURRENT_DATE) - YEAR(Birthday)) FROM singer);
SELECT singer.Song_Name FROM singer WHERE YEAR(CURDATE()) - YEAR(singer.Birthday) > (SELECT AVG(YEAR(CURDATE()) - YEAR(Birthday)) FROM singer);
SELECT Song_Name FROM singer WHERE (EXTRACT (YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM singer.Birthday)) > (SELECT AVG(EXTRACT (YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM singer.Birthday)) FROM singer);
SELECT s.Song_Name FROM singer s WHERE YEAR(CURRENT_DATE) - YEAR(s.Birthday) > (SELECT AVG(YEAR(CURRENT_DATE) - YEAR(Birthday)) FROM singer);
SELECT Song_Name FROM singer WHERE (YEAR(CURRENT_DATE) - YEAR(Birthday)) > (SELECT AVG(YEAR(CURRENT_DATE) - YEAR(Birthday)) FROM singer);
SELECT Song_Name FROM singer WHERE (CURRENT_DATE - Birthday) >= (SELECT AVG(CURRENT_DATE - Birthday) FROM singer);

SELECT DISTINCT Song_Name FROM singer WHERE Birthday < ( SELECT AVG(Birthday) FROM singer );
SELECT DISTINCT s.Song_Name FROM singer s WHERE s.Birthday < ( SELECT AVG(s2.Birthday) FROM singer s2 );
SELECT Song_Name FROM singer WHERE Birthday < (SELECT AVG(Birthday) FROM singer);
SELECT s.Song_Name FROM singer s WHERE YEAR(CURDATE()) - YEAR(s.Birthday) > (SELECT AVG(YEAR(CURDATE()) - YEAR(Birthday)) FROM singer);
SELECT s.Song_Name FROM singer s WHERE YEAR(CURDATE()) - YEAR(s.Birthday) > (SELECT AVG(YEAR(CURDATE()) - YEAR(Birthday)) FROM singer);
SELECT s.Song_Name FROM singer s WHERE s.Birthday > ( SELECT AVG(s2.Birthday) FROM singer s2 );
SELECT Song_Name FROM singer WHERE Birthday < ( SELECT AVG(Birthday) FROM singer );
SELECT DISTINCT s.Song_Name FROM singer s WHERE s.Birthday < (SELECT AVG(Birthday) FROM singer);
SELECT s.Song_Name FROM singer s WHERE YEAR(CURDATE()) - YEAR(s.Birthday) > ( SELECT AVG(YEAR(CURDATE()) - YEAR(Birthday)) FROM singer );
SELECT s.Song_Name FROM singer s WHERE YEAR(CURDATE()) - YEAR(s.Birthday) > (SELECT AVG(YEAR(CURRENT_DATE) - YEAR(Birthday)) FROM singer);

SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;

SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;
SELECT Location, Name FROM stadium WHERE Capacity BETWEEN 5000 AND 10000;

SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS 'Average Capacity', MAX(Capacity) AS 'Highest Capacity' FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) as Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;

SELECT AVG(Capacity) as Average_Capacity, MAX(Capacity) as Highest_Capacity FROM stadium;
SELECT AVG(Capacity) as Average_Capacity, MAX(Capacity) as Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS AverageCapacity, MAX(Capacity) AS HighestCapacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;
SELECT AVG(Capacity) AS Average_Capacity, MAX(Capacity) AS Highest_Capacity FROM stadium;

SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);

SELECT Name, Capacity FROM stadium WHERE Average = ( SELECT MAX(Average) FROM stadium );
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);
SELECT Name, Capacity FROM stadium WHERE Average = (SELECT MAX(Average) FROM stadium);

SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;

SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;
SELECT COUNT(*) FROM concert WHERE Year >= 2014;

SELECT stadium.Name, COUNT(concert.Stadium_ID) AS NumberOfConcerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Name;
SELECT stadium.Name, COUNT(concert.concert_ID) as num_concerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID=concert.Stadium_ID GROUP BY stadium.Name;
SELECT s.Name, COUNT(c.concert_ID) as number_of_concerts FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Name;
SELECT s.Name as Stadium_Name, COUNT(c.concert_ID) as Number_of_Concerts FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Name;
SELECT s.Name AS Stadium_Name, COUNT(c.concert_ID) AS Number_of_Concerts FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Name;
SELECT s.Name, COUNT(c.concert_ID) as number_of_concerts FROM stadium as s JOIN concert as c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Name;
SELECT s.Name AS Stadium_Name, COUNT(c.concert_ID) AS Number_of_Concerts FROM stadium s INNER JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Name;
SELECT s.Name AS Stadium_Name, COUNT(c.concert_ID) AS Number_of_Concerts FROM stadium s LEFT JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Name;
SELECT s.Name, COUNT(c.concert_ID) as Number_of_Concerts FROM stadium s LEFT JOIN concert c on s.Stadium_ID = c.Stadium_ID GROUP BY s.Name;
SELECT s.Name AS Stadium_Name, COUNT(c.concert_ID) AS Number_of_Concerts FROM stadium s JOIN concert c ON s.Stadium_ID=c.Stadium_ID GROUP BY s.Name;

SELECT stadium.Name, COUNT(concert.concert_ID) AS Number_of_Concerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Name;
SELECT stadium.Name, COUNT(concert.Stadium_ID) AS NumberOfConcerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Name;
SELECT s.Stadium_ID, s.Name, COUNT(c.concert_ID) as Number_of_Concerts FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Stadium_ID, s.Name;
SELECT stadium.Stadium_ID, stadium.Name, COUNT(concert.concert_ID) AS Total_Concerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Stadium_ID, stadium.Name;
SELECT stadium.Stadium_ID, stadium.Name, COUNT(concert.concert_ID) AS Num_Concerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Stadium_ID, stadium.Name;
SELECT stadium.Name, COUNT(concert.concert_ID) as number_of_concerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Name;
SELECT stadium.Name, COUNT(concert.concert_ID) as number_of_concerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Name;
SELECT s.Stadium_ID, s.Name, COUNT(c.concert_ID) AS Number_of_Concerts FROM stadium s LEFT JOIN concert c ON s.Stadium_ID = c.Stadium_ID GROUP BY s.Stadium_ID, s.Name;
SELECT stadium.Name, COUNT(concert.concert_ID) AS Number_of_Concerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Name;
SELECT stadium.Name, COUNT(concert.concert_ID) as Number_of_Concerts FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID GROUP BY stadium.Name;

SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Stadium_ID, s.Name, s.Capacity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Name, s.Capacity ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s INNER JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Stadium_ID ORDER BY COUNT(*) DESC LIMIT 1;
SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year >= 2014 GROUP BY stadium.Name, stadium.Capacity ORDER BY COUNT(concert.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Name, s.Capacity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Name, s.Capacity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Stadium_ID ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Name, s.Capacity ORDER BY COUNT(*) DESC LIMIT 1;
SELECT stadium.Name, stadium.Capacity FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year >= 2014 GROUP BY stadium.Stadium_ID, stadium.Name, stadium.Capacity ORDER BY COUNT(concert.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Capacity FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year >= 2014 GROUP BY s.Stadium_ID, s.Name, s.Capacity ORDER BY COUNT(*) DESC LIMIT 1;

SELECT stadium.Name, stadium.Highest FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year > 2013 GROUP BY stadium.Stadium_ID ORDER BY COUNT(concert.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Highest FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID, s.Name, s.Highest ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Highest FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Highest FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID, s.Name, s.Highest ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Highest FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID, s.Name, s.Highest ORDER BY COUNT(*) DESC LIMIT 1;
SELECT stadium.Name, stadium.Highest FROM stadium JOIN concert ON concert.Stadium_ID = stadium.Stadium_ID WHERE concert.Year > 2013 GROUP BY stadium.Stadium_ID ORDER BY COUNT(concert.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Highest FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID, s.Name, s.Highest ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Highest FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID, s.Name, s.Highest ORDER BY COUNT(*) DESC LIMIT 1;
SELECT s.Name, s.Highest FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID, s.Name, s.Highest ORDER BY COUNT(c.concert_ID) DESC LIMIT 1;
SELECT s.Name, s.Highest FROM stadium s JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.Year > 2013 GROUP BY s.Stadium_ID, s.Name, s.Highest ORDER BY COUNT(*) DESC LIMIT 1;

SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;

SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert WHERE Year = (SELECT MIN(Year) FROM concert);
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;
SELECT concert_Name FROM concert ORDER BY Year ASC LIMIT 1;

SELECT MAX(Capacity) AS Highest_Attendance FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT MAX(Capacity) AS Highest_Attendance FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT MAX(Capacity) AS Highest_Attendance_Without_Concert FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT MAX(Capacity) as Highest_Attendance_Without_Concert FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT MAX(Capacity) AS Highest_Attendance_Without_Concert FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT MAX(Capacity) as Highest_Attendance_Without_Concert FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT MAX(Capacity) AS Highest_Capacity FROM stadium WHERE Stadium_ID NOT IN (SELECT DISTINCT Stadium_ID FROM concert);
SELECT MAX(Capacity) FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT MAX(Capacity) AS highest_capacity FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT MAX(Capacity) as Highest_Attendance FROM stadium WHERE Stadium_ID NOT IN (SELECT distinct Stadium_ID FROM concert);

SELECT s.Stadium_ID, s.Name, s.Lowest FROM stadium s LEFT JOIN concert c ON s.Stadium_ID = c.Stadium_ID WHERE c.concert_ID IS NULL;
SELECT Name, Lowest FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT Name, Lowest FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT Name, Lowest FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT Stadium_ID, Name, Lowest FROM stadium WHERE Stadium_ID NOT IN (SELECT distinct Stadium_ID FROM concert);
SELECT stadium.Name, stadium.Lowest FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Stadium_ID IS NULL;
SELECT Name, Lowest FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT stadium.Name, stadium.Lowest FROM stadium LEFT JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Stadium_ID IS NULL;
SELECT Name, Lowest FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);
SELECT Name, Lowest FROM stadium WHERE Stadium_ID NOT IN (SELECT Stadium_ID FROM concert);

SELECT DISTINCT Country FROM singer WHERE Birthday LIKE '%1981%' OR Birthday LIKE '%1991%';
SELECT DISTINCT Country FROM singer WHERE Birthday LIKE '1981%' OR Birthday LIKE '1991%';
SELECT DISTINCT Country FROM singer WHERE Birthday LIKE '1981%' OR Birthday LIKE '1991%';
SELECT DISTINCT Country FROM singer WHERE Birthday LIKE '1981%' OR Birthday LIKE '1991%';
SELECT DISTINCT Country FROM singer WHERE Birthday LIKE '1981%' OR Birthday LIKE '1991%';
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) IN (1981, 1991);
SELECT DISTINCT Country FROM singer WHERE YEAR(Birthday) IN (1981,1991);
SELECT DISTINCT Country FROM singer WHERE Birthday LIKE '1981%' OR Birthday LIKE '1991%';
SELECT DISTINCT Country FROM singer WHERE Birthday LIKE '1981%' OR Birthday LIKE '1991%';
SELECT DISTINCT Country FROM singer WHERE Birthday LIKE '1981%' OR Birthday LIKE '1991%';

SELECT stadium.Name, AVG(stadium.Capacity) as Average_Attendance FROM stadium WHERE NOT EXISTS ( SELECT 1 FROM concert INNER JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE concert.Year = 2014 AND concert.Stadium_ID = stadium.Stadium_ID ) GROUP BY stadium.Name;
SELECT stadium.Name, AVG(stadium.Average) as Average_Attendance FROM stadium WHERE stadium.Stadium_ID NOT IN ( SELECT concert.Stadium_ID FROM concert WHERE concert.Year = 2014 ) GROUP BY stadium.Name;
SELECT stadium.Stadium_ID, stadium.Name, AVG(stadium.Capacity) AS Average_Attendance FROM stadium WHERE stadium.Stadium_ID NOT IN (SELECT concert.Stadium_ID FROM concert WHERE concert.Year = 2014) GROUP BY stadium.Stadium_ID, stadium.Name;
SELECT AVG(stadium.Capacity) as Avg_Attendance FROM stadium WHERE stadium.Stadium_ID NOT IN ( SELECT concert.Stadium_ID FROM concert WHERE concert.Year = 2014 );
SELECT AVG(Average) AS Average_Attendance FROM stadium WHERE Stadium_ID NOT IN ( SELECT Stadium_ID FROM concert WHERE Year = 2014 );
SELECT stadium.Name, AVG(stadium.Capacity) AS Average_Attendance FROM stadium WHERE stadium.Stadium_ID NOT IN ( SELECT concert.Stadium_ID FROM concert WHERE concert.Year = 2014) GROUP BY stadium.Name;
SELECT avg(s.Capacity) AS 'Average Attendance' FROM stadium s WHERE s.Stadium_ID NOT IN (SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014);
SELECT stadium.Name, AVG(stadium.Capacity) as Average_Attendance FROM stadium WHERE stadium.Stadium_ID NOT IN ( SELECT concert.Stadium_ID FROM concert WHERE concert.Year = 2014) GROUP BY stadium.Name;
SELECT stadium.Name, AVG(stadium.Average) as 'Average Attendance' FROM stadium WHERE stadium.Stadium_ID NOT IN ( SELECT concert.Stadium_ID FROM concert WHERE concert.Year = 2014) GROUP BY stadium.Name;
SELECT st.Name, AVG(st.Capacity) AS 'Average Attendance' FROM stadium st WHERE st.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE YEAR = 2014) GROUP BY st.Name;

SELECT s.Name, s.Lowest FROM stadium s WHERE s.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014);
SELECT s.Stadium_ID, s.Name, s.Lowest FROM stadium s WHERE s.Stadium_ID NOT IN (SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014);
SELECT s.Stadium_ID, s.Name, s.Lowest FROM stadium s WHERE s.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014);
SELECT s.Stadium_ID, s.Name, s.Lowest FROM stadium s WHERE s.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014);
SELECT s.Name, s.Lowest FROM stadium s WHERE s.Stadium_ID NOT IN (SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014);
SELECT s.Stadium_ID, s.Name, s.Lowest FROM stadium s WHERE s.Stadium_ID NOT IN (SELECT c.Stadium_ID FROM concert c WHERE YEAR = 2014);
SELECT s.Name, s.Lowest FROM stadium s WHERE s.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014 );
SELECT s.Name, s.Lowest FROM stadium s WHERE s.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014 );
SELECT s.Name, s.Lowest FROM stadium s WHERE s.Stadium_ID NOT IN ( SELECT c.Stadium_ID FROM concert c WHERE c.Year = 2014 );
SELECT s.Lowest FROM stadium s WHERE NOT EXISTS ( SELECT 1 FROM concert c WHERE c.Stadium_ID = s.Stadium_ID AND c.Year = 2014);

SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) as number_of_singers FROM concert c JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_ID;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) as Number_of_Singers FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme;
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) as 'Number_of_Singers' FROM concert c INNER JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_ID, c.concert_Name, c.Theme;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) as Number_of_Singers FROM concert LEFT JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) as Number_of_Singers FROM concert LEFT JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme;
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) AS Number_of_Singers FROM concert c JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_ID, c.concert_Name, c.Theme;
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) as Number_of_Singers FROM concert c JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_ID, c.concert_Name, c.Theme;
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) as Number_of_Singers FROM concert c LEFT JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_Name, c.Theme;
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) as 'Number of Singers' FROM concert c JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_ID, c.concert_Name, c.Theme;
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) as singer_count FROM concert as c JOIN singer_in_concert as sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_Name, c.Theme;

SELECT c.concert_Name as Name, c.Theme, COUNT(sic.Singer_ID) as Number_of_Singers FROM concert c JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_ID;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) AS number_of_singers FROM concert LEFT JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme;
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) AS Number_of_Singers FROM concert AS c JOIN singer_in_concert AS sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_ID;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) as NumberOfSingers FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme;
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) as NumberOfSingers FROM concert c JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_ID, c.concert_Name, c.Theme;
SELECT c.concert_Name, c.Theme, COUNT(sic.Singer_ID) FROM concert c JOIN singer_in_concert sic ON c.concert_ID = sic.concert_ID GROUP BY c.concert_Name, c.Theme;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) as Number_of_Singers FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) AS number_of_singers FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID, concert.concert_Name, concert.Theme;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) AS Number_of_Singers FROM concert LEFT JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID;
SELECT concert.concert_Name, concert.Theme, COUNT(singer_in_concert.Singer_ID) as number_of_singers FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID GROUP BY concert.concert_ID;

SELECT s.Name, COUNT(sc.concert_ID) as 'Number of Concerts' FROM singer s LEFT JOIN singer_in_concert sc ON s.Singer_ID = sc.Singer_ID GROUP BY s.Name;
SELECT singer.Name, COUNT(singer_in_concert.concert_ID) as Number_of_Concerts FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name;
SELECT s.Name, COUNT(c.concert_ID) as Number_of_Concerts FROM singer s JOIN singer_in_concert sc ON s.Singer_ID = sc.Singer_ID JOIN concert c ON sc.concert_ID = c.concert_ID GROUP BY s.Name;
SELECT s.Name, COUNT(c.concert_ID) AS number_of_concerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID GROUP BY s.Name;
SELECT singer.Name, COUNT(singer_in_concert.concert_ID) AS NumberOfConcerts FROM singer LEFT JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name;
SELECT s.Name, COUNT(sc.concert_ID) as NumberOfConcerts FROM singer s JOIN singer_in_concert sc ON s.Singer_ID = sc.Singer_ID GROUP BY s.Name;
SELECT singer.Name, COUNT(concert.concert_ID) as Number_of_Concerts FROM singer LEFT JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID LEFT JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY singer.Name;
SELECT singer.Name, COUNT(singer_in_concert.concert_ID) as Concerts FROM singer LEFT JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, COUNT(singer_in_concert.concert_ID) as Number_of_concerts FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, COUNT(concert.concert_ID) AS Number_of_Concerts FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY singer.Name;

SELECT s.Name, COUNT(c.concert_ID) as Number_of_Concerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON c.concert_ID = sic.concert_ID GROUP BY s.Name;
SELECT s.Name, COUNT(c.concert_ID) as num_concerts FROM singer s JOIN singer_in_concert sc on s.Singer_ID = sc.Singer_ID JOIN concert c on sc.concert_ID = c.concert_ID GROUP BY s.Name;
SELECT s.Name, COUNT(sc.concert_ID) as NumberOfConcerts FROM singer s JOIN singer_in_concert sc ON s.Singer_ID = sc.Singer_ID GROUP BY s.Name;
SELECT singer.Name, COUNT(singer_in_concert.concert_ID) AS Number_of_Concerts FROM singer LEFT JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, COUNT(concert.concert_ID) AS number_of_concerts FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID GROUP BY singer.Name;
SELECT s.Name, COUNT(*) as number_of_concerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID GROUP BY s.Name;
SELECT s.Name, COUNT(c.concert_ID) AS Number_of_Concerts FROM singer s JOIN singer_in_concert sc ON s.Singer_ID = sc.Singer_ID JOIN concert c ON sc.concert_ID = c.concert_ID GROUP BY s.Name;
SELECT s.Name, COUNT(*) as number_of_concerts FROM singer AS s INNER JOIN singer_in_concert AS sc ON sc.Singer_ID = s.Singer_ID INNER JOIN concert AS c ON c.concert_ID = sc.concert_ID GROUP BY s.Name;
SELECT singer.Name, COUNT(singer_in_concert.concert_ID) as Number_of_Concerts FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID GROUP BY singer.Name;
SELECT s.Name, COUNT(c.concert_ID) as Number_of_Concerts FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID GROUP BY s.Name;

SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year >= 2014;
SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year >= 2014;
SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year >= 2014;
SELECT DISTINCT singer.Name FROM singer INNER JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID INNER JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year >= 2014;
SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year >=2014;
SELECT DISTINCT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year >= 2014;
SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year >= 2014;
SELECT DISTINCT s.Name FROM singer s INNER JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID INNER JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year >= 2014;
SELECT DISTINCT s.Name FROM singer s INNER JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID INNER JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year >= 2014;
SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year >= 2014;

SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sc ON s.Singer_ID = sc.Singer_ID JOIN concert c ON sc.concert_ID = c.concert_ID WHERE c.Year <= 2014;
SELECT DISTINCT singer.Name FROM concert JOIN singer_in_concert ON concert.concert_ID = singer_in_concert.concert_ID JOIN singer ON singer_in_concert.Singer_ID = singer.Singer_ID WHERE concert.Year <= 2014;
SELECT DISTINCT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON concert.concert_ID = singer_in_concert.concert_ID WHERE concert.Year <= 2014;
SELECT DISTINCT si.Name FROM singer si INNER JOIN singer_in_concert sic ON si.Singer_ID = sic.Singer_ID INNER JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year <= 2014;
SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year <= 2014;
SELECT DISTINCT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year <= 2014;
SELECT DISTINCT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year <= 2014;
SELECT DISTINCT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year <= 2014;
SELECT DISTINCT singer.Name FROM singer JOIN singer_in_concert ON singer.Singer_ID = singer_in_concert.Singer_ID JOIN concert ON singer_in_concert.concert_ID = concert.concert_ID WHERE concert.Year <= 2014;
SELECT DISTINCT s.Name FROM singer s JOIN singer_in_concert sic ON s.Singer_ID = sic.Singer_ID JOIN concert c ON sic.concert_ID = c.concert_ID WHERE c.Year <= 2014;

SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';

SELECT s.Name, s.Country FROM singer AS s WHERE s.Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT s.Name, s.Country FROM singer s WHERE s.Song_Name LIKE '%Hey%';
SELECT Name, Country FROM singer WHERE Song_Name LIKE '%Hey%';
SELECT singer.Name, singer.Country FROM singer WHERE singer.Song_Name LIKE '%Hey%';

SELECT MIN(stadium.Lowest), MAX(stadium.Highest) FROM stadium WHERE stadium.Stadium_ID IN ( SELECT concert.Stadium_ID FROM concert WHERE YEAR = 2014 UNION SELECT concert.Stadium_ID FROM concert WHERE YEAR = 2015 );
SELECT stadium.Name, stadium.Lowest, stadium.Highest FROM stadium WHERE stadium.Stadium_ID IN ( SELECT concert.Stadium_ID FROM concert WHERE concert.Year IN (2014, 2015) GROUP BY concert.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2);
SELECT stadium.Name, stadium.Lowest, stadium.Highest FROM stadium WHERE stadium.Stadium_ID IN ( SELECT DISTINCT concert.Stadium_ID FROM concert WHERE concert.Year IN (2014, 2015) );
SELECT MIN(stadium.Lowest) as Lowest_Attendance, MAX(stadium.Highest) as Highest_Attendance FROM stadium INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year IN (2014,2015) GROUP BY stadium.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2;
SELECT MIN(s.Lowest), MAX(s.Highest) FROM stadium s WHERE s.Stadium_ID IN ( SELECT DISTINCT c.Stadium_ID FROM concert c WHERE c.Year IN (2014, 2015) );
SELECT MIN(stadium.Lowest) AS lowest_attendance, MAX(stadium.Highest) AS highest_attendance FROM stadium WHERE stadium.Stadium_ID IN ( SELECT concert.Stadium_ID FROM concert WHERE concert.Year IN (2014, 2015) );
SELECT s.Name, s.Lowest, s.Highest FROM stadium s WHERE s.Stadium_ID IN (SELECT c.Stadium_ID FROM concert c WHERE c.Year IN (2014, 2015) GROUP BY c.Stadium_ID HAVING COUNT(DISTINCT c.Year) = 2);
SELECT MIN(stadium.Lowest) AS Lowest_Attendance, MAX(stadium.Highest) AS Highest_Attendance FROM stadium INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year IN (2014, 2015) GROUP BY stadium.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2;
SELECT MIN(stadium.Lowest), MAX(stadium.Highest) FROM stadium WHERE stadium.Stadium_ID IN ( SELECT DISTINCT concert.Stadium_ID FROM concert WHERE concert.Year IN (2014, 2015) );
SELECT MIN(stadium.Lowest), MAX(stadium.Highest) FROM stadium WHERE stadium.Stadium_ID IN ( SELECT concert.Stadium_ID FROM concert WHERE concert.Year IN (2014, 2015) GROUP BY concert.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2 );

SELECT MIN(stadium.Lowest) AS Lowest_Attendance, MAX(stadium.Highest) AS Highest_Attendance FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year IN (2014, 2015) GROUP BY stadium.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2;
SELECT MIN(stadium.Lowest), MAX(stadium.Highest) FROM stadium WHERE stadium.Stadium_ID IN ( SELECT concert.Stadium_ID FROM concert WHERE concert.Year IN (2014, 2015) GROUP BY concert.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2 );
SELECT MIN(stadium.Lowest), MAX(stadium.Highest) FROM stadium WHERE stadium.Stadium_ID IN ( SELECT concert.Stadium_ID FROM concert WHERE concert.Year IN (2014, 2015) GROUP BY concert.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2 );
SELECT MIN(stadium.Lowest), MAX(stadium.Highest) FROM stadium INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year IN (2014, 2015) GROUP BY stadium.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2;
SELECT MIN(stadium.Lowest), MAX(stadium.Highest) FROM stadium WHERE stadium.Stadium_ID IN (SELECT concert.Stadium_ID FROM concert WHERE Year IN (2014, 2015) GROUP BY concert.Stadium_ID HAVING COUNT(DISTINCT Year) = 2);
SELECT MIN(stadium.Lowest), MAX(stadium.Highest) FROM stadium INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year IN (2014, 2015) GROUP BY stadium.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2;
SELECT MIN(stadium.Lowest), MAX(stadium.Highest) FROM stadium WHERE stadium.Stadium_ID IN ( SELECT concert.Stadium_ID FROM concert WHERE concert.Year IN (2014, 2015) GROUP BY concert.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2 );
SELECT MIN(stadium.Lowest) AS lowest_attendance, MAX(stadium.Highest) AS highest_attendance FROM stadium JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year IN (2014, 2015) GROUP BY stadium.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2;
SELECT MIN(stadium.Lowest) AS Lowest_Attendance, MAX(stadium.Highest) AS Highest_Attendance FROM stadium INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year IN (2014, 2015) GROUP BY stadium.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2;
SELECT MIN(stadium.Lowest), MAX(stadium.Highest) FROM stadium INNER JOIN concert ON stadium.Stadium_ID = concert.Stadium_ID WHERE concert.Year IN (2014, 2015) GROUP BY stadium.Stadium_ID HAVING COUNT(DISTINCT concert.Year) = 2;

SELECT COUNT(*) FROM concert INNER JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity = (SELECT MAX(Capacity) FROM stadium);
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity = (SELECT MAX(Capacity) FROM stadium);
SELECT COUNT(*) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity = (SELECT MAX(Capacity) FROM stadium);
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity = (SELECT MAX(Capacity) FROM stadium);
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
SELECT COUNT(*) FROM concert INNER JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity = (SELECT MAX(Capacity) FROM stadium) ```;

SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) as Number_of_Concerts FROM concert INNER JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity = (SELECT Max(Capacity) FROM stadium);
SELECT COUNT(*) FROM concert INNER JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity = (SELECT MAX(Capacity) FROM stadium);
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM concert WHERE Stadium_ID = (SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1);
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );
SELECT COUNT(*) FROM concert JOIN stadium ON concert.Stadium_ID = stadium.Stadium_ID WHERE stadium.Capacity = ( SELECT MAX(Capacity) FROM stadium );
SELECT COUNT(*) FROM concert WHERE Stadium_ID = ( SELECT Stadium_ID FROM stadium ORDER BY Capacity DESC LIMIT 1 );

SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;

SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;
SELECT COUNT(*) FROM Pets WHERE weight > 10;

SELECT MIN(weight) FROM Pets WHERE PetType = 'dog' AND birthdate = (SELECT MAX(birthdate) FROM Pets WHERE PetType = 'dog');
SELECT MIN(Pets.weight) AS MinWeight FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' ORDER BY Pets.birthdate DESC LIMIT 1;
SELECT MIN(Pets.weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' AND Pets.birthdate = ( SELECT MAX(Pets.birthdate) FROM Pets WHERE Pets.PetType = 'dog' );
SELECT MIN(Pets.weight) FROM Pets INNER JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' ORDER BY Pets.birthdate DESC LIMIT 1;
SELECT MIN(Pets.weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' ORDER BY Pets.birthdate DESC LIMIT 1;
SELECT MIN(Pets.weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' ORDER BY Pets.birthdate DESC LIMIT 1;
SELECT MIN(Pets.weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' ORDER BY Pets.birthdate DESC LIMIT 1;
SELECT MIN(Pets.weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' ORDER BY Pets.birthdate DESC LIMIT 1;
SELECT MIN(weight) FROM Pets WHERE birthdate = ( SELECT MAX(birthdate) FROM Pets WHERE PetType = 'dog' );
SELECT MIN(weight) FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets WHERE PetType = 'dog');

SELECT Pets.weight FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'dog' ORDER BY Pets.birthdate DESC LIMIT 1;
SELECT MIN(Pets.weight) FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = "dog" AND Pets.birthdate = (SELECT MAX(Pets.birthdate) FROM Pets WHERE PetType = "dog");
SELECT weight FROM Pets WHERE PetType = 'dog' AND birthdate = ( SELECT MAX(birthdate) FROM Pets WHERE PetType = 'dog' );
SELECT MIN(weight) FROM Pets WHERE PetType = 'dog' AND birthdate = ( SELECT MAX(birthdate) FROM Pets WHERE PetType = 'dog' );
SELECT weight FROM Pets WHERE PetType = 'dog' AND birthdate = (SELECT MAX(birthdate) FROM Pets WHERE PetType='dog');
SELECT weight FROM Pets WHERE PetType = 'dog' ORDER BY birthdate DESC LIMIT 1;
SELECT MIN(weight) FROM Pets WHERE PetType = 'dog' AND birthdate = ( SELECT MAX(birthdate) FROM Pets WHERE PetType = 'dog' );
SELECT MIN(weight) FROM Pets WHERE PetType = 'dog' AND birthdate = (SELECT MAX(birthdate) FROM Pets WHERE PetType = 'dog');
SELECT weight FROM Pets WHERE PetType = 'dog' ORDER BY birthdate DESC LIMIT 1;
SELECT MIN(weight) FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets WHERE PetType = 'dog');

SELECT MAX(weight) AS Maximum_Weight, PetType FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) as Maximum_Weight FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) as MaximumWeight FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) AS Maximum_Weight FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) as MaxWeight FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) as Maximum_Weight FROM Pets GROUP BY PetType;
SELECT MAX(weight) AS Maximum_Weight, PetType FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) as Max_weight FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) as Max_Weight FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) as Max_Weight FROM Pets GROUP BY PetType;

SELECT Pets.PetType, MAX(Pets.weight) AS MaximumWeight FROM Pets GROUP BY Pets.PetType;
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) as maximum_weight FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) AS MaximumWeight FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) AS max_weight FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) as Maximum_Weight FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) as MaxWeight FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) AS max_weight FROM Pets GROUP BY PetType;
SELECT PetType, MAX(weight) as Maximum_Weight FROM Pets GROUP BY PetType;

SELECT COUNT(Pets.PetID) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(Pets.PetID) FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(Pets.PetID) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Has_Pet INNER JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(*) AS NumberOfPets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Age > 20;

SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(Pets.PetID) FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;
SELECT COUNT(DISTINCT Pets.PetID) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Age > 20;
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.Age > 20;

SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'F' AND Pets.PetType = 'puppy';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'F' AND Pets.PetType = 'puppy';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'F' AND Pets.PetType = 'Puppy';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'F' AND Pets.PetType = 'puppy';
SELECT COUNT(*) FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE S.Sex = 'F' AND P.PetType = 'Puppy';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'F' AND Pets.PetType = 'Puppy';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'F' AND Pets.PetType = 'puppy';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' AND Student.Sex = 'F';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'F' AND Pets.PetType = 'puppy';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'F' AND Pets.PetType = 'puppy';

SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' AND Student.Sex = 'Female';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' AND Student.Sex = 'female';
SELECT COUNT(*) FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' AND Student.Sex = 'female';
SELECT COUNT(*) FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'Puppy' AND s.Sex = 'Female';
SELECT COUNT(*) FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE s.Sex = 'Female' AND p.PetType = 'Puppy';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'female' AND Pets.PetType = 'puppy';
SELECT COUNT(*) FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE p.PetType = 'puppy' AND s.Sex = 'Female';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Sex = 'F' AND PetType = 'puppy';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' AND Student.Sex = 'female';
SELECT COUNT(*) FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.Sex = 'Female' AND Pets.PetType = 'Puppy';

SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;

SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;
SELECT COUNT(DISTINCT PetType) FROM Pets;

SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');

SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.FName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType IN ('kitten', 'puppy');

SELECT DISTINCT S.Fname, S.LName FROM Student S WHERE Exists( SELECT * FROM Has_Pet HP1 JOIN Pets P1 ON HP1.PetID = P1.PetID WHERE HP1.StuID = S.StuID AND P1.PetType = 'Kitten' ) AND Exists( SELECT * FROM Has_Pet HP2 JOIN Pets P2 ON HP2.PetID = P2.PetID WHERE HP2.StuID = S.StuID AND P2.PetType = 'Puppy' );
SELECT DISTINCT Student.LName, Student.FName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.StuID IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Kitten') AND Student.StuID IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Puppy');
SELECT DISTINCT s.Fname, s.LName FROM Student s WHERE s.StuID IN ( SELECT hp1.StuID FROM Has_Pet hp1 INNER JOIN Pets p1 ON hp1.PetID = p1.PetID WHERE p1.PetType = 'Kitten' ) AND s.StuID IN ( SELECT hp2.StuID FROM Has_Pet hp2 INNER JOIN Pets p2 ON hp2.PetID = p2.PetID WHERE p2.PetType = 'Puppy' );
SELECT DISTINCT s.Fname, s.LName FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE s.StuID IN ( SELECT hp1.StuID FROM Has_Pet hp1 JOIN Pets p1 ON hp1.PetID = p1.PetID WHERE p1.PetType = 'Kitten' INTERSECT SELECT hp2.StuID FROM Has_Pet hp2 JOIN Pets p2 ON hp2.PetID = p2.PetID WHERE p2.PetType = 'Puppy' );
SELECT DISTINCT S.Fname, S.LName FROM Student S WHERE EXISTS (SELECT 1 FROM Has_Pet HP JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'Kitten' AND HP.StuID = S.StuID) AND EXISTS (SELECT 1 FROM Has_Pet HP JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'Puppy' AND HP.StuID = S.StuID);
SELECT DISTINCT S.Fname, S.LName FROM Student S JOIN Has_Pet HP1 ON S.StuID = HP1.StuID JOIN Pets P1 ON HP1.PetID = P1.PetID JOIN Has_Pet HP2 ON S.StuID = HP2.StuID JOIN Pets P2 ON HP2.PetID = P2.PetID WHERE P1.PetType = 'Kitten' AND P2.PetType = 'Puppy';
SELECT DISTINCT s.Fname, s.LName FROM Student s INNER JOIN Has_Pet hp1 ON s.StuID = hp1.StuID INNER JOIN Pets p1 ON hp1.PetID = p1.PetID INNER JOIN Has_Pet hp2 ON s.StuID = hp2.StuID INNER JOIN Pets p2 ON hp2.PetID = p2.PetID WHERE p1.PetType = 'Kitten' AND p2.PetType = 'Puppy';
SELECT DISTINCT s.Fname, s.LName FROM Student s JOIN Has_Pet hp1 ON s.StuID = hp1.StuID JOIN Pets p1 ON hp1.PetID = p1.PetID AND p1.PetType = 'Kitten' JOIN Has_Pet hp2 ON s.StuID = hp2.StuID JOIN Pets p2 ON hp2.PetID = p2.PetID AND p2.PetType = 'Puppy';
SELECT DISTINCT S.LName, S.Fname FROM Student S JOIN Has_Pet HP1 ON S.StuID = HP1.StuID JOIN Pets P1 ON HP1.PetID = P1.PetID JOIN Has_Pet HP2 ON S.StuID = HP2.StuID JOIN Pets P2 ON HP2.PetID = P2.PetID WHERE P1.PetType = 'Kitten' AND P2.PetType = 'Puppy';
SELECT DISTINCT S.Fname, S.LName FROM Student S WHERE S.StuID IN ( SELECT HP.StuID FROM Has_Pet HP JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'Kitten' ) AND S.StuID IN ( SELECT HP.StuID FROM Has_Pet HP JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'Puppy' ) ```;

SELECT DISTINCT S.Fname FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE S.StuID IN ( SELECT HP.StuID FROM Has_Pet HP JOIN Pets P on HP.PetID = P.PetID WHERE P.PetType = 'kitten') AND S.StuID IN ( SELECT HP.StuID FROM Has_Pet HP JOIN Pets P on HP.PetID = P.PetID WHERE P.PetType = 'puppy');
SELECT DISTINCT S.Fname FROM Student S WHERE S.StuID IN ( SELECT HP.StuID FROM Has_Pet HP JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'kitten' ) AND S.StuID IN ( SELECT HP.StuID FROM Has_Pet HP JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'puppy' );
SELECT DISTINCT s.Fname FROM Student s JOIN Has_Pet hp ON s.StuID = hp.StuID JOIN Pets p ON hp.PetID = p.PetID WHERE s.StuID IN ( SELECT h1.StuID FROM Has_Pet h1 JOIN Pets p1 ON h1.PetID = p1.PetID WHERE p1.PetType = 'kitten' ) AND s.StuID IN ( SELECT h2.StuID FROM Has_Pet h2 JOIN Pets p2 ON h2.PetID = p2.PetID WHERE p2.PetType = 'puppy' );
SELECT Student.Fname FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.StuID IN ( SELECT StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' ) AND Student.StuID IN ( SELECT StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' );
SELECT DISTINCT S.Fname FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE S.StuID IN ( SELECT HP1.StuID FROM Has_Pet HP1 JOIN Pets P1 ON HP1.PetID = P1.PetID WHERE P1.PetType = 'kitten' ) AND S.StuID IN ( SELECT HP2.StuID FROM Has_Pet HP2 JOIN Pets P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'puppy' );
SELECT DISTINCT Student.Fname FROM Student INNER JOIN Has_Pet on Student.StuID = Has_Pet.StuID INNER JOIN Pets as Pets1 on Has_Pet.PetID = Pets1.PetID AND Pets1.PetType = 'kitten' INNER JOIN Pets as Pets2 on Has_Pet.PetID = Pets2.PetID AND Pets2.PetType = 'puppy';
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten') AND Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy');
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'kitten' ) AND Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'puppy' );
SELECT DISTINCT S.Fname FROM Student S WHERE S.StuID IN ( SELECT HP.StuID FROM Has_Pet HP INNER JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'kitten' ) AND S.StuID IN ( SELECT HP.StuID FROM Has_Pet HP INNER JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'puppy' );
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' ) AND Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' );

SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten');
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten');
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten');
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );

SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Pets.PetID = Has_Pet.PetID WHERE Pets.PetType = 'kitten');
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten');
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.Major, Student.Age FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten');

SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten');
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'kitten' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' ) ```;
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'kitten' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Student.StuID FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE PetType = 'kitten' );

SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten');
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Kitten' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT StuID FROM Student WHERE StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT Student.StuID FROM Student WHERE Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets on Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Kitten' );

SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Puppy' );
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Puppy' );
SELECT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Puppy' );
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Puppy' ) ```;
SELECT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Puppy' );
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Puppy' );
SELECT S.Fname, S.Age FROM Student S INNER JOIN Has_Pet HP ON S.StuID = HP.StuID INNER JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'Dog' AND S.StuID NOT IN (SELECT HP2.StuID FROM Has_Pet HP2 INNER JOIN Pets P2 ON HP2.PetID = P2.PetID WHERE P2.PetType = 'Puppy');
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Dog' AND Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Puppy' );
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' );
SELECT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'dog' AND Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy');

SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Puppy' AND Student.StuID NOT IN (SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Kitten');
SELECT DISTINCT S.Fname FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'Puppy' AND S.StuID NOT IN ( SELECT S.StuID FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'Kitten' );
SELECT Student.FName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' AND Student.StuID NOT IN ( SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' AND Student.StuID NOT IN (SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten');
SELECT Student.Fname FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' AND Student.StuID NOT IN (SELECT Student.StuID FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten');
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' AND Student.StuID NOT IN (SELECT Student.StuID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten');
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' AND Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' );
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' AND Student.StuID NOT IN (SELECT StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten');
SELECT DISTINCT Student.Fname FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'puppy' AND Student.StuID NOT IN ( SELECT Has_Pet.StuID FROM Has_Pet JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'kitten' ) ```;
SELECT DISTINCT S.Fname FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P ON HP.PetID = P.PetID WHERE P.PetType = 'puppy' AND S.StuID NOT IN ( SELECT DISTINCT S.StuID FROM Student S JOIN Has_Pet HP ON S.StuID = HP.StuID JOIN Pets P on HP.PetID = P.PetID WHERE P.PetType = 'kitten' );

SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT PetType, weight FROM Pets ORDER BY birthdate DESC LIMIT 1;
SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT PetType, weight FROM Pets WHERE birthdate = ( SELECT MAX(birthdate) FROM Pets );

SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT PetType, weight FROM Pets WHERE birthdate = ( SELECT MAX(birthdate) FROM Pets );
SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT Pets.PetType, Pets.weight FROM Pets ORDER BY Pets.birthdate DESC LIMIT 1;
SELECT Pets.PetType, Pets.weight FROM Pets WHERE Pets.birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT PetType, weight FROM Pets WHERE birthdate = ( SELECT MAX(birthdate) FROM Pets );
SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);
SELECT PetType, weight FROM Pets WHERE birthdate = (SELECT MAX(birthdate) FROM Pets);

SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';

SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT Pets.PetID, Pets.weight FROM Pets WHERE Pets.birthdate < '2020-01-01';
SELECT PetID, weight FROM Pets WHERE birthdate < '2020-01-01';

SELECT PetType, AVG(PetID) as AverageID, MAX(PetID) as MaximumID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as Average_ID, MAX(PetID) as Max_ID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as AverageID, MAX(PetID) as MaximumID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as Avg_Pet_ID, MAX(PetID) as Max_Pet_ID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) AS AverageID, MAX(PetID) AS MaximumID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as AverageID, MAX(PetID) as MaxID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as AverageID, MAX(PetID) as MaximumID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) AS AverageID, MAX(PetID) AS MaximumID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as AverageID, MAX(PetID) as MaximumID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as Average_ID, MAX(PetID) as Maximum_ID FROM Pets GROUP BY PetType;

SELECT PetType, AVG(PetID) as AverageID, MAX(PetID) as MaximumID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) AS Average_ID, MAX(PetID) AS Maximum_ID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as Average_ID, MAX(PetID) as Maximum_ID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as AverageID, MAX(PetID) as MaximumID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as Average_ID, MAX(PetID) as Maximum_ID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as Average_ID, MAX(PetID) as Maximum_ID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as AverageID, MAX(PetID) as MaximumID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) AS AvgID, MAX(PetID) AS MaxID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as Average_ID, MAX(PetID) as Maximum_ID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) AS AverageID, MAX(PetID) AS MaximumID FROM Pets GROUP BY PetType;

SELECT PetType, AVG(PetID) as Average_ID, MAX(PetID) as Maximum_ID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) AS AvgID, MAX(PetID) as MaxID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as AverageID, MAX(PetID) as MaxID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as average_id, MAX(PetID) as max_id FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as AverageID, MAX(PetID) as MaximumID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as Average_ID, MAX(PetID) as Maximum_ID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as average_id, MAX(PetID) as maximum_id FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) AS Average_ID, MAX(PetID) AS Maximum_ID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as AverageID, MAX(PetID) as MaximumID FROM Pets GROUP BY PetType;
SELECT PetType, AVG(PetID) as Average_ID, MAX(PetID) as Maximum_ID FROM Pets GROUP BY PetType;

SELECT PetType, AVG(weight) as Average_Weight FROM Pets GROUP BY PetType;
SELECT PetType, AVG(weight) AS Average_Weight FROM Pets GROUP BY PetType;
SELECT PetType, AVG(weight) AS AverageWeight FROM Pets GROUP BY PetType;
SELECT PetType, AVG(weight) as Average_Weight FROM Pets GROUP BY PetType;
SELECT PetType, AVG(weight) as Average_Weight FROM Pets GROUP BY PetType;
SELECT PetType, AVG(weight) AS Average_Weight FROM Pets GROUP BY PetType;
SELECT PetType, AVG(weight) AS Average_Weight FROM Pets GROUP BY PetType;
SELECT PetType, AVG(weight) AS Average_Weight FROM Pets GROUP BY PetType;
SELECT Pets.PetType, AVG(Pets.weight) as AverageWeight FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID GROUP BY Pets.PetType;
SELECT PetType, AVG(weight) FROM Pets GROUP BY PetType;

SELECT Student.Fname, Student.LName, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT Student.Fname, Student.LName, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT Student.Fname, Student.LName, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID;
SELECT Student.Fname, Student.LName, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT Student.Fname, Student.LName, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.Fname, Student.LName, Student.Age;
SELECT Student.Fname, Student.LName, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT Student.Fname, Student.LName, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;

SELECT DISTINCT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT DISTINCT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT Student.Fname, Student.LName, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.Fname, Student.Age;
SELECT DISTINCT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT DISTINCT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT DISTINCT Student.Fname, Student.Age FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;
SELECT DISTINCT Student.Fname, Student.Age FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID;

SELECT Has_Pet.PetID FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.LName = 'Smith';
SELECT Pets.PetID FROM Pets INNER JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID INNER JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.LName = 'Smith';
SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.LName = 'Smith';
SELECT Pets.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith';
SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.LName = 'Smith';
SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.LName = 'Smith';
SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.LName = 'Smith';
SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.LName = 'Smith';
SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.LName = 'Smith';
SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.LName = 'Smith';

SELECT Pets.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith';
SELECT Has_Pet.PetID FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.LName = 'Smith';
SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.LName = 'Smith';
SELECT Pets.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith';
SELECT Pets.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith';
SELECT Has_Pet.PetID FROM Has_Pet JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.LName = 'Smith';
SELECT Pets.PetID FROM Pets JOIN Has_Pet ON Pets.PetID = Has_Pet.PetID JOIN Student ON Has_Pet.StuID = Student.StuID WHERE Student.LName = 'Smith';
SELECT Pets.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith';
SELECT Has_Pet.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Student.LName = 'Smith';
SELECT Pets.PetID FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Student.LName = 'Smith';

SELECT Student.StuID, COUNT(Pets.PetID) AS NumberOfPets FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING COUNT(Pets.PetID) > 0;
SELECT Student.StuID, COUNT(Pets.PetID) as Number_Of_Pets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING COUNT(Pets.PetID) > 0;
SELECT Student.StuID, COUNT(Pets.PetID) as Number_of_Pets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING COUNT(Pets.PetID) > 0;
SELECT Student.StuID, COUNT(Pets.PetID) as NumberOfPets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING COUNT(Pets.PetID) > 0;
SELECT Student.StuID, COUNT(Pets.PetID) AS Number_of_Pets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING COUNT(Pets.PetID) > 0;
SELECT Student.StuID, COUNT(Pets.PetID) as NumberOfPets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING COUNT(Pets.PetID) > 0;
SELECT Student.StuID, COUNT(Pets.PetID) as NumberOfPets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING COUNT(Pets.PetID) > 0;
SELECT Student.StuID, COUNT(Pets.PetID) as NumberOfPets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING COUNT(Pets.PetID) > 0;
SELECT Student.StuID, COUNT(Pets.PetID) as Number_of_Pets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID HAVING COUNT(Pets.PetID) > 0;
SELECT Student.StuID, COUNT(Pets.PetID) AS NumberOfPets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID;

SELECT Student.StuID, Student.FName, Student.LName, COUNT(Has_Pet.PetID) as NumberOfPets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID, Student.FName, Student.LName;
SELECT Student.StuID, Student.Fname, Student.LName, COUNT(Has_Pet.PetID) AS PetCount FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID, Student.Fname, Student.LName;
SELECT Student.StuID, Student.Fname, Student.LName, COUNT(Has_Pet.PetID) as NumberOfPets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID, Student.Fname, Student.LName;
SELECT Student.StuID, Student.Fname, Student.LName, COUNT(Has_Pet.PetID) AS NumOfPets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID, Student.Fname, Student.LName;
SELECT Student.StuID, Student.Fname, Student.Lname, COUNT(Has_Pet.PetID) as NumberOfPets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID, Student.Fname, Student.Lname;
SELECT Student.StuID, Student.Fname, Student.LName, COUNT(Has_Pet.PetID) AS NumberOfPets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID, Student.Fname, Student.LName;
SELECT Student.StuID, Student.LName, Student.Fname, COUNT(Has_Pet.PetID) as Num_of_Pets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID, Student.LName, Student.Fname;
SELECT Student.StuID, Student.Fname, Student.LName, COUNT(Has_Pet.PetID) as NumberOfPets FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID, Student.Fname, Student.LName;
SELECT Student.StuID, Student.Fname, Student.LName, COUNT(Has_Pet.PetID) as NumberOfPets FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID, Student.Fname, Student.LName;
SELECT Student.StuID, Student.Fname, Student.LName, COUNT(Pets.PetID) as PetCount FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID GROUP BY Student.StuID, Student.Fname, Student.LName;

SELECT Student.Fname, Student.Sex FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID, Student.Fname, Student.Sex HAVING COUNT(Has_Pet.PetID) > 1;
SELECT DISTINCT s.Fname, s.Sex FROM Student s JOIN Has_Pet h ON s.StuID = h.StuID GROUP BY h.StuID HAVING COUNT(h.PetID) > 1;
SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(Has_Pet.PetID) > 1;
SELECT S.Fname, S.Sex FROM Student S WHERE S.StuID IN (SELECT HP.StuID FROM Has_Pet HP GROUP BY HP.StuID HAVING COUNT(HP.PetID) > 1);
SELECT S.Fname, S.Sex FROM Student S WHERE S.StuID IN ( SELECT HP.StuID FROM Has_Pet HP GROUP BY HP.StuID HAVING COUNT(HP.PetID) > 1 );
SELECT Student.Fname, Student.Sex FROM Student WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID HAVING COUNT(Has_Pet.PetID) > 1 );
SELECT S.Fname, S.Sex FROM Student S WHERE S.StuID IN ( SELECT H.StuID FROM Has_Pet H GROUP BY H.StuID HAVING COUNT(H.PetID) > 1 );
SELECT S.Fname, S.Sex FROM Student S WHERE S.StuID IN ( SELECT H.StuID FROM Has_Pet H GROUP BY H.StuID HAVING COUNT(H.PetID) > 1);
SELECT Student.Fname, Student.Sex FROM Student WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID HAVING COUNT(Has_Pet.PetID) > 1) ```;
SELECT Student.Fname, Student.Sex FROM Student WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID HAVING COUNT(Has_Pet.PetID) > 1);

SELECT Student.Fname, Student.Sex FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(Has_Pet.PetID) > 1;
SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(Has_Pet.PetID) > 1;
SELECT s.Fname, s.Sex FROM Student s WHERE s.StuID IN ( SELECT hp.StuID FROM Has_Pet hp GROUP BY hp.StuID HAVING COUNT(hp.PetID) > 1 );
SELECT Student.Fname, Student.Sex FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(Has_Pet.PetID) > 1;
SELECT Student.Fname, Student.Sex FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID, Student.Fname, Student.Sex HAVING COUNT(Has_Pet.PetID) > 1;
SELECT Student.Fname, Student.Sex FROM Student WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID HAVING COUNT(Has_Pet.PetID) > 1 );
SELECT Student.Fname, Student.Sex FROM Student WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID HAVING COUNT(Has_Pet.PetID) > 1 );
SELECT Student.Fname, Student.Sex FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(Has_Pet.PetID) > 1;
SELECT Student.Fname, Student.Sex FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID GROUP BY Student.StuID HAVING COUNT(Has_Pet.PetID) > 1;
SELECT Student.Fname, Student.Sex FROM Student WHERE Student.StuID IN ( SELECT Has_Pet.StuID FROM Has_Pet GROUP BY Has_Pet.StuID HAVING COUNT(Has_Pet.PetID) > 1 );

SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' AND YEAR(Pets.birthdate) = 2001;

SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student INNER JOIN Has_Pet ON Student.StuID = Has_Pet.StuID INNER JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'Cat' AND YEAR(Pets.birthdate) = 2001;
SELECT Student.LName FROM Student JOIN Has_Pet ON Student.StuID = Has_Pet.StuID JOIN Pets ON Has_Pet.PetID = Pets.PetID WHERE Pets.PetType = 'cat' AND YEAR(Pets.birthdate) = 2001;

SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);

SELECT AVG(Student.Age) FROM Student LEFT JOIN Has_Pet ON Student.StuID = Has_Pet.StuID WHERE Has_Pet.StuID IS NULL;
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Student.Age) FROM Student WHERE Student.StuID NOT IN (SELECT Has_Pet.StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) as Average_Age FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);
SELECT AVG(Age) FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_Pet);

SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;

SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;
SELECT COUNT(*) FROM continents;

SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) as NumberOfCountries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS NumberOfCountries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) as NumberOfCountries FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(*) AS NumberOfCountries FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) as Number_of_Countries FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS NumberOfCountries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) as NumberOfCountries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) as NumberOfCountries FROM continents LEFT JOIN countries on continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) as NumberOfCountries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;

SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) as NumberOfCountries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) as NumberOfCountries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS NumberOfCountries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS NumberOfCountries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT c1.ContId, c1.Continent, COUNT(c2.CountryId) as Number_of_Countries FROM continents c1 JOIN countries c2 ON c1.ContId = c2.Continent GROUP BY c1.ContId, c1.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) as NumberOfCountries FROM continents JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) AS num_of_countries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT continents.ContId, continents.Continent, COUNT(countries.CountryId) as NumberOfCountries FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent GROUP BY continents.ContId, continents.Continent;
SELECT c.ContId, c.Continent, COUNT(*) as NumberOfCountries FROM continents c JOIN countries co ON c.ContId = co.Continent GROUP BY c.ContId, c.Continent;

SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;

SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;
SELECT COUNT(*) FROM countries;

SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as Model_Count FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) AS NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id.;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as NumberOfModels FROM car_makers LEFT JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as Number_of_Models FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id;
SELECT car_makers.FullName, car_makers.Id, COUNT(model_list.Model) as Num_Models FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id GROUP BY car_makers.FullName, car_makers.Id;

SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as ModelCount FROM car_makers JOIN model_list ON car_makers.Id=model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS NumberOfModels FROM car_makers LEFT JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as Total_Models FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;

SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId ORDER BY cars_data.Horsepower ASC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower ASC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower ASC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower ASC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data);
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data);
SELECT Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower ASC LIMIT 1;

SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data);
SELECT model_list.Model FROM model_list INNER JOIN car_names ON model_list.Model = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data);
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.Horsepower ASC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower ASC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Horsepower ASC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data);
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data);
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Horsepower = (SELECT MIN(cars_data.Horsepower) FROM cars_data);
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Horsepower = (SELECT MIN(Horsepower) FROM cars_data);

SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);

SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(cars_data.Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < ( SELECT AVG(cars_data.Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < (SELECT AVG(Weight) FROM cars_data);

SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR);
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > (SELECT MAX(Year) - 2 FROM cars_data);
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year >= YEAR(CURDATE()) - 2;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year >= (EXTRACT(YEAR FROM CURRENT_DATE) - 2);
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > YEAR(CURDATE()) - 2;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > YEAR(CURDATE()) - 2;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR);
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year >= YEAR(CURDATE()) - 2;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > YEAR(CURDATE()) - 2;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > YEAR(CURRENT_DATE) - 2;

SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > YEAR(CURRENT_DATE) - 2;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > YEAR(CURDATE()) - 2;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR);
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year >= (YEAR(CURRENT_DATE) - 2);
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > YEAR(CURDATE()) - 2;
SELECT DISTINCT car_makers.Maker FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker INNER JOIN car_names ON model_list.Model = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > YEAR(CURDATE()) - 2;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Year > YEAR(CURRENT_DATE) - 2;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year > (YEAR(CURRENT_DATE) - 2);
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id=model_list.Maker JOIN car_names ON model_list.Model=car_names.Model JOIN cars_data ON car_names.MakeId=cars_data.Id WHERE cars_data.Year > (SELECT MAX(Year) FROM cars_data) - 2;
SELECT DISTINCT car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year >= YEAR(CURRENT_DATE) - 2;

SELECT car_names.Make, cars_data.Year FROM car_names INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data);
SELECT car_names.Make, cars_data.Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data);
SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data);
SELECT car_names.Make, cars_data.Year FROM cars_data LEFT JOIN car_names ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data);
SELECT car_names.Make, cars_data.Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data);
SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data);
SELECT car_names.Make, cars_data.Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data);
SELECT car_names.Make, cars_data.Year FROM car_names INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data);
SELECT car_names.Make, cars_data.Year FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data);
SELECT car_names.Make, cars_data.Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Year = (SELECT MIN(Year) FROM cars_data);

SELECT car_makers.Maker, MIN(cars_data.Year) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id ORDER BY cars_data.Year ASC LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) as Earliest_Year FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY Earliest_Year LIMIT 1;
SELECT car_makers.Maker, min(cars_data.Year) as Earliest_Year FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY Earliest_Year LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) AS Min_Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id ORDER BY Min_Year LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Maker ORDER BY MIN(cars_data.Year) ASC LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) AS Earliest_Year FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker INNER JOIN car_names ON model_list.Model = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Year ASC LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) as Earliest_Year FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Year LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) as Earliest_Year FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id ORDER BY Earliest_Year LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId INNER JOIN model_list ON car_names.Model = model_list.Model INNER JOIN car_makers ON model_list.Maker = car_makers.Id ORDER BY cars_data.Year ASC LIMIT 1;
SELECT car_makers.Maker, MIN(cars_data.Year) as Earliest_Year FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.Year ASC LIMIT 1;

SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Year <= 1980;

SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Year <= 1980;

SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) as CarMakersCount FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent;
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) AS car_maker_count FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent;
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) as carmakers_count FROM continents INNER JOIN countries ON continents.ContId = countries.Continent INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent;
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) as CarMakersCount FROM car_makers JOIN countries on car_makers.Country = countries.CountryId JOIN continents on countries.Continent = continents.ContId GROUP BY continents.Continent;
SELECT c.Continent, COUNT(distinct cm.Maker) as "No of Car Makers" FROM continents as c LEFT JOIN countries as ct ON c.ContId = ct.Continent LEFT JOIN car_makers as cm ON ct.CountryId = cm.Country GROUP BY c.Continent;
SELECT c.Continent, COUNT(cm.Maker) as MakerCount FROM continents as c JOIN countries as co ON c.ContId = co.Continent JOIN car_makers as cm ON co.CountryId = cm.Country GROUP BY c.Continent;
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) AS Count FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent;
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) AS NumberOfCarMakers FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent;
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) as Number_of_Car_Makers FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent;
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) as CarMakersCount FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent;

SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) as CarMakerCount FROM continents LEFT JOIN countries on continents.ContId = countries.Continent LEFT JOIN car_makers on countries.CountryId = car_makers.Country GROUP BY continents.Continent;
SELECT c.Continent, COUNT(*) As NumberOfCarMakers FROM continents c JOIN countries co ON co.Continent = c.ContId JOIN car_makers cm ON cm.Country = co.CountryId GROUP BY c.Continent;
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) as car_makers_count FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent LEFT JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent;
SELECT C.Continent, COUNT(DISTINCT CM.Maker) AS NumberOfCarMakers FROM continents C JOIN countries CS ON C.ContId = CS.Continent JOIN car_makers CM ON CS.CountryId = CM.Country GROUP BY C.Continent;
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) AS NumberOfCarMakers FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent LEFT JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent;
SELECT continents.Continent AS Continent_Name, COUNT(DISTINCT car_makers.Id) AS NumberOfCarMakers FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent;
SELECT c.Continent, COUNT(cm.Maker) as Number_of_Car_Makers FROM continents AS c JOIN countries AS co ON c.ContId = co.Continent JOIN car_makers AS cm ON cm.Country = co.CountryId GROUP BY c.Continent;
SELECT c.Continent, COUNT(distinct cm.Maker) as NumberOfCarMakers FROM continents as c JOIN countries as od on c.ContId = od.Continent JOIN car_makers as cm on od.CountryId = cm.Country GROUP BY c.Continent;
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) as Num_Car_Makers FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent;
SELECT continents.Continent, COUNT(DISTINCT car_makers.Id) as CarMakersCount FROM continents LEFT JOIN countries ON continents.ContId = countries.Continent LEFT JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY continents.Continent;

SELECT CountryName FROM countries WHERE CountryId = ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(Id) DESC LIMIT 1 );
SELECT CountryName FROM countries WHERE CountryId = ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1);
SELECT CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1;
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY COUNT(car_makers.Id) DESC LIMIT 1;
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName ORDER BY COUNT(*) DESC LIMIT 1;
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName ORDER BY COUNT(*) DESC LIMIT 1;
SELECT CountryName FROM countries WHERE CountryId = (SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1);
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1);
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 );

SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(Id) DESC LIMIT 1 );
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(Id) DESC LIMIT 1 );
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM ( SELECT Country, COUNT(*) as count FROM car_makers GROUP BY Country ORDER BY count DESC LIMIT 1 ) );
SELECT CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName ORDER BY COUNT(car_makers.Country) DESC LIMIT 1;
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM ( SELECT Country, COUNT(*) as count FROM car_makers GROUP BY Country ORDER BY count DESC LIMIT 1 ) );
SELECT CountryName FROM countries WHERE CountryId IN (SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(Id) DESC LIMIT 1);
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT CountryName FROM countries WHERE CountryId = ( SELECT Country FROM car_makers GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1);
SELECT CountryName FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Id) = ( SELECT MAX(NumMakers) FROM ( SELECT COUNT(Id) as NumMakers FROM car_makers GROUP BY Country ) ) );

SELECT cm.FullName, COUNT(ml.Model) AS ModelCount FROM car_makers cm LEFT JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) as Total_Models FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) AS ModelCount FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) as CarModels FROM car_makers LEFT JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) AS ModelCount FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) AS ModelCount FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id GROUP BY car_makers.FullName;
SELECT car_makers.FullName, COUNT(model_list.Model) AS ModelCount FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName;

SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS Number_of_Car_Models FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT cm.Id, cm.FullName, COUNT(ml.Model) as NumberOfModels FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.Id, cm.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfCarModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) as NumberOfModels FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;
SELECT car_makers.Id, car_makers.FullName, COUNT(model_list.Model) AS Number_of_Models FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName;

SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id WHERE car_names.Make ='amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id WHERE car_names.Make = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'amc hornet sportabout (sw)';

SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = "amc hornet sportabout (sw)";
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT Accelerate FROM cars_data INNER JOIN car_names ON car_names.MakeId = cars_data.Id WHERE car_names.Make = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE model_list.Model = 'amc hornet sportabout (sw)';
SELECT Accelerate FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_names.Make = 'amc hornet sportabout (sw)';
SELECT cars_data.Accelerate FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'amc hornet sportabout (sw)';

SELECT COUNT(DISTINCT car_makers.Id) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Id) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Id) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Id) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries on car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Id) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';

SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = "Japan";
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers INNER JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';
SELECT COUNT(DISTINCT car_makers.Maker) FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'Japan';

SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'America';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'America';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'America';
SELECT COUNT(DISTINCT model_list.Model) FROM continents JOIN countries ON continents.ContId = countries.Continent JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker WHERE continents.Continent = 'America';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'America';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'America';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'America';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'America';
SELECT COUNT(DISTINCT model_list.ModelId) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'America' ```;
SELECT COUNT(DISTINCT model_list.Model) AS 'Number of Car Models' FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'America';

SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(DISTINCT model_list.Model) AS 'Count of Car Models' FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';
SELECT COUNT(DISTINCT model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE countries.CountryName = 'United States';

SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;

SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(MPG) FROM cars_data WHERE Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;
SELECT AVG(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 4;

SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId WHERE cars_data.Cylinders = 8 AND cars_data.Year = '1974';
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;

SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 AND cars_data.Year = '1974';
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders=8 AND cars_data.Year='1974';
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;
SELECT MIN(cars_data.Weight) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 AND cars_data.Year = 1974;

SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;

SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;
SELECT car_makers.Maker, model_list.Model FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker;

SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker IS NOT NULL;
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker IS NOT NULL;
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country;
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON car_makers.Country = countries.CountryId;
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId, countries.CountryName HAVING COUNT(car_makers.Id) > 0;
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker IS NOT NULL;
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker IS NOT NULL;
SELECT countries.CountryName, countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName, countries.CountryId HAVING COUNT(car_makers.Id) > 0;
SELECT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId, countries.CountryName HAVING COUNT(car_makers.Id) >= 1;
SELECT DISTINCT countries.CountryName, countries.CountryId FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country;

SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers on countries.CountryId = car_makers.Country;
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country;
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY countries.CountryId, countries.CountryName HAVING COUNT(car_makers.Id) > 0;
SELECT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId, countries.CountryName HAVING COUNT(car_makers.Id) >= 1;
SELECT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId, countries.CountryName HAVING COUNT(car_makers.Id) >= 1;
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Maker IS NOT NULL;
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country;
SELECT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId, countries.CountryName HAVING COUNT(car_makers.Id) >= 1;
SELECT countries.CountryId, countries.CountryName FROM countries INNER JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY countries.CountryId, countries.CountryName HAVING COUNT(car_makers.Id) >= 1;
SELECT countries.CountryId, countries.CountryName FROM countries WHERE EXISTS ( SELECT 1 FROM car_makers WHERE countries.CountryId = car_makers.Country );

SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;

SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;
SELECT COUNT(*) FROM cars_data WHERE Horsepower > 150;

SELECT Year, AVG(Weight) as Average_Weight FROM cars_data GROUP BY Year;
SELECT Year, AVG(Weight) as Average_Weight FROM cars_data GROUP BY Year;
SELECT Year, AVG(Weight) as Average_Weight FROM cars_data GROUP BY Year;
SELECT Year, AVG(Weight) as Average_Weight FROM cars_data GROUP BY Year;
SELECT Year, AVG(Weight) AS Average_Weight FROM cars_data GROUP BY Year;
SELECT Year, AVG(Weight) FROM cars_data GROUP BY Year;
SELECT Year, AVG(Weight) as Average_Weight FROM cars_data GROUP BY Year;
SELECT Year, AVG(Weight) as Average_Weight FROM cars_data GROUP BY Year;
SELECT Year, AVG(Weight) as AverageWeight FROM cars_data GROUP BY Year;
SELECT Year, AVG(Weight) AS Average_Weight FROM cars_data GROUP BY Year;

SELECT AVG(Weight) as Average_Weight, Year FROM cars_data GROUP BY Year;
SELECT AVG(Weight) as Average_Weight, Year FROM cars_data GROUP BY Year;
SELECT AVG(Weight) as Average_Weight, Year FROM cars_data GROUP BY Year;
SELECT AVG(Weight) as AverageWeight, Year FROM cars_data GROUP BY Year;
SELECT AVG(Weight) as AverageWeight, Year FROM cars_data GROUP BY Year;
SELECT AVG(Weight) as Average_Weight, Year FROM cars_data GROUP BY Year;
SELECT AVG(Weight), Year FROM cars_data GROUP BY Year;
SELECT Year, AVG(Weight), AVG(Year) FROM cars_data GROUP BY Year;
SELECT AVG(Weight) as average_weight, Year FROM cars_data GROUP BY Year;
SELECT Year, AVG(Weight) as AverageWeight, AVG(Year) as AverageYear FROM cars_data GROUP BY Year;

SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country JOIN continents ct ON c.Continent = ct.ContId WHERE ct.Continent = 'Europe' GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON countries.CountryId = car_makers.Country WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT COUNT(car_makers.Id) AS NumberOfCarMakers, countries.CountryName FROM car_makers JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(DISTINCT car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN continents ON countries.Continent = continents.ContId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;

SELECT countries.CountryName FROM countries INNER JOIN continents ON countries.Continent = continents.ContId INNER JOIN car_makers ON car_makers.Country = countries.CountryId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(DISTINCT car_makers.Id) >= 3;
SELECT CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON car_makers.Country = countries.CountryId WHERE Continent = 'Europe' GROUP BY CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON car_makers.Country = countries.CountryId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(DISTINCT car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON car_makers.Country = countries.CountryId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(DISTINCT car_makers.Id) >= 3;
SELECT c.CountryName FROM countries c JOIN continents cont ON c.Continent = cont.ContId JOIN car_makers cm ON cm.Country = c.CountryId WHERE cont.Continent = 'Europe' GROUP BY c.CountryName HAVING COUNT(cm.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON countries.CountryId = car_makers.Country WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT COUNT(car_makers.Id) AS NumberOfManufacturers, countries.CountryName FROM countries JOIN continents ON continents.ContId = countries.Continent AND continents.Continent = 'Europe' JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON countries.CountryId = car_makers.Country WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(DISTINCT car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON car_makers.Country = countries.CountryId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;
SELECT countries.CountryName FROM countries JOIN continents ON countries.Continent = continents.ContId JOIN car_makers ON car_makers.Country = countries.CountryId WHERE continents.Continent = 'Europe' GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) >= 3;

SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower) as Max_Horsepower, car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 3 GROUP BY car_names.Make;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 3 GROUP BY car_names.Make;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 3;

SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower) AS Max_Horsepower, car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 3 GROUP BY car_names.Make ORDER BY Max_Horsepower DESC LIMIT 1;
SELECT MAX(cars_data.Horsepower) AS Max_Horsepower, car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower) AS Max_Horsepower, car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 3;
SELECT MAX(cars_data.Horsepower), car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 3;

SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.MPG = (SELECT MAX(MPG) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names on cars_data.Id = car_names.MakeId JOIN model_list on car_names.Model = model_list.Model ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.MPG = (SELECT MAX(MPG) FROM cars_data);
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.MPG DESC LIMIT 1;

SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list INNER JOIN car_names ON model_list.Model = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId INNER JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model, cars_data.MPG FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model ORDER BY cars_data.MPG DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id ORDER BY cars_data.MPG DESC LIMIT 1;

SELECT AVG(Horsepower) FROM cars_data WHERE Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;

SELECT AVG(Horsepower) FROM cars_data WHERE Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE Year <= 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;
SELECT AVG(Horsepower) FROM cars_data WHERE Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;
SELECT AVG(cars_data.Horsepower) FROM cars_data WHERE cars_data.Year <= 1980;

SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId INNER JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';

SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'teslas';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'tesla';
SELECT AVG(cars_data.Edispl) AS AverageEdispl FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id JOIN model_list ON model_list.Model = car_names.Model JOIN car_makers ON car_makers.Id = model_list.Maker WHERE car_makers.Maker = 'tesla';
SELECT AVG(cars_data.Edispl) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'teslas';

SELECT MAX(Accelerate), Cylinders FROM cars_data GROUP BY Cylinders;
SELECT MAX(Accelerate) as Max_Accelerate, Cylinders FROM cars_data GROUP BY Cylinders;
SELECT MAX(Accelerate), Cylinders FROM cars_data GROUP BY Cylinders;
SELECT MAX(Accelerate), Cylinders FROM cars_data GROUP BY Cylinders;
SELECT MAX(cars_data.Accelerate) AS MaxAccelerate, cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders;
SELECT Cylinders, MAX(Accelerate) FROM cars_data GROUP BY Cylinders;
SELECT MAX(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders;
SELECT MAX(Accelerate), Cylinders FROM cars_data GROUP BY Cylinders;
SELECT MAX(Accelerate) as Maximum_Acceleration, Cylinders FROM cars_data GROUP BY Cylinders;
SELECT MAX(Accelerate), Cylinders FROM cars_data GROUP BY Cylinders;

SELECT Cylinders, MAX(Accelerate) as Maximum_Accelerate FROM cars_data GROUP BY Cylinders;
SELECT MAX(Accelerate) AS Maximum_Accelerate, Cylinders FROM cars_data GROUP BY Cylinders;
SELECT MAX(cars_data.Accelerate) as Max_Accelerate, cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders;
SELECT MAX(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders;
SELECT MAX(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders;
SELECT MAX(Accelerate), Cylinders FROM cars_data GROUP BY Cylinders;
SELECT MAX(Accelerate), Cylinders FROM cars_data GROUP BY Cylinders;
SELECT MAX(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders;
SELECT MAX(cars_data.Accelerate), cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders;
SELECT MAX(cars_data.Accelerate) as Max_Accelerate, cars_data.Cylinders FROM cars_data GROUP BY cars_data.Cylinders;

SELECT model_list.Model, COUNT(car_names.Make) AS VersionCount FROM model_list LEFT JOIN car_names ON model_list.Model = car_names.Model GROUP BY model_list.Model ORDER BY VersionCount DESC LIMIT 1;
SELECT model_list.Model, COUNT(car_names.Make) AS NumberOfMakes FROM model_list JOIN car_names ON car_names.Model = model_list.Model GROUP BY model_list.Model ORDER BY NumberOfMakes DESC LIMIT 1;
SELECT model_list.Model, COUNT(car_names.Make) AS VersionCount FROM model_list INNER JOIN car_names ON model_list.Model = car_names.Model GROUP BY model_list.Model ORDER BY VersionCount DESC LIMIT 1;
SELECT model, COUNT(*) as Version_Count FROM car_names GROUP BY model ORDER BY Version_Count DESC LIMIT 1;
SELECT model_list.Model, COUNT(car_names.Make) AS CountOfMakes FROM model_list JOIN car_names ON model_list.Model = car_names.Model GROUP BY model_list.Model ORDER BY CountOfMakes DESC LIMIT 1;
SELECT model_list.Model, COUNT(car_names.Make) AS Versions FROM model_list JOIN car_names ON model_list.Model = car_names.Model GROUP BY model_list.Model ORDER BY Versions DESC LIMIT 1;
SELECT model_list.Model, COUNT(car_names.Make) AS VersionCount FROM model_list INNER JOIN car_names ON model_list.Model = car_names.Model GROUP BY model_list.Model ORDER BY VersionCount DESC LIMIT 1;
SELECT model_list.Model, COUNT(car_names.Make) AS NumberOfMakes FROM model_list JOIN car_names ON model_list.Model = car_names.Model GROUP BY model_list.Model ORDER BY NumberOfMakes DESC LIMIT 1;
SELECT model_list.Model, COUNT(car_names.Make) AS VersionCount FROM model_list JOIN car_names ON model_list.Model = car_names.Model GROUP BY model_list.Model ORDER BY VersionCount DESC LIMIT 1;
SELECT model_list.Model, COUNT(car_names.Make) as VersionCount FROM model_list JOIN car_names ON model_list.Model = car_names.Model GROUP BY model_list.Model ORDER BY VersionCount DESC LIMIT 1;

SELECT model, COUNT(*) as VersionCount FROM car_names GROUP BY model ORDER BY VersionCount DESC LIMIT 1;
SELECT Model, COUNT(*) AS NumberOfVersions FROM car_names GROUP BY Model ORDER BY NumberOfVersions DESC LIMIT 1;
SELECT Model, COUNT(DISTINCT Make) as Count FROM car_names GROUP BY Model ORDER BY Count DESC LIMIT 1;
SELECT Model, COUNT(*) as version_count FROM car_names GROUP BY Model ORDER BY version_count DESC LIMIT 1;
SELECT model_list.Model, COUNT(DISTINCT car_names.Make) as Versions FROM model_list JOIN car_names ON model_list.Model = car_names.Model GROUP BY model_list.Model ORDER BY Versions DESC LIMIT 1;
SELECT Model, COUNT(DISTINCT Make) AS VersionCount FROM car_names GROUP BY Model ORDER BY VersionCount DESC LIMIT 1;
SELECT Model, COUNT(DISTINCT Make) AS NumberOfVersions FROM car_names GROUP BY Model ORDER BY NumberOfVersions DESC LIMIT 1;
SELECT Model, COUNT(*) AS Versions FROM car_names GROUP BY Model ORDER BY Versions DESC LIMIT 1;
SELECT Model, COUNT(*) AS versions FROM model_list GROUP BY Model ORDER BY versions DESC LIMIT 1;
SELECT Model, COUNT(DISTINCT Make) AS Versions FROM car_names GROUP BY Model ORDER BY Versions DESC LIMIT 1;

SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;

SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 4;

SELECT COUNT(*) FROM cars_data WHERE Year > YEAR(CURDATE()) - 2;
SELECT COUNT(*) FROM cars_data WHERE Year >= (SELECT MAX(Year) FROM cars_data) - 2;
SELECT COUNT(*) FROM cars_data WHERE Year > (YEAR(CURRENT_DATE) - 2);
SELECT COUNT(*) FROM cars_data WHERE Year >= YEAR(CURDATE())-2;
SELECT COUNT(*) FROM cars_data WHERE Year >= (SELECT MAX(Year) FROM cars_data) - 2;
SELECT COUNT(*) FROM cars_data WHERE Year > (SELECT MAX(Year) - 2 FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Year >= YEAR(CURRENT_DATE) - 2;
SELECT COUNT(*) FROM cars_data WHERE Year >= (SELECT YEAR(DATE_SUB(CURDATE(), INTERVAL 2 YEAR)));
SELECT COUNT(*) FROM cars_data WHERE Year > YEAR(CURDATE()) - 2;
SELECT COUNT(*) FROM cars_data WHERE Year >= (SELECT MAX(Year) FROM cars_data) - 2;

SELECT COUNT(*) FROM cars_data WHERE Year >= (CURRENT_YEAR - 2);
SELECT COUNT(*) FROM cars_data WHERE Year > (CURRENT_YEAR - 2);
SELECT COUNT(*) FROM cars_data WHERE Year > (YEAR(CURRENT_DATE) - 2);
SELECT COUNT(*) FROM cars_data WHERE Year >= YEAR(CURRENT_DATE) - 2;
SELECT COUNT(*) FROM cars_data WHERE Year > (CURRENT_DATE - INTERVAL '2' YEAR);
SELECT COUNT(*) FROM cars_data WHERE Year > YEAR(CURRENT_DATE) - 2;
SELECT COUNT(*) FROM cars_data WHERE Year > DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR);
SELECT COUNT(*) FROM cars_data WHERE Year >= (CURRENT_YEAR - 2);
SELECT COUNT(*) FROM cars_data WHERE Year >= (SELECT MAX(Year) FROM cars_data) - 2;
SELECT COUNT(*) FROM cars_data WHERE Year > YEAR(CURRENT_DATE) - 2;

SELECT COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.Maker = 'American Motor';
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'American Motor';
SELECT COUNT(model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor' AND continents.Continent = 'America';
SELECT COUNT(*) FROM model_list WHERE Maker IN ( SELECT Id FROM car_makers WHERE FullName = 'American Motor' );
SELECT COUNT(*) FROM model_list WHERE Maker IN ( SELECT Id FROM car_makers WHERE Maker = 'American Motor' );
SELECT COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.Maker = 'American Motor';
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'American Motor';
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'American Motor';
SELECT COUNT(*) FROM model_list WHERE Maker IN ( SELECT Id FROM car_makers WHERE Maker = 'American Motor' AND Country IN ( SELECT CountryId FROM countries WHERE Continent IN ( SELECT ContId FROM continents WHERE Continent = 'America' ) ) );
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'American Motor';

SELECT COUNT(model_list.Model) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN countries ON car_makers.Country = countries.CountryId INNER JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor' AND continents.Continent = 'America';
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor' AND continents.Continent = 'America';
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN countries ON car_makers.Country = countries.CountryId INNER JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor' AND continents.Continent = 'America';
SELECT COUNT(model_list.Model) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor' AND continents.Continent = 'America';
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'American Motor';
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor' AND continents.Continent = 'America';
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN countries ON car_makers.Country = countries.CountryId INNER JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor' AND continents.Continent = 'America';
SELECT COUNT(*) FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN countries ON car_makers.Country = countries.CountryId INNER JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor' AND continents.Continent = 'America';
SELECT COUNT(*) FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor' AND continents.Continent = 'America';
SELECT COUNT(*) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE car_makers.Maker = 'American Motor' AND continents.Continent = 'America';

SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(*) > 3;
SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.FullName, car_makers.Id FROM car_makers INNER JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT Maker, FullName, COUNT(ModelId) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY Maker, FullName HAVING COUNT(ModelId) > 3;
SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.FullName, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT CM.FullName, CM.Id FROM car_makers CM JOIN model_list ML ON CM.Id = ML.Maker GROUP BY CM.FullName, CM.Id HAVING COUNT(ML.Model) > 3;
SELECT car_makers.FullName, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.Id, car_makers.FullName FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.FullName HAVING COUNT(model_list.Model) > 3;

SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) > 3;
SELECT cm.Id, cm.Maker FROM car_makers as cm JOIN model_list as ml ON ml.Maker = cm.Id GROUP BY cm.Id, cm.Maker HAVING COUNT(ml.Model) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(model_list.Model) > 3;
SELECT cm.Id, cm.Maker FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker GROUP BY cm.Id, cm.Maker HAVING COUNT(ml.Model) > 3;
SELECT Maker, Id FROM car_makers WHERE Id IN ( SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(Model) > 3 );
SELECT c.Maker, c.Id FROM car_makers c JOIN model_list m ON c.Id = m.Maker GROUP BY c.Maker, c.Id HAVING COUNT(m.Model) > 3;
SELECT car_makers.Maker, car_makers.Id FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Maker, car_makers.Id HAVING COUNT(model_list.Model) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(model_list.Model) > 3;

SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN cars_data ON cars_data.Id = car_names.MakeId JOIN car_names ON car_names.Model = model_list.Model WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN cars_data ON cars_data.Id = car_names.MakeId INNER JOIN car_names ON car_names.Model = model_list.Model WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN cars_data ON cars_data.Id = car_names.MakeId JOIN car_names ON car_names.Model = model_list.Model WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight>3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.FullName = 'General Motors' OR cars_data.Weight > 3500;

SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN car_names ON model_list.Model = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN cars_data ON cars_data.Id = car_names.MakeId JOIN car_names ON car_names.Model = model_list.Model WHERE (car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500);
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN cars_data ON model_list.Model = cars_data.Id JOIN car_names ON cars_data.Id = car_names.MakeId WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list LEFT JOIN car_makers ON model_list.Maker = car_makers.Id LEFT JOIN car_names ON model_list.Model = car_names.Model LEFT JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'General Motors' OR cars_data.Weight > 3500;

SELECT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight >= 3000 AND Weight <= 4000;
SELECT DISTINCT Year FROM cars_data WHERE Weight BETWEEN 3000 AND 4000;

SELECT DISTINCT Year FROM cars_data WHERE Id IN ( SELECT MakeId FROM car_names WHERE Model IN ( SELECT Model FROM model_list WHERE Maker IN ( SELECT Id FROM car_makers WHERE Country IN ( SELECT CountryId FROM countries WHERE Continent IN ( SELECT ContId FROM continents ) ) ) ) ) AND Weight < 4000 AND Weight > 3000;
SELECT DISTINCT Year FROM cars_data WHERE Id IN ( SELECT MakeId FROM car_names WHERE Model IN ( SELECT Model FROM model_list WHERE Maker IN ( SELECT Id FROM car_makers WHERE Country IN ( SELECT CountryId FROM countries WHERE Continent IN ( SELECT ContId FROM continents ) ) ) ) ) AND Weight < 4000 AND Weight > 3000;
SELECT DISTINCT Year FROM cars_data WHERE (Weight < 4000 AND Weight > 3000);
SELECT DISTINCT Year FROM cars_data WHERE Id IN ( SELECT MakeId FROM car_names WHERE Model IN ( SELECT Model FROM model_list WHERE Maker IN ( SELECT Id FROM car_makers ) ) ) AND Weight < 4000 AND Weight > 3000;
SELECT DISTINCT Year FROM cars_data WHERE Weight < 4000 AND Weight > 3000;
SELECT DISTINCT Year FROM cars_data WHERE Id IN ( SELECT MakeId FROM car_names WHERE Model IN ( SELECT Model FROM model_list WHERE Maker IN ( SELECT Id FROM car_makers WHERE Country IN ( SELECT CountryId FROM countries WHERE Continent IN ( SELECT ContId FROM continents))))) AND Weight < 4000 AND Weight > 3000;
SELECT DISTINCT Year FROM cars_data WHERE Id IN ( SELECT MakeId FROM car_names WHERE Model IN ( SELECT Model FROM model_list WHERE Maker IN ( SELECT Id FROM car_makers))) AND Weight < 4000 AND Weight > 3000;
SELECT DISTINCT Year FROM cars_data WHERE Id IN ( SELECT MakeId FROM car_names WHERE MakeId IN ( SELECT Id FROM cars_data WHERE Weight < 4000 AND Weight > 3000 ) );
SELECT DISTINCT Year FROM cars_data WHERE Id IN ( SELECT MakeId FROM car_names WHERE Model IN ( SELECT Model FROM model_list WHERE Maker IN ( SELECT Id FROM car_makers WHERE Country IN ( SELECT CountryId FROM countries WHERE Continent IN ( SELECT ContId FROM continents ) ) ) ) ) AND Weight < 4000 AND Weight > 3000;
SELECT DISTINCT Year FROM cars_data WHERE Id IN (SELECT MakeId FROM car_names WHERE Model IN (SELECT Model FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE Country IN (SELECT CountryId FROM countries WHERE Continent IN (SELECT ContId FROM continents))))) AND Weight < 4000 AND Weight > 3000;

SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Accelerate = (SELECT MAX(cars_data.Accelerate) FROM cars_data);
SELECT cars_data.Horsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Accelerate = (SELECT MAX(cars_data.Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT cars_data.Horsepower FROM cars_data ORDER BY cars_data.Accelerate DESC LIMIT 1;
SELECT cars_data.Horsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Accelerate = (SELECT MAX(Accelerate) FROM cars_data);

SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT cars_data.Horsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId ORDER BY cars_data.Accelerate DESC LIMIT 1;
SELECT cars_data.Horsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT cars_data.Horsepower FROM cars_data WHERE cars_data.Accelerate = (SELECT MAX(cars_data.Accelerate) FROM cars_data);
SELECT Horsepower FROM cars_data WHERE Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT cars_data.Horsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId ORDER BY cars_data.Accelerate DESC LIMIT 1;
SELECT Horsepower FROM cars_data WHERE Accelerate = ( SELECT MAX(Accelerate) FROM cars_data);
SELECT cars_data.Horsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Accelerate = (SELECT MAX(Accelerate) FROM cars_data);
SELECT cars_data.Horsepower FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Accelerate = (SELECT MAX(Accelerate) FROM cars_data);

SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id JOIN model_list ON model_list.Model = car_names.Model WHERE model_list.Model = 'tesla' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla' AND cars_data.Accelerate = (SELECT MIN(Accelerate) FROM cars_data);
SELECT MIN(cars_data.Cylinders) FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE model_list.Model = 'tesla' AND cars_data.Accelerate = (SELECT MIN(cars_data.Accelerate) FROM cars_data);
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT cars_data.Cylinders FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';
SELECT MIN(cars_data.Cylinders) FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId INNER JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE model_list.Model = 'tesla';

SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker='Tesla' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId INNER JOIN model_list ON model_list.Model = car_names.Model INNER JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'Tesla' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'tesla' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'tesla' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'tesla' AND cars_data.Accelerate = ( SELECT MIN(cars_data.Accelerate) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'tesla' );
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'Tesla' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'Tesla' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'Tesla' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE car_makers.Maker = 'tesla' ORDER BY cars_data.Accelerate ASC LIMIT 1;
SELECT MIN(cars_data.Cylinders) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE car_makers.Maker = 'tesla' ORDER BY cars_data.Accelerate ASC LIMIT 1;

SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Horsepower FROM cars_data ORDER BY Horsepower DESC LIMIT 1);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > ( SELECT MAX(Horsepower) FROM cars_data );
SELECT COUNT(*) FROM cars_data WHERE Accelerate > ( SELECT MAX(Horsepower) FROM cars_data );
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > ( SELECT MAX(Horsepower) FROM cars_data );
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > ( SELECT MAX(Horsepower) FROM cars_data );

SELECT COUNT(*) FROM cars_data WHERE Accelerate > ( SELECT Accelerate FROM cars_data WHERE Horsepower = ( SELECT MAX(Horsepower) FROM cars_data ) );
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data));
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT MAX(Horsepower) FROM cars_data);
SELECT COUNT(*) FROM cars_data WHERE Accelerate > ( SELECT Accelerate FROM cars_data WHERE Horsepower = ( SELECT MAX(Horsepower) FROM cars_data ) );
SELECT COUNT(*) FROM cars_data WHERE Accelerate > ( SELECT Accelerate FROM cars_data WHERE Horsepower = ( SELECT MAX(Horsepower) FROM cars_data ) );
SELECT COUNT(*) FROM cars_data WHERE Accelerate > ( SELECT Accelerate FROM cars_data WHERE Horsepower = ( SELECT MAX(Horsepower) FROM cars_data ) );
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Accelerate FROM cars_data WHERE Horsepower = (SELECT MAX(Horsepower) FROM cars_data));
SELECT COUNT(*) FROM cars_data WHERE Accelerate > ( SELECT Accelerate FROM cars_data WHERE Horsepower = ( SELECT MAX(Horsepower) FROM cars_data ) );
SELECT COUNT(*) FROM cars_data WHERE Accelerate > (SELECT Max(Horsepower) FROM cars_data);

SELECT COUNT(DISTINCT car_makers.Country) FROM car_makers GROUP BY car_makers.Country HAVING COUNT(car_makers.Id) > 2;
SELECT COUNT(*) FROM ( SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2 ) AS subquery;
SELECT COUNT(DISTINCT countries.CountryName) FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2;
SELECT COUNT(CountryId) FROM ( SELECT countries.CountryId FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryId HAVING COUNT(car_makers.Id) > 2 ) AS subquery;
SELECT COUNT(DISTINCT car_makers.Country) FROM car_makers GROUP BY car_makers.Country HAVING COUNT(car_makers.Id) > 2;
SELECT COUNT(*) FROM ( SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2 ) AS SubQuery;
SELECT COUNT(CountryName) FROM ( SELECT CountryName FROM countries INNER JOIN car_makers ON car_makers.Country = countries.CountryId GROUP BY CountryName HAVING COUNT(car_makers.Id) > 2 ) AS subquery;
SELECT COUNT(DISTINCT CountryName) FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Id) > 2);
SELECT COUNT(CountryId) FROM (SELECT CountryName, COUNT(Maker) AS CarMakers FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY CountryName HAVING COUNT(Maker) > 2) AS CountryWithMoreThanTwoCarMakers;
SELECT COUNT(*) FROM ( SELECT countries.CountryName, COUNT(*) as num_of_makers FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING num_of_makers > 2 ) as country_makers_count;

SELECT COUNT(Country) FROM (SELECT COUNT(car_makers.Id), countries.CountryName FROM car_makers INNER JOIN countries ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2) AS subquery;
SELECT COUNT(*) FROM (SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2) AS SubQuery;
SELECT COUNT(DISTINCT CountryName) AS NumOfCountries FROM countries WHERE CountryId IN ( SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Id) > 2 );
SELECT COUNT(DISTINCT Country) FROM ( SELECT countries.CountryName as Country, COUNT(DISTINCT car_makers.Id) as NumOfCarMakers FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY Country ) AS subquery WHERE NumOfCarMakers > 2;
SELECT COUNT(*) FROM ( SELECT countries.CountryName, COUNT(car_makers.Id) AS NumberOfCarMakers FROM countries INNER JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2 ) AS subquery;
SELECT COUNT(DISTINCT Country) as NumberOfCountries FROM car_makers GROUP BY Country HAVING COUNT(Id) > 2;
SELECT COUNT(*) AS NumberOfCountries FROM ( SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2 ) AS SubQuery;
SELECT COUNT(DISTINCT Country) AS NumberOfCountries FROM ( SELECT car_makers.Country, COUNT(car_makers.Id) AS NumberOfCarMakers FROM car_makers GROUP BY car_makers.Country ) AS SubQuery WHERE NumberOfCarMakers > 2;
SELECT COUNT(DISTINCT c.CountryId) FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country GROUP BY c.CountryId HAVING COUNT(cm.Id) > 2;
SELECT COUNT(*) FROM ( SELECT countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country GROUP BY countries.CountryName HAVING COUNT(car_makers.Id) > 2 ) AS derived_table;

SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;

SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;
SELECT COUNT(*) FROM cars_data WHERE Cylinders > 6;

SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id JOIN model_list ON model_list.Model = car_names.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.ModelId JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;

SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM model_list, cars_data, car_names WHERE cars_data.Cylinders = 4 AND cars_data.Id = car_names.MakeId AND model_list.Model = car_names.Model ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model, MAX(cars_data.Horsepower) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 GROUP BY model_list.Model ORDER BY MAX(cars_data.Horsepower) DESC LIMIT 1;
SELECT model_list.Model FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders = 4 ORDER BY cars_data.Horsepower DESC LIMIT 1;

SELECT car_names.MakeId, car_names.Make FROM car_names INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cars_data.Cylinders <= 3;
SELECT car_names.MakeId, car_names.Make FROM car_names JOIN cars_data ON cars_data.Id = car_names.MakeId JOIN car_makers ON car_names.MakeId = car_makers.Id WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cars_data.Cylinders <= 3;
SELECT car_names.MakeId, car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cars_data.Cylinders <= 3;
SELECT car_names.MakeId, car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cars_data.Cylinders <= 3;
SELECT cn.MakeId, cn.Make FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cd.Cylinders <= 3;
SELECT car_names.MakeId, car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cars_data.Cylinders <= 3;
SELECT cn.MakeId, cn.Make FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cd.Cylinders <= 3;
SELECT car_names.MakeId, car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders <= 3 AND cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data);
SELECT cars_data.Id, car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Horsepower > ( SELECT MIN(Horsepower) FROM cars_data ) AND cars_data.Cylinders <= 3;
SELECT cd.Id, cn.Make FROM cars_data cd JOIN car_names cn ON cd.Id = cn.MakeId WHERE cd.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cd.Cylinders <= 3;

SELECT cars_data.Id, car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cars_data.Cylinders < 4;
SELECT car_names.MakeId, car_names.Make FROM car_names INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders < 4 AND cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data);
SELECT car_names.MakeId, car_names.Make FROM car_names INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders < 4 AND cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data);
SELECT DISTINCT car_names.MakeId, car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders < 4 AND cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data);
SELECT car_names.MakeId, car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders < 4 AND cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data);
SELECT car_names.MakeId, car_names.Make FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders < 4 AND cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data);
SELECT car_names.MakeId, car_names.Make FROM car_names JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Cylinders < 4 AND cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data);
SELECT car_names.MakeId, car_names.Make FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders < 4 AND cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data);
SELECT car_names.MakeId, car_names.Make FROM cars_data INNER JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders < 4 AND cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data);
SELECT car_names.MakeId, car_names.Make FROM cars_data JOIN car_names ON car_names.MakeId = cars_data.Id WHERE cars_data.Horsepower > (SELECT MIN(Horsepower) FROM cars_data) AND cars_data.Cylinders < 4;

SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names on cars_data.Id = car_names.MakeId JOIN model_list on car_names.Model = model_list.Model JOIN car_makers on model_list.Maker = car_makers.Id JOIN countries on car_makers.Country = countries.CountryId JOIN continents on countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data LEFT JOIN car_names ON cars_data.Id = car_names.MakeId LEFT JOIN model_list ON car_names.Model = model_list.Model LEFT JOIN car_makers ON model_list.Maker = car_makers.Id LEFT JOIN countries ON car_makers.Country = countries.CountryId LEFT JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data JOIN car_names ON cars_data.Id = car_names.MakeId JOIN model_list ON car_names.Model = model_list.Model JOIN car_makers ON model_list.Maker = car_makers.Id JOIN countries ON car_makers.Country = countries.CountryId JOIN continents ON countries.Continent = continents.ContId WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;

SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;
SELECT MAX(cars_data.MPG) FROM cars_data WHERE cars_data.Cylinders = 8 OR cars_data.Year <= 1980;

SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT model_list.Model FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN car_names ON model_list.Model = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT model_list.Model FROM model_list JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id JOIN car_makers ON model_list.Maker = car_makers.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT model_list.Model FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN car_names ON car_names.Model = model_list.Model INNER JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';

SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT model_list.Model FROM model_list INNER JOIN car_makers ON model_list.Maker = car_makers.Id INNER JOIN car_names ON model_list.Model = car_names.Model INNER JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.Maker != 'Ford Motor';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.Maker != 'Ford Motor';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON car_names.Model = model_list.ModelId JOIN cars_data ON cars_data.Id = car_names.MakeId WHERE cars_data.Weight < 3500 AND car_makers.Maker != 'Ford';
SELECT model_list.Model FROM model_list JOIN car_makers on model_list.Maker = car_makers.Id JOIN car_names on model_list.Model = car_names.Model JOIN cars_data on car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.FullName != 'Ford Motor';
SELECT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.Maker != 'Ford Motor';
SELECT DISTINCT model_list.Model FROM model_list JOIN car_makers ON model_list.Maker = car_makers.Id JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id WHERE cars_data.Weight < 3500 AND car_makers.Maker != 'Ford Motor';

SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);

SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);
SELECT CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId = car_makers.Country WHERE car_makers.Id IS NULL;
SELECT CountryName FROM countries WHERE CountryId NOT IN (SELECT Country FROM car_makers);

SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(DISTINCT car_names.Make) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >=2 AND COUNT(DISTINCT car_names.Make) >3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(DISTINCT car_names.Make) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >=2 AND COUNT(DISTINCT car_names.Make) >3;
SELECT cm.Id, cm.Maker FROM car_makers cm JOIN model_list ml ON cm.Id = ml.Maker JOIN car_names cn ON ml.Model = cn.Model GROUP BY cm.Id, cm.Maker HAVING COUNT(DISTINCT ml.Model) >= 2 AND COUNT(DISTINCT cn.Make) > 3;
SELECT Maker as Id, FullName as Maker FROM car_makers WHERE Id IN ( SELECT Maker FROM model_list GROUP BY Maker HAVING COUNT(ModelId) >= 2) AND Id IN ( SELECT Make FROM car_names GROUP BY Make HAVING COUNT(MakeId) > 3);
SELECT cm.Id, cm.Maker FROM car_makers AS cm JOIN model_list AS ml ON cm.Id = ml.Maker JOIN car_names AS cn ON ml.Model = cn.Model GROUP BY cm.Id, cm.Maker HAVING COUNT(DISTINCT ml.Model) >= 2 AND COUNT(DISTINCT cn.Make) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers WHERE ( SELECT COUNT(DISTINCT model_list.Model) FROM model_list WHERE model_list.Maker=car_makers.Id ) >= 2 AND ( SELECT COUNT(DISTINCT car_names.Make) FROM car_names INNER JOIN model_list ON car_names.Model=model_list.Model WHERE model_list.Maker=car_makers.Id ) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(DISTINCT car_names.Make) > 3;
SELECT DISTINCT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(DISTINCT car_names.Make) > 3;

SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(car_names.Make) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(cars_data.Id) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(cars_data.Id) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.ModelId) >= 2 AND COUNT(cars_data.Id) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(car_names.Make) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(cars_data.Id) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON car_names.Model = model_list.Model JOIN cars_data ON cars_data.Id = car_names.MakeId GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(cars_data.Id) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(cars_data.Id) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(cars_data.Id) > 3;
SELECT car_makers.Id, car_makers.Maker FROM car_makers JOIN model_list ON car_makers.Id = model_list.Maker JOIN car_names ON model_list.Model = car_names.Model JOIN cars_data ON car_names.MakeId = cars_data.Id GROUP BY car_makers.Id, car_makers.Maker HAVING COUNT(DISTINCT model_list.Model) >= 2 AND COUNT(cars_data.Id) > 3;

SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country LEFT JOIN model_list ON car_makers.Id = model_list.Maker WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR model_list.Model = 'tesla';
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country LEFT JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.Maker IN (SELECT Maker FROM model_list WHERE Model = 'tesla') OR countries.CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3);
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.CountryId IN ( SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(*) > 3) OR car_makers.Id IN ( SELECT model_list.Maker FROM model_list WHERE model_list.Model = 'tesla');
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country LEFT JOIN model_list ON car_makers.Id = model_list.Maker WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR model_list.Model = 'tesla' GROUP BY countries.CountryId, countries.CountryName;
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country LEFT JOIN model_list ON car_makers.Id = model_list.Maker WHERE car_makers.Country IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(*) > 3) OR model_list.Model = 'tesla';
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country LEFT JOIN model_list ON car_makers.Id = model_list.Maker WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR model_list.Model = 'tesla';
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country JOIN model_list ON car_makers.Id = model_list.Maker WHERE (SELECT COUNT(DISTINCT car_makers.Id) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR model_list.Model = 'tesla';
SELECT c.CountryId, c.CountryName FROM countries c JOIN car_makers cm ON cm.Country = c.CountryId LEFT JOIN model_list ml ON ml.Maker = cm.Id WHERE cm.Id IN (SELECT cm1.Id FROM car_makers cm1 GROUP BY cm1.Country HAVING COUNT(cm1.Country)>3) OR ml.Model = 'tesla';
SELECT c.CountryId, c.CountryName FROM countries c JOIN car_makers cm ON cm.Country = c.CountryId LEFT JOIN model_list ml ON ml.Maker = cm.Id WHERE cm.Id IN ( SELECT cm2.Country FROM car_makers cm2 GROUP BY cm2.Country HAVING COUNT(cm2.Id) > 3 ) OR ml.Model = 'tesla';
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE countries.CountryId IN ( SELECT car_makers.Country FROM car_makers GROUP BY car_makers.Country HAVING COUNT(car_makers.Id) > 3 ) OR car_makers.Id IN ( SELECT model_list.Maker FROM model_list WHERE model_list.Model = 'tesla' );

SELECT countries.CountryId, countries.CountryName FROM countries LEFT JOIN car_makers ON car_makers.Country = countries.CountryId LEFT JOIN model_list ON model_list.Maker = car_makers.Id WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR model_list.Maker IN (SELECT Id FROM car_makers WHERE car_makers.Maker = 'tesla');
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR car_makers.Maker = 'tesla';
SELECT c.CountryId, c.CountryName FROM countries c JOIN car_makers cm ON c.CountryId = cm.Country WHERE (SELECT COUNT(*) FROM car_makers WHERE Country = c.CountryId) > 3 OR cm.Maker IN (SELECT Maker FROM car_makers WHERE FullName LIKE '%Tesla%') GROUP BY c.CountryId;
SELECT c.CountryId, c.CountryName FROM countries c LEFT JOIN car_makers cm ON cm.Country = c.CountryId LEFT JOIN model_list ml ON ml.Maker = cm.Id WHERE (SELECT COUNT(*) FROM car_makers WHERE Country = c.CountryId) > 3 OR ml.Model LIKE '%tesla%';
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId = car_makers.Country LEFT JOIN model_list ON car_makers.Id = model_list.Maker WHERE (SELECT COUNT(DISTINCT car_makers.Id) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR model_list.Maker IN (SELECT Id FROM car_makers WHERE Maker='Tesla');
SELECT countries.CountryId, countries.CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (country.CountryId IN (SELECT Country FROM car_makers GROUP BY Country HAVING COUNT(Id) > 3) ) OR (CountryId IN (SELECT Country FROM car_makers WHERE Maker = 'tesla') );
SELECT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (SELECT COUNT(*) FROM car_makers WHERE Country = countries.CountryId) > 3 OR EXISTS (SELECT 1 FROM car_makers WHERE Maker = 'tesla' AND Country = countries.CountryId);
SELECT DISTINCT countries.CountryId, countries.CountryName FROM countries JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (SELECT COUNT(*) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR car_makers.Maker = 'tesla';
SELECT c.CountryId, c.CountryName FROM countries c LEFT JOIN car_makers cm ON c.CountryId = cm.Country LEFT JOIN model_list ml ON cm.Id = ml.Maker WHERE (SELECT COUNT(cm.Country) FROM car_makers cm WHERE cm.Country = c.CountryId) > 3 OR ml.Model IN (SELECT Model FROM model_list WHERE Maker IN (SELECT Id FROM car_makers WHERE FullName = 'Tesla')) GROUP BY c.CountryId, c.CountryName;
SELECT countries.CountryId, countries.CountryName FROM countries LEFT JOIN car_makers ON countries.CountryId = car_makers.Country WHERE (SELECT COUNT(car_makers.Id) FROM car_makers WHERE car_makers.Country = countries.CountryId) > 3 OR (car_makers.Maker = 'tesla') GROUP BY countries.CountryId, countries.CountryName;

SELECT Country FROM airlines WHERE Airline = 'JetBlue';
SELECT Country FROM airlines WHERE Airline = 'JetBlue';
SELECT Country FROM airlines WHERE Airline = 'JetBlue';
SELECT Country FROM airlines WHERE Airline = "JetBlue";
SELECT Country FROM airlines WHERE Airline = 'JetBlue';
SELECT Country FROM airlines WHERE Airline = "JetBlue";
SELECT Country FROM airlines WHERE Airline = 'JetBlue';
SELECT Country FROM airlines WHERE Airline = "JetBlue";
SELECT Country FROM airlines WHERE Airline = 'JetBlue';
SELECT Country FROM airlines WHERE Airline = 'JetBlue';

SELECT Country FROM airlines WHERE Airline = 'Jetblue';
SELECT Country FROM airlines WHERE Airline = 'Jetblue';
SELECT Country FROM airlines WHERE Airline = 'Jetblue';
SELECT Country FROM airlines WHERE Airline = 'Jetblue';
SELECT Country FROM airlines WHERE Airline = 'Jetblue';
SELECT Country FROM airlines WHERE Airline = 'Jetblue';
SELECT Country FROM airlines WHERE Airline = 'Jetblue';
SELECT Country FROM airlines WHERE Airline = 'Jetblue';
SELECT Country FROM airlines WHERE Airline = 'Jetblue';
SELECT Country FROM airlines WHERE Airline = 'Jetblue';

SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue";
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue";
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue";
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue";
SELECT Abbreviation FROM airlines WHERE Airline = "JetBlue";
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';

SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';
SELECT Abbreviation FROM airlines WHERE Airline = 'JetBlue';

SELECT Airline, Abbreviation FROM airlines WHERE Country = 'United States';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'America';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'United States';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'United States';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'United States';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'United States';
SELECT Airline, Abbreviation FROM airlines WHERE Country='USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';

SELECT Airline, Abbreviation FROM airlines WHERE Country = 'United States';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'America';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'United States';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'United States';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'America';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'United States';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'USA';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'United States';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'United States';
SELECT Airline, Abbreviation FROM airlines WHERE Country = 'United States';

SELECT AirportCode, AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportCode, AirportName FROM airports WHERE City='Jackson';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Jackson';

SELECT AirportCode, AirportName FROM airports WHERE City = 'Syracuse';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Syracuse';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Syracuse';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Syracuse';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Syracuse';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Syracuse';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Syracuse';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Syracuse';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Syracuse';
SELECT AirportCode, AirportName FROM airports WHERE City = 'Syracuse';

SELECT COUNT(DISTINCT uid) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(DISTINCT uid) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(DISTINCT uid) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;

SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;
SELECT COUNT(*) FROM airlines;

SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;

SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;
SELECT COUNT(*) FROM airports;

SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;

SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;
SELECT COUNT(*) FROM flights;

SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';
SELECT Airline FROM airlines WHERE Abbreviation = 'UAL';

SELECT * FROM airlines WHERE Abbreviation = 'UAL';
SELECT * FROM airlines WHERE Abbreviation = 'UAL';
SELECT * FROM airlines WHERE Abbreviation = 'UAL';
SELECT * FROM airlines WHERE Abbreviation = 'UAL';
SELECT * FROM airlines WHERE Abbreviation = 'UAL';
SELECT * FROM airlines WHERE Abbreviation = 'UAL';
SELECT * FROM airlines WHERE Abbreviation = 'UAL';
SELECT * FROM airlines WHERE Abbreviation = 'UAL';
SELECT * FROM airlines WHERE Abbreviation = 'UAL';
SELECT * FROM airlines WHERE Abbreviation = 'UAL';

SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';

SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';
SELECT COUNT(*) FROM airlines WHERE Country = 'America';

SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';

SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName = 'Alton';
SELECT City, Country FROM airports WHERE AirportName='Alton';

SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';

SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';
SELECT AirportName FROM airports WHERE AirportCode = 'AKO';

SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City='Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';

SELECT AirportName FROM airports WHERE City='Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';
SELECT AirportName FROM airports WHERE City = 'Jackson';

SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';

SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';
SELECT COUNT(*) FROM flights WHERE SourceAirport = 'APG';

SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';

SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport='ATO';
SELECT COUNT(*) FROM flights WHERE DestAirport = 'ATO';

SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';

SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';

SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights f JOIN airports a ON f.DestAirport = a.AirportCode WHERE a.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';

SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City ='Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';

SELECT COUNT(*) FROM flights JOIN airports AS source ON flights.SourceAirport = source.AirportCode JOIN airports AS dest ON flights.DestAirport = dest.AirportCode WHERE source.City = 'Syracuse' AND dest.City = 'Ashley';
SELECT COUNT(*) FROM flights JOIN airports as src_airport ON flights.SourceAirport = src_airport.AirportCode JOIN airports as dest_airport ON flights.DestAirport = dest_airport.AirportCode WHERE src_airport.City = 'Syracuse' AND dest_airport.City = 'Ashley';
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Syracuse') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights JOIN airports AS source_airports ON flights.SourceAirport = source_airports.AirportCode JOIN airports AS dest_airports ON flights.DestAirport = dest_airports.AirportCode WHERE source_airports.City = 'Syracuse' AND dest_airports.City = 'Ashley';
SELECT COUNT(*) FROM flights INNER JOIN airports AS source_airport ON flights.SourceAirport = source_airport.AirportCode INNER JOIN airports AS dest_airport ON flights.DestAirport = dest_airport.AirportCode WHERE source_airport.City = 'Syracuse' AND dest_airport.City = 'Ashley';
SELECT COUNT(*) FROM flights JOIN airports src ON flights.SourceAirport = src.AirportCode JOIN airports dest ON flights.DestAirport = dest.AirportCode WHERE src.City = 'Syracuse' AND dest.City = 'Ashley';
SELECT COUNT(*) FROM flights JOIN airports src ON flights.SourceAirport = src.AirportCode JOIN airports dest ON flights.DestAirport = dest.AirportCode WHERE src.City = 'Syracuse' AND dest.City = 'Ashley';
SELECT COUNT(*) FROM flights JOIN airports AS source_airports ON flights.SourceAirport = source_airports.AirportCode JOIN airports AS dest_airports ON flights.DestAirport = dest_airports.AirportCode WHERE source_airports.City = 'Syracuse' AND dest_airports.City = 'Ashley';
SELECT COUNT(*) FROM flights INNER JOIN airports as sourceAirports on flights.SourceAirport = sourceAirports.AirportCode INNER JOIN airports as destAirports on flights.DestAirport = destAirports.AirportCode WHERE sourceAirports.City = 'Syracuse' AND destAirports.City = 'Ashley' ```;
SELECT COUNT(*) FROM flights JOIN airports AS source_airports ON flights.SourceAirport = source_airports.AirportCode JOIN airports AS dest_airports ON flights.DestAirport = dest_airports.AirportCode WHERE source_airports.City = 'Syracuse' AND dest_airports.City = 'Ashley';

SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Syracuse') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City='Syracuse') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City='Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport = ( SELECT AirportCode FROM airports WHERE City = 'Syracuse' ) AND DestAirport = ( SELECT AirportCode FROM airports WHERE City = 'Ashley' );
SELECT COUNT(*) FROM flights WHERE SourceAirport IN ( SELECT AirportCode FROM airports WHERE City = 'Syracuse' ) AND DestAirport IN ( SELECT AirportCode FROM airports WHERE City = 'Ashley' );
SELECT COUNT(*) FROM flights WHERE SourceAirport = ( SELECT AirportCode FROM airports WHERE City = 'Syracuse') AND DestAirport = ( SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Syracuse') AND DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Syracuse') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Syracuse') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport IN (SELECT AirportCode FROM airports WHERE City = 'Syracuse') AND DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Ashley');
SELECT COUNT(*) FROM flights WHERE SourceAirport = (SELECT AirportCode FROM airports WHERE City = 'Syracuse') AND DestAirport = (SELECT AirportCode FROM airports WHERE City = 'Ashley');

SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue';

SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue';
SELECT COUNT(*) FROM flights WHERE Airline = 'Jetblue';

SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';

SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' and DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND DestAirport = 'ASY';

SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';

SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';
SELECT COUNT(*) FROM flights WHERE Airline = 'JetBlue' AND SourceAirport = 'AHD';

SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 'JetBlue' AND airports.City = 'Aberdeen';

SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = 'JetBlue' AND airports.City = 'Aberdeen' ```;
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode INNER JOIN airlines ON flights.Airline = airlines.uid WHERE airlines.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode JOIN airlines ON flights.Airline = airlines.Airline WHERE airlines.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE flights.Airline = 'JetBlue' AND airports.City = 'Aberdeen';
SELECT COUNT(*) FROM flights JOIN airlines ON flights.Airline = airlines.Airline JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airlines.Airline = 'JetBlue' AND airports.City = 'Aberdeen';

SELECT City, COUNT(*) as TotalFlights FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY TotalFlights DESC LIMIT 1;
SELECT City, COUNT(*) as NumberOfArrivingFlights FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY City ORDER BY NumberOfArrivingFlights DESC LIMIT 1;
SELECT City, COUNT(*) as NumFlights FROM airports a JOIN flights f ON a.AirportCode = f.DestAirport GROUP BY City ORDER BY NumFlights DESC LIMIT 1;
SELECT City, COUNT(*) AS NumberOfFlights FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY City ORDER BY NumberOfFlights DESC LIMIT 1;
SELECT City, COUNT(*) as numberOfFlights FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY City ORDER BY numberOfFlights DESC LIMIT 1;
SELECT City, COUNT(*) as NumArrivals FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY City ORDER BY NumArrivals DESC LIMIT 1;
SELECT City, COUNT(*) as NumberOfArrivingFlights FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY City ORDER BY NumberOfArrivingFlights DESC LIMIT 1;
SELECT City, COUNT(*) as NumberOfArrivals FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY NumberOfArrivals DESC LIMIT 1;
SELECT City, COUNT(*) as NumberOfArrivals FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY City ORDER BY NumberOfArrivals DESC LIMIT 1;
SELECT City, COUNT(*) AS NumberOfArrivals FROM airports a INNER JOIN flights f ON a.AirportCode = f.DestAirport GROUP BY City ORDER BY NumberOfArrivals DESC LIMIT 1;

SELECT City, COUNT(*) AS Frequency FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY Frequency DESC LIMIT 1;
SELECT City, COUNT(*) AS Frequency FROM airports INNER JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY Frequency DESC LIMIT 1;
SELECT City, COUNT(*) as Frequency FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY Frequency DESC LIMIT 1;
SELECT City, COUNT(*) as Frequency FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY COUNT(*) DESC LIMIT 1;
SELECT City, COUNT(*) as Frequency FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY Frequency DESC LIMIT 1;
SELECT City, COUNT(*) as Frequency FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY Frequency DESC LIMIT 1;
SELECT City, COUNT(*) as Frequency FROM airports JOIN flights ON airports.AirportCode = flights.DestAirport GROUP BY City ORDER BY Frequency DESC LIMIT 1;
SELECT City, COUNT(*) as frequency FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY City ORDER BY frequency DESC LIMIT 1;
SELECT City, COUNT(*) as Frequency FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY City ORDER BY Frequency DESC LIMIT 1;
SELECT City, COUNT(*) AS Frequency FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode GROUP BY City ORDER BY Frequency DESC LIMIT 1;

SELECT City, COUNT(*) as DepartingFlights FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY City ORDER BY DepartingFlights DESC LIMIT 1;
SELECT City, COUNT(*) AS NumberOfDepartingFlights FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY NumberOfDepartingFlights DESC LIMIT 1;
SELECT City, COUNT(*) as DepartingFlights FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY City ORDER BY DepartingFlights DESC LIMIT 1;
SELECT City, COUNT(*) as TotalDepartures FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY City ORDER BY TotalDepartures DESC LIMIT 1;
SELECT City, COUNT(*) as DepartingFlights FROM flights INNER JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY DepartingFlights DESC LIMIT 1;
SELECT City, COUNT(*) as NumberOfDepartingFlights FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY NumberOfDepartingFlights DESC LIMIT 1;
SELECT City, COUNT(*) as NumberOfDepartingFlights FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY NumberOfDepartingFlights DESC LIMIT 1;
SELECT City, COUNT(*) AS Num_Departing_Flights FROM flights INNER JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY Num_Departing_Flights DESC LIMIT 1;
SELECT City, COUNT(*) as DepartingFlights FROM flights INNER JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY DepartingFlights DESC LIMIT 1;
SELECT City, COUNT(*) AS DepartingFlights FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY City ORDER BY DepartingFlights DESC LIMIT 1;

SELECT City, COUNT(*) as frequency FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY City ORDER BY frequency DESC LIMIT 1;
SELECT City, COUNT(*) as Count FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY Count DESC LIMIT 1;
SELECT City, COUNT(SourceAirport) as 'Frequency' FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY City ORDER BY Frequency DESC LIMIT 1;
SELECT City, COUNT(*) as frequency FROM airports JOIN flights ON airports.AirportCode = flights.SourceAirport GROUP BY City ORDER BY frequency DESC LIMIT 1;
SELECT City FROM airports WHERE AirportCode IN (SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) DESC LIMIT 1);
SELECT City, COUNT(*) as Frequency FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY Frequency DESC LIMIT 1;
SELECT City, COUNT(SourceAirport) AS Frequency FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY Frequency DESC LIMIT 1;
SELECT City, COUNT(*) as Frequency FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY Frequency DESC LIMIT 1;
SELECT City, COUNT(*) as frequency FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY frequency DESC LIMIT 1;
SELECT City, COUNT(*) as Frequency FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode GROUP BY City ORDER BY Frequency DESC LIMIT 1;

SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT (*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;

SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) DESC LIMIT 1;

SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) ASC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(DestAirport) ASC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) ASC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) ASC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) ASC LIMIT 1;
SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) ASC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) ASC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) ASC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) ASC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) ASC LIMIT 1;

SELECT SourceAirport, COUNT(*) as num_flights FROM flights GROUP BY SourceAirport ORDER BY num_flights ASC LIMIT 1;
SELECT SourceAirport, COUNT(*) as FlightCount FROM flights GROUP BY SourceAirport ORDER BY FlightCount ASC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) ASC LIMIT 1;
SELECT SourceAirport FROM flights GROUP BY SourceAirport ORDER BY COUNT(*) ASC LIMIT 1;
SELECT a.AirportCode FROM airports a JOIN flights f ON a.AirportCode = f.DestAirport OR a.AirportCode = f.SourceAirport GROUP BY a.AirportCode ORDER BY COUNT(f.FlightNo) LIMIT 1;
SELECT a.AirportCode FROM airports a JOIN flights f on a.AirportCode = f.DestAirport OR a.AirportCode = f.SourceAirport GROUP BY a.AirportCode ORDER BY COUNT(f.FlightNo) ASC LIMIT 1;
SELECT DestAirport FROM flights GROUP BY DestAirport ORDER BY COUNT(*) ASC LIMIT 1;
SELECT SourceAirport, COUNT(*) AS NumFlights FROM flights GROUP BY SourceAirport ORDER BY NumFlights ASC LIMIT 1;
SELECT AirportCode FROM airports WHERE AirportCode IN ( SELECT DestAirport FROM flights GROUP BY DestAirport HAVING COUNT(*) = ( SELECT MIN(counter) FROM ( SELECT COUNT(*) as counter FROM flights GROUP BY DestAirport ) sub ) ) OR AirportCode IN ( SELECT SourceAirport FROM flights GROUP BY SourceAirport HAVING COUNT(*) = ( SELECT MIN(counter) FROM ( SELECT COUNT(*) as counter FROM flights GROUP BY SourceAirport ) sub ) ) LIMIT 1;
SELECT AirportCode FROM airports WHERE AirportCode IN (SELECT DestAirport as AirportCode FROM flights GROUP BY DestAirport UNION ALL SELECT SourceAirport as AirportCode FROM flights GROUP BY SourceAirport) GROUP BY AirportCode ORDER BY COUNT(*) ASC LIMIT 1;

SELECT Airline, COUNT(*) as NumberOfFlights FROM flights GROUP BY Airline ORDER BY NumberOfFlights DESC LIMIT 1;
SELECT Airline, COUNT(*) as FlightCount FROM flights GROUP BY Airline ORDER BY FlightCount DESC LIMIT 1;
SELECT Airline, COUNT(*) as number_of_flights FROM flights GROUP BY Airline ORDER BY number_of_flights DESC LIMIT 1;
SELECT Airline, COUNT(*) as NumberOfFlights FROM flights GROUP BY Airline ORDER BY NumberOfFlights DESC LIMIT 1;
SELECT Airline, COUNT(*) as NumberOfFlights FROM flights GROUP BY Airline ORDER BY NumberOfFlights DESC LIMIT 1;
SELECT Airline, COUNT(*) as NumberOfFlights FROM flights GROUP BY Airline ORDER BY NumberOfFlights DESC LIMIT 1;
SELECT Airline, COUNT(*) as FlightCount FROM flights GROUP BY Airline ORDER BY FlightCount DESC LIMIT 1;
SELECT Airline, COUNT(*) as Number_of_Flights FROM flights GROUP BY Airline ORDER BY Number_of_Flights DESC LIMIT 1;
SELECT Airline, COUNT(*) as flightCount FROM flights GROUP BY Airline ORDER BY flightCount DESC LIMIT 1;
SELECT Airline, COUNT(*) as NumberOfFlights FROM flights GROUP BY Airline ORDER BY NumberOfFlights DESC LIMIT 1;

SELECT Airline, COUNT(*) AS NumberOfFlights FROM flights GROUP BY Airline ORDER BY NumberOfFlights DESC LIMIT 1;
SELECT Airline, COUNT(*) as FlightCount FROM flights GROUP BY Airline ORDER BY FlightCount DESC LIMIT 1;
SELECT Airline, COUNT(*) as FlightCount FROM flights GROUP BY Airline ORDER BY FlightCount DESC LIMIT 1;
SELECT Airline, COUNT(*) as Flight_Count FROM flights GROUP BY Airline ORDER BY Flight_Count DESC LIMIT 1;
SELECT Airline, COUNT(*) AS count FROM flights GROUP BY Airline ORDER BY count DESC LIMIT 1;
SELECT Airline, COUNT(*) as FlightCount FROM flights GROUP BY Airline ORDER BY FlightCount DESC LIMIT 1;
SELECT Airline, COUNT(*) as FlightCount FROM flights GROUP BY Airline ORDER BY FlightCount DESC LIMIT 1;
SELECT Airline, COUNT(*) as flight_count FROM flights GROUP BY Airline ORDER BY flight_count DESC LIMIT 1;
SELECT Airline, COUNT(*) as flight_count FROM flights GROUP BY Airline ORDER BY flight_count DESC LIMIT 1;
SELECT Airline, COUNT(*) as FlightCount FROM flights GROUP BY Airline ORDER BY FlightCount DESC LIMIT 1;

SELECT a.Abbreviation, a.Country FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline ORDER BY COUNT(*) ASC LIMIT 1;
SELECT a.Abbreviation, a.Country FROM airlines a WHERE a.Airline = ( SELECT f.Airline FROM flights f GROUP BY f.Airline ORDER BY COUNT(*) ASC LIMIT 1 ) ```;
SELECT a.Abbreviation, a.Country FROM airlines a INNER JOIN ( SELECT f.Airline, COUNT(f.FlightNo) as cnt FROM flights f GROUP BY f.Airline ORDER BY cnt LIMIT 1 ) b ON a.Airline = b.Airline;
SELECT a.Abbreviation, a.Country FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline ORDER BY COUNT(f.FlightNo) ASC LIMIT 1;
SELECT a.Abbreviation, a.Country FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline ORDER BY COUNT(f.FlightNo) ASC LIMIT 1;
SELECT a.Abbreviation, a.Country FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline, a.Abbreviation, a.Country ORDER BY COUNT(*) ASC LIMIT 1;
SELECT a.Abbreviation, a.Country FROM airlines a INNER JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline ORDER BY COUNT(f.FlightNo) ASC LIMIT 1;
SELECT a.Abbreviation, a.Country FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline ORDER BY COUNT(f.FlightNo) ASC LIMIT 1;
SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights ON airlines.Airline = flights.Airline GROUP BY airlines.Airline ORDER BY COUNT(*) ASC LIMIT 1;
SELECT a.Abbreviation, a.Country FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.uid ORDER BY COUNT(f.FlightNo) ASC LIMIT 1;

SELECT a.Abbreviation, a.Country FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline ORDER BY COUNT(*) ASC LIMIT 1;
SELECT airlines.Abbreviation, airlines.Country FROM airlines WHERE airlines.Airline = ( SELECT flights.Airline FROM flights GROUP BY flights.Airline ORDER BY COUNT(*) ASC LIMIT 1 );
SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights ON airlines.Airline = flights.Airline GROUP BY airlines.Airline HAVING COUNT(flights.FlightNo) = ( SELECT MIN(a.CountFlights) FROM ( SELECT COUNT(*) as CountFlights FROM flights GROUP BY Airline ) a ) LIMIT 1;
SELECT a.Abbreviation, a.Country FROM airlines a WHERE a.Airline = ( SELECT f.Airline FROM flights f GROUP BY f.Airline ORDER BY COUNT(f.FlightNo) ASC LIMIT 1 );
SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN ( SELECT flights.Airline, COUNT(*) AS flightcount FROM flights GROUP BY flights.Airline ORDER BY flightcount ASC LIMIT 1 ) AS fc ON airlines.Airline = fc.Airline;
SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights ON airlines.Airline = flights.Airline GROUP BY airlines.Airline HAVING COUNT(*) = ( SELECT MIN(FlightCount) FROM ( SELECT COUNT(*) as FlightCount FROM flights GROUP BY Airline ) as subQuery );
SELECT a.Abbreviation, a.Country FROM airlines a WHERE a.Airline = ( SELECT f.Airline FROM flights f GROUP BY f.Airline ORDER BY COUNT(*) ASC LIMIT 1 );
SELECT a.Abbreviation, a.Country FROM airlines a WHERE a.Airline = ( SELECT f.Airline FROM flights f GROUP BY f.Airline ORDER BY COUNT(f.FlightNo) ASC LIMIT 1 );
SELECT a.Abbreviation, a.Country FROM airlines a WHERE a.Airline = ( SELECT f.Airline FROM flights f GROUP BY f.Airline ORDER BY COUNT(*) ASC LIMIT 1 );
SELECT airlines.Abbreviation, airlines.Country FROM airlines JOIN flights ON airlines.Airline = flights.Airline GROUP BY airlines.Airline ORDER BY COUNT(flights.FlightNo) ASC LIMIT 1;

SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON flights.Airline = airlines.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT a.Airline FROM airlines a INNER JOIN flights f ON f.Airline = a.Airline WHERE f.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';

SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON flights.Airline = airlines.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.SourceAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights on airlines.Airline = flights.Airline WHERE flights.SourceAirport = 'AHD';

SELECT distinct airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT a.Airline FROM airlines a INNER JOIN flights f ON a.Airline = f.Airline WHERE f.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.uid = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';

SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Abbreviation = flights.Airline WHERE flights.DestAirport = 'AHD';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.DestAirport = 'AHD';
SELECT DISTINCT a.Airline FROM airlines a INNER JOIN flights f ON a.Abbreviation = f.Airline WHERE f.DestAirport = 'AHD';

SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.uid = f1.Airline JOIN flights f2 ON a.uid = f2.Airline WHERE f1.SourceAirport = 'APG' AND f2.SourceAirport = 'CVO';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.Abbreviation = f1.Airline WHERE f1.SourceAirport = 'APG' INTERSECT SELECT DISTINCT a.Airline FROM airlines a JOIN flights f2 ON a.Abbreviation = f2.Airline WHERE f2.SourceAirport = 'CVO';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.Abbreviation = f1.Airline JOIN flights f2 ON a.Abbreviation = f2.Airline WHERE f1.SourceAirport = 'APG' AND f2.SourceAirport = 'CVO';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.Airline = f1.Airline JOIN flights f2 ON a.Airline = f2.Airline WHERE (f1.SourceAirport = 'APG' AND f2.SourceAirport = 'CVO');
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.uid = f1.Airline JOIN flights f2 ON a.uid = f2.Airline WHERE f1.SourceAirport = 'APG' AND f2.SourceAirport = 'CVO';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;
SELECT DISTINCT a.Airline FROM airlines AS a JOIN flights AS f1 ON a.Abbreviation = f1.Airline JOIN flights AS f2 ON a.Abbreviation = f2.Airline WHERE f1.SourceAirport = 'APG' AND f2.SourceAirport = 'CVO';
SELECT DISTINCT a.Airline FROM airlines a WHERE EXISTS ( SELECT 1 FROM flights f WHERE f.Airline = a.Abbreviation AND f.SourceAirport = 'APG') AND EXISTS ( SELECT 1 FROM flights f WHERE f.Airline = a.Abbreviation AND f.SourceAirport = 'CVO');
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;

SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) > 1;
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;
SELECT DISTINCT airlines.Airline FROM airlines JOIN flights ON airlines.Airline = flights.Airline JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode IN ('APG', 'CVO') GROUP BY airlines.Airline HAVING COUNT(DISTINCT airports.AirportCode) = 2;
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY f.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;
SELECT DISTINCT a.Airline FROM airlines a INNER JOIN flights f1 ON a.Abbreviation = f1.Airline INNER JOIN airports ap1 ON f1.SourceAirport = ap1.AirportCode INNER JOIN flights f2 ON a.Abbreviation = f2.Airline INNER JOIN airports ap2 ON f2.SourceAirport = ap2.AirportCode WHERE ap1.AirportCode = 'APG' AND ap2.AirportCode = 'CVO';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.Abbreviation = f1.Airline JOIN flights f2 ON a.Abbreviation = f2.Airline WHERE f1.SourceAirport = 'APG' AND f2.SourceAirport = 'CVO';
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;
SELECT DISTINCT a.Airline FROM airlines a INNER JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport IN ('APG', 'CVO') GROUP BY a.Airline HAVING COUNT(DISTINCT f.SourceAirport) = 2;

SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport = 'CVO' AND a.Airline NOT IN (SELECT Airline FROM flights WHERE SourceAirport = 'APG');
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport = 'CVO' AND a.Airline NOT IN ( SELECT a2.Airline FROM airlines a2 JOIN flights f2 ON a2.Airline = f2.Airline WHERE f2.SourceAirport = 'APG' ) ```;
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport = 'CVO' AND a.Airline NOT IN ( SELECT a2.Airline FROM airlines a2 JOIN flights f2 ON a2.Airline = f2.Airline WHERE f2.SourceAirport = 'APG' );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport = 'CVO' AND a.Abbreviation NOT IN ( SELECT DISTINCT f2.Airline FROM flights f2 WHERE f2.SourceAirport = 'APG' );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport = 'CVO' AND a.Abbreviation NOT IN ( SELECT f2.Airline FROM flights f2 WHERE f2.SourceAirport = 'APG' );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport = 'CVO' AND a.Airline NOT IN ( SELECT Airline FROM flights WHERE SourceAirport = 'APG' );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline JOIN airports p ON f.SourceAirport = p.AirportCode WHERE p.AirportCode = 'CVO' AND a.Airline NOT IN (SELECT a2.Airline FROM airlines a2 JOIN flights f2 ON a2.Airline = f2.Airline JOIN airports p2 ON f2.SourceAirport = p2.AirportCode WHERE p2.AirportCode = 'APG');
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline JOIN airports ap ON f.SourceAirport = ap.AirportCode WHERE f.SourceAirport = 'CVO' AND a.Airline NOT IN ( SELECT a2.Airline FROM airlines a2 JOIN flights f2 ON a2.Airline = f2.Airline JOIN airports ap2 ON f2.SourceAirport = ap2.AirportCode WHERE f2.SourceAirport = 'APG' );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline WHERE f.SourceAirport = 'CVO' AND a.Airline NOT IN ( SELECT f.Airline FROM flights f WHERE f.SourceAirport = 'APG' );
SELECT DISTINCT a.Airline FROM airlines a INNER JOIN flights f ON a.Abbreviation = f.Airline WHERE f.SourceAirport = 'CVO' AND a.Abbreviation NOT IN ( SELECT f1.Airline FROM flights f1 WHERE f1.SourceAirport = 'APG' );

SELECT distinct a.Airline FROM flights f INNER JOIN airlines a ON f.Airline = a.Airline WHERE f.SourceAirport = 'CVO' AND a.Airline NOT IN (SELECT a2.Airline FROM flights f2 INNER JOIN airlines a2 ON f2.Airline = a2.Airline WHERE f2.SourceAirport = 'APG');
SELECT DISTINCT a.Airline FROM airlines AS a JOIN flights AS f ON a.Airline = f.Airline JOIN airports AS ap ON f.SourceAirport = ap.AirportCode WHERE ap.AirportCode ='CVO' AND a.Airline NOT IN ( 	SELECT DISTINCT a.Airline 	FROM airlines AS a 	JOIN flights AS f ON a.Airline = f.Airline 	JOIN airports AS ap ON f.SourceAirport = ap.AirportCode 	WHERE ap.AirportCode ='APG' );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.Abbreviation = f1.Airline JOIN airports ap1 ON f1.SourceAirport = ap1.AirportCode WHERE ap1.AirportCode = 'CVO' AND a.Abbreviation NOT IN ( SELECT f2.Airline FROM flights f2 JOIN airports ap2 ON f2.SourceAirport = ap2.AirportCode WHERE ap2.AirportCode = 'APG' );
SELECT DISTINCT f.Airline FROM flights AS f JOIN airports AS a ON f.SourceAirport = a.AirportCode WHERE a.AirportCode = 'CVO' AND f.Airline NOT IN ( SELECT f2.Airline FROM flights AS f2 JOIN airports AS a2 ON f2.SourceAirport = a2.AirportCode WHERE a2.AirportCode = 'APG' );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f1 ON a.Abbreviation = f1.Airline JOIN airports ap1 ON f1.SourceAirport = ap1.AirportCode WHERE ap1.AirportCode = 'CVO' AND NOT EXISTS ( SELECT 1 FROM flights f2 JOIN airports ap2 ON f2.SourceAirport = ap2.AirportCode WHERE ap2.AirportCode = 'APG' AND a.Abbreviation = f2.Airline );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Abbreviation = f.Airline JOIN airports ap ON f.SourceAirport = ap.AirportCode WHERE ap.AirportCode = 'CVO' AND a.Abbreviation NOT IN ( SELECT DISTINCT a2.Abbreviation FROM airlines a2 JOIN flights f2 ON a2.Abbreviation = f2.Airline JOIN airports ap2 ON f2.SourceAirport = ap2.AirportCode WHERE ap2.AirportCode = 'APG' );
SELECT DISTINCT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline JOIN airports apt ON f.SourceAirport = apt.AirportCode WHERE apt.AirportCode = 'CVO' AND a.Airline NOT IN (SELECT DISTINCT a2.Airline FROM airlines a2 JOIN flights f2 ON a2.Airline = f2.Airline JOIN airports apt2 ON f2.SourceAirport = apt2.AirportCode WHERE apt2.AirportCode = 'APG');
SELECT DISTINCT a.Airline FROM flights f JOIN airlines a ON f.Airline = a.Airline WHERE f.SourceAirport = 'CVO' AND a.Airline NOT IN ( SELECT f2.Airline FROM flights f2 WHERE f2.SourceAirport = 'APG' );
SELECT DISTINCT f.Airline FROM flights f JOIN airports a ON f.SourceAirport = a.AirportCode WHERE a.AirportCode = 'CVO' AND f.Airline NOT IN ( SELECT DISTINCT f2.Airline FROM flights f2 JOIN airports a2 ON f2.SourceAirport = a2.AirportCode WHERE a2.AirportCode = 'APG' );
SELECT DISTINCT airlines.Airline FROM airlines INNER JOIN flights ON airlines.Airline = flights.Airline INNER JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'CVO' AND airlines.Airline NOT IN ( SELECT DISTINCT airlines.Airline FROM airlines INNER JOIN flights ON airlines.Airline = flights.Airline INNER JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.AirportCode = 'APG' );

SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.uid = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a, flights f WHERE a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines AS a JOIN flights AS f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;

SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;
SELECT airlines.Airline FROM airlines INNER JOIN flights ON airlines.Airline = flights.Airline GROUP BY airlines.Airline HAVING COUNT(flights.FlightNo) >= 10;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) >= 10;

SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;
SELECT a.Airline FROM airlines a WHERE (SELECT COUNT(*) FROM flights f WHERE f.Airline = a.Airline) < 200;
SELECT a.Airline FROM airlines a WHERE (SELECT COUNT(*) FROM flights f WHERE f.Airline = a.Airline) < 200;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;
SELECT a.* FROM airlines a WHERE ( SELECT COUNT(*) FROM flights f WHERE f.Airline = a.Airline ) < 200;
SELECT airlines.Airline FROM airlines JOIN flights ON flights.Airline = airlines.Airline GROUP BY airlines.Airline HAVING COUNT(*) < 200;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;
SELECT a.Airline FROM airlines a WHERE ( SELECT COUNT(*) FROM flights f WHERE f.Airline = a.Airline ) < 200;

SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;
SELECT a.Airline FROM airlines a WHERE (SELECT COUNT(*) FROM flights f WHERE f.Airline = a.Airline) < 200;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;
SELECT a.Airline FROM airlines a, flights f WHERE a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;
SELECT a.Airline FROM airlines as a JOIN flights as f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;
SELECT a.Airline FROM airlines a JOIN flights f ON a.Airline = f.Airline GROUP BY a.Airline HAVING COUNT(f.FlightNo) < 200;

SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = "JetBlue";
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';

SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';
SELECT FlightNo FROM flights WHERE Airline = 'JetBlue';

SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = "APG";
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = "APG";
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';

SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';
SELECT FlightNo FROM flights WHERE SourceAirport = 'APG';

SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = "APG";
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';

SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';
SELECT FlightNo FROM flights WHERE DestAirport = 'APG';

SELECT FlightNo FROM flights INNER JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = "Jackson";
SELECT FlightNo FROM flights INNER JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE City = "Jackson";
SELECT FlightNo FROM flights INNER JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights INNER JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = "Jackson";
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = "Jackson";

SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.SourceAirport = airports.AirportCode WHERE City = 'Jackson';

SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Jackson";
SELECT FlightNo FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Jackson');
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Jackson";
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City = 'Jackson');
SELECT FlightNo FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Jackson";
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = "Jackson";
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';

SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';
SELECT FlightNo FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City = 'Jackson';

SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Syracuse', 'Jackson');
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Syracuse', 'Jackson');
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Syracuse', 'Jackson');
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Syracuse', 'Jackson'));
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Syracuse', 'Jackson');
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Syracuse', 'Jackson');
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Syracuse', 'Jackson');
SELECT COUNT(*) FROM flights JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Syracuse', 'Jackson');
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Syracuse', 'Jackson');
SELECT COUNT(*) FROM flights INNER JOIN airports ON flights.DestAirport = airports.AirportCode WHERE airports.City IN ('Syracuse', 'Jackson');

SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Syracuse', 'Jackson'));
SELECT COUNT(*) FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City IN ('Syracuse', 'Jackson') );
SELECT COUNT(*) FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City IN ('Syracuse', 'Jackson') );
SELECT COUNT(*) FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City IN ('Syracuse', 'Jackson') );
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Syracuse', 'Jackson'));
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Syracuse', 'Jackson'));
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Syracuse', 'Jackson'));
SELECT COUNT(*) FROM flights WHERE DestAirport IN ( SELECT AirportCode FROM airports WHERE City IN ('Syracuse', 'Jackson') );
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Syracuse', 'Jackson'));
SELECT COUNT(*) FROM flights WHERE DestAirport IN (SELECT AirportCode FROM airports WHERE City IN ('Syracuse', 'Jackson'));

SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights);
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights);
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights);
SELECT A.AirportName FROM airports A LEFT JOIN flights F ON A.AirportCode = F.DestAirport OR A.AirportCode = F.SourceAirport WHERE F.Airline IS NULL;
SELECT a.AirportName FROM airports a LEFT JOIN flights f ON a.AirportCode = f.SourceAirport OR a.AirportCode = f.DestAirport WHERE f.FlightNo IS NULL;
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT DestAirport FROM flights) AND AirportCode NOT IN (SELECT SourceAirport FROM flights);
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights);
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT DestAirport FROM flights) AND AirportCode NOT IN (SELECT SourceAirport FROM flights);
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM flights) AND AirportCode NOT IN (SELECT DestAirport FROM flights);
SELECT AirportName FROM airports WHERE AirportCode NOT IN (SELECT DestAirport FROM flights) AND AirportCode NOT IN (SELECT SourceAirport FROM flights);

SELECT AirportCode, AirportName FROM airports WHERE AirportCode NOT IN ( SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights);
SELECT * FROM airports WHERE AirportCode NOT IN ( SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights );
SELECT * FROM airports WHERE AirportCode NOT IN (SELECT DestAirport FROM flights) AND AirportCode NOT IN (SELECT SourceAirport FROM flights);
SELECT a.AirportName FROM airports a LEFT JOIN flights f1 ON a.AirportCode = f1.DestAirport LEFT JOIN flights f2 ON a.AirportCode = f2.SourceAirport WHERE f1.DestAirport IS NULL AND f2.SourceAirport IS NULL;
SELECT a.* FROM airports a LEFT JOIN flights f ON a.AirportCode = f.SourceAirport OR a.AirportCode = f.DestAirport WHERE f.Airline IS NULL;
SELECT a.AirportCode, a.AirportName FROM airports a LEFT JOIN flights f1 ON a.AirportCode = f1.SourceAirport LEFT JOIN flights f2 ON a.AirportCode = f2.DestAirport WHERE f1.SourceAirport IS NULL AND f2.DestAirport IS NULL;
SELECT a.* FROM airports a LEFT JOIN flights f1 ON a.AirportCode = f1.SourceAirport LEFT JOIN flights f2 ON a.AirportCode = f2.DestAirport WHERE f1.SourceAirport IS NULL AND f2.DestAirport IS NULL;
SELECT * FROM airports WHERE AirportCode NOT IN (SELECT SourceAirport from flights) AND AirportCode NOT IN (SELECT DestAirport from flights);
SELECT DISTINCT a.AirportName FROM airports a WHERE a.AirportCode NOT IN (SELECT f.SourceAirport FROM flights f) AND a.AirportCode NOT IN (SELECT f.DestAirport FROM flights f);
SELECT * FROM airports WHERE AirportCode NOT IN ( SELECT SourceAirport FROM flights UNION SELECT DestAirport FROM flights );

SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;

SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;
SELECT COUNT(*) FROM Documents;

SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;

SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID as ID, Document_Name as Name, Document_Description as Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;
SELECT Document_ID, Document_Name, Document_Description FROM Documents;

SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%';

SELECT Documents.Document_Name, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents WHERE Documents.Document_Description LIKE '%w%';
SELECT Documents.Document_Name, Documents.Document_ID, Templates.Template_ID FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Description LIKE '%w%';

SELECT Documents.Document_Description, Documents.Document_ID, Documents.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV';
SELECT Documents.Document_Description, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = "Robbin CV";
SELECT Documents.Document_Description, Documents.Template_ID, Documents.Document_ID FROM Documents WHERE Documents.Document_Name = 'Robbin CV';
SELECT Documents.Document_Description, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV';
SELECT Documents.Document_Description, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV';
SELECT Documents.Document_Description, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = "Robbin CV";
SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV';
SELECT Documents.Document_Description, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV';
SELECT Documents.Document_Description, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV';
SELECT Documents.Document_Description, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV';

SELECT d.Document_ID, d.Template_ID, d.Document_Description FROM Documents d WHERE d.Document_Name = 'Robbin CV';
SELECT Documents.Document_ID, Templates.Template_ID, Documents.Document_Description FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV';
SELECT Documents.Document_ID, Templates.Template_ID, Documents.Document_Description FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV';
SELECT D.Document_ID, D.Template_ID, D.Document_Description FROM Documents D WHERE D.Document_Name = 'Robbin CV';
SELECT D.Document_ID, D.Template_ID, D.Document_Description FROM Documents D WHERE D.Document_Name = 'Robbin CV';
SELECT Documents.Document_ID, Templates.Template_ID, Documents.Document_Description FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Document_Name = 'Robbin CV';
SELECT Documents.Document_ID, Templates.Template_ID, Documents.Document_Description FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV';
SELECT D.Document_ID, D.Template_ID, D.Document_Description FROM Documents D WHERE D.Document_Name = 'Robbin CV';
SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV';
SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Description FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Robbin CV';

SELECT COUNT(DISTINCT Template_ID) FROM Documents;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT COUNT(DISTINCT Template_ID) FROM Documents;
SELECT COUNT(DISTINCT Template_ID) FROM Documents;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID;
SELECT COUNT(DISTINCT Template_ID) FROM Documents;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID;

SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID;
SELECT COUNT(DISTINCT Templates.Template_ID) FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID;

SELECT COUNT(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT';
SELECT COUNT(DISTINCT Documents.Document_ID) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT';
SELECT COUNT(*) FROM Documents WHERE Template_ID IN ( SELECT Template_ID FROM Templates WHERE Template_Type_Code IN ( SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'PPT' ) );
SELECT COUNT(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT';
SELECT COUNT(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT';
SELECT COUNT(*) FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT';
SELECT COUNT(*) FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT';
SELECT COUNT(DISTINCT Documents.Document_ID) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT';
SELECT COUNT(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT';
SELECT COUNT(*) FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code WHERE rtt.Template_Type_Description = 'PPT';

SELECT COUNT(*) FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code WHERE rt.Template_Type_Description = 'PPT';
SELECT COUNT(*) FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code WHERE rtt.Template_Type_Description = 'PPT';
SELECT COUNT(*) FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID JOIN Ref_Template_Types RTT ON T.Template_Type_Code = RTT.Template_Type_Code WHERE RTT.Template_Type_Description = 'PPT';
SELECT COUNT(*) FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code WHERE rtt.Template_Type_Description = 'PPT';
SELECT COUNT(*) FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID JOIN Ref_Template_Types RTT ON T.Template_Type_Code = RTT.Template_Type_Code WHERE RTT.Template_Type_Description = 'PPT';
SELECT COUNT(*) FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code WHERE rtt.Template_Type_Description = 'PPT';
SELECT COUNT(Distinct Documents.Document_ID) FROM Documents JOIN Templates ON Templates.Template_ID = Documents.Template_ID JOIN Ref_Template_Types ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT';
SELECT COUNT(DISTINCT Documents.Document_ID) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT';
SELECT COUNT(*) FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code WHERE rtt.Template_Type_Description = 'PPT';
SELECT COUNT(*) FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'PPT';

SELECT Templates.Template_ID, COUNT(Documents.Document_ID) as NumberOfDocuments FROM Templates LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID;
SELECT Templates.Template_ID, COUNT(Documents.Document_ID) AS NumberOfDocuments FROM Templates LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID;
SELECT T.Template_ID, COUNT(D.Document_ID) as NumberOfDocuments FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID;
SELECT T.Template_ID, COUNT(D.Document_ID) AS NumberOfDocuments FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID;
SELECT T.Template_ID, COUNT(D.Document_ID) AS Number_of_Documents FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID;
SELECT T.Template_ID, COUNT(D.Document_ID) AS NumberOfDocuments FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID;
SELECT T.Template_ID, COUNT(D.Document_ID) as Number_of_Documents FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID;
SELECT T.Template_ID, COUNT(D.Document_ID) as Number_of_Documents FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID;
SELECT T.Template_ID, COUNT(D.Document_ID) as NumOfDocuments FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID;
SELECT T.Template_ID, COUNT(D.Document_ID) AS NumberOfDocuments FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID;

SELECT Templates.Template_ID, COUNT(*) AS Times_Used FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID;
SELECT Templates.Template_ID, COUNT(Documents.Document_ID) AS Usage_Count FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID;
SELECT Templates.Template_ID, COUNT(Documents.Document_ID) AS Usage_Count FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID;
SELECT Templates.Template_ID, COUNT(Documents.Document_ID) AS Times_Used FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID;
SELECT Templates.Template_ID, COUNT(Documents.Document_ID) AS Frequency FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID;
SELECT Templates.Template_ID, COUNT(Documents.Document_ID) AS Usage_Count FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID;
SELECT Templates.Template_ID, COUNT(Documents.Document_ID) AS Usage_Count FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID;
SELECT Templates.Template_ID, COUNT(Documents.Document_ID) as UsageCount FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID;
SELECT Templates.Template_ID, COUNT(Documents.Document_ID) as Usage_Count FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID;
SELECT Templates.Template_ID, COUNT(*) as Times_Used FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID;

SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID, T.Date_Effective_From, T.Date_Effective_To ORDER BY COUNT(D.Document_ID) DESC LIMIT 1;
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T INNER JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID, T.Date_Effective_From, T.Date_Effective_To ORDER BY COUNT(*) DESC LIMIT 1;
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T WHERE T.Template_ID = ( SELECT D.Template_ID FROM Documents D GROUP BY D.Template_ID ORDER BY COUNT(*) DESC LIMIT 1);
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Templates WHERE Templates.Template_ID IN ( SELECT Documents.Template_ID FROM Documents GROUP BY Documents.Template_ID ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Templates INNER JOIN ( SELECT Template_ID, COUNT(*) as DocumentCount FROM Documents GROUP BY Template_ID ORDER BY DocumentCount DESC LIMIT 1 ) as MostUsedTemplate ON Templates.Template_ID = MostUsedTemplate.Template_ID;
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T INNER JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID, T.Date_Effective_From, T.Date_Effective_To ORDER BY COUNT(*) DESC LIMIT 1;
SELECT t.Date_Effective_From, t.Date_Effective_To FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID, t.Date_Effective_From, t.Date_Effective_To ORDER BY COUNT(d.Document_ID) DESC LIMIT 1;
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T JOIN Documents D on T.Template_ID = D.Template_ID GROUP BY T.Template_ID, T.Date_Effective_From, T.Date_Effective_To ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID, Templates.Date_Effective_From, Templates.Date_Effective_To HAVING COUNT(Documents.Document_ID) = ( SELECT MAX(DocumentCount) FROM ( SELECT COUNT(*) AS DocumentCount FROM Documents GROUP BY Template_ID ) AS DocumentGroup );
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T JOIN (SELECT D.Template_ID, COUNT(*) as Document_Count FROM Documents D GROUP BY D.Template_ID ORDER BY Document_Count DESC LIMIT 1) Most_Used_Template ON T.Template_ID = Most_Used_Template.Template_ID;

SELECT t.Date_Effective_From, t.Date_Effective_To FROM Templates t INNER JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID, t.Date_Effective_From, t.Date_Effective_To ORDER BY COUNT(*) DESC LIMIT 1;
SELECT t.Date_Effective_From, t.Date_Effective_To FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID, t.Date_Effective_From, t.Date_Effective_To ORDER BY COUNT(*) DESC LIMIT 1;
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T WHERE T.Template_ID = ( SELECT D.Template_ID FROM Documents D GROUP BY D.Template_ID ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T WHERE T.Template_ID = ( SELECT D.Template_ID FROM Documents D GROUP BY D.Template_ID ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT t.Date_Effective_From, t.Date_Effective_To FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID, t.Date_Effective_From, t.Date_Effective_To ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID = ( SELECT Template_ID FROM Documents GROUP BY Template_ID ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T INNER JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID, T.Date_Effective_From, T.Date_Effective_To ORDER BY COUNT(D.Document_ID) DESC LIMIT 1;
SELECT T.Template_ID, T.Date_Effective_From, T.Date_Effective_To FROM Templates T WHERE T.Template_ID = ( SELECT D.Template_ID FROM Documents D GROUP BY D.Template_ID ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT T.Template_ID, T.Date_Effective_From, T.Date_Effective_To FROM Templates T INNER JOIN Documents D ON D.Template_ID = T.Template_ID GROUP BY T.Template_ID, T.Date_Effective_From, T.Date_Effective_To ORDER BY COUNT(D.Document_ID) DESC LIMIT 1;
SELECT t.Date_Effective_From, t.Date_Effective_To FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID, t.Date_Effective_From, t.Date_Effective_To ORDER BY COUNT(*) DESC LIMIT 1;

SELECT T.Template_ID FROM Templates T INNER JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID HAVING COUNT(D.Document_ID) > 1;
SELECT T.Template_ID FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID HAVING COUNT(D.Document_ID) > 1;
SELECT T.Template_ID FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID HAVING COUNT(D.Document_ID) > 1;
SELECT Template_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Template_ID HAVING COUNT(Documents.Document_ID) > 1;
SELECT T.Template_ID FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID HAVING COUNT(D.Document_ID) > 1;
SELECT t.Template_ID FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID HAVING COUNT(d.Document_ID) > 1;
SELECT Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID HAVING COUNT(Documents.Document_ID) > 1;
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(DISTINCT Document_ID) > 1;
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(DISTINCT Document_ID) > 1;
SELECT Templates.Template_ID FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID HAVING COUNT(Documents.Document_ID) > 1;

SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(DISTINCT Document_ID) > 1;
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(Document_ID) > 1;
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(DISTINCT Document_ID) > 1;
SELECT T.Template_ID FROM Templates T JOIN Documents D ON D.Template_ID = T.Template_ID GROUP BY T.Template_ID HAVING COUNT(DISTINCT D.Document_ID) > 1;
SELECT T.Template_ID FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_ID HAVING COUNT(D.Document_ID) > 1;
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(Document_ID) > 1;
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(DISTINCT Document_ID) > 1;
SELECT Template_ID FROM Documents GROUP BY Template_ID HAVING COUNT(DISTINCT Document_ID) > 1;
SELECT t.Template_ID FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID GROUP BY t.Template_ID HAVING COUNT(DISTINCT d.Document_ID) > 1;
SELECT Templates.Template_ID FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Template_ID HAVING COUNT(Documents.Document_ID) > 1;

SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT T.Template_ID FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID WHERE D.Document_ID IS NULL;
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);

SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Template_ID FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);

SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;

SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;
SELECT COUNT(*) FROM Templates;

SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates;
SELECT t.Date_Effective_From, t.Date_Effective_To, t.Template_Type_Code FROM Templates t;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates;
SELECT T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code FROM Templates T;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates;

SELECT Templates.Template_ID, Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates;
SELECT Templates.Template_ID, Templates.Date_Effective_From, Templates.Date_Effective_To, Ref_Template_Types.Template_Type_Code FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code;
SELECT Templates.Template_ID, Templates.Template_Type_Code, Templates.Date_Effective_From, Templates.Date_Effective_To, Ref_Template_Types.Template_Type_Description FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code;
SELECT T.Template_ID, T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code FROM Templates T;
SELECT Templates.Template_ID, Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates;
SELECT T.Template_ID, T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code FROM Templates T JOIN Ref_Template_Types RTT ON T.Template_Type_Code = RTT.Template_Type_Code;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates;
SELECT T.Template_ID, T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code FROM Templates T JOIN Ref_Template_Types RTT ON T.Template_Type_Code = RTT.Template_Type_Code;
SELECT Templates.Template_ID, Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates;

SELECT Template_ID, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Template_ID, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Template_ID, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Template_ID, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Template_ID, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Template_ID, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Template_ID, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Template_ID, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Template_ID, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Template_ID, Date_Effective_From, Date_Effective_To FROM Templates;

SELECT Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Date_Effective_From, Date_Effective_To FROM Templates;
SELECT Date_Effective_From, Date_Effective_To FROM Templates;

SELECT Date_Effective_From, Date_Effective_To FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP','PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP','PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Templates.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_Type_Code = 'PP' OR Template_Type_Code = 'PPT';
SELECT Date_Effective_From, Date_Effective_To FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');

SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates t INNER JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code WHERE rtt.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code IN ('PP', 'PPT');

SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Templates.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';

SELECT Date_Effective_From, Date_Effective_To FROM Templates t JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code WHERE rtt.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates t JOIN Ref_Template_Types rt ON t.Template_Type_Code = rt.Template_Type_Code WHERE rt.Template_Type_Description = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates t JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code WHERE rtt.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Code = 'CV';

SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 5;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 5;
SELECT t.Date_Effective_From, t.Date_Effective_To, t.Template_Type_Code FROM Templates t WHERE t.Version_Number > 5;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 5;
SELECT t.Date_Effective_From, t.Date_Effective_To, t.Template_Type_Code FROM Templates t WHERE t.Version_Number > 5;
SELECT T.Template_Type_Code, T.Date_Effective_From, T.Date_Effective_To FROM Templates T JOIN Ref_Template_Types RTT ON T.Template_Type_Code = RTT.Template_Type_Code WHERE T.Version_Number > 5;
SELECT t.Date_Effective_From, t.Date_Effective_To, t.Template_Type_Code FROM Templates t WHERE t.Version_Number > 5;
SELECT t.Date_Effective_From, t.Date_Effective_To, t.Template_Type_Code FROM Templates t WHERE t.Version_Number > 5;
SELECT T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code FROM Templates T WHERE T.Version_Number > 5;
SELECT T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code FROM Templates T WHERE T.Version_Number > 5;

SELECT T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code FROM Templates T WHERE T.Version_Number > 5;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Templates.Version_Number > 5;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 5;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Templates.Version_Number > 5;
SELECT T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code FROM Templates T WHERE T.Version_Number > 5;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates WHERE Templates.Version_Number > 5;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Templates.Version_Number > 5;
SELECT T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code FROM Templates T WHERE T.Version_Number > 5;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Templates.Version_Number > 5;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Templates.Template_Type_Code FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Templates.Version_Number > 5;

SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_Of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;

SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as num_templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) as Template_Count FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Template_Count FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) as NumberOfTemplates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) as NumberOfTemplates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Num_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To;

SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as NumTemplates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY NumTemplates DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) as NumberOfTemplates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY NumberOfTemplates DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) as Templates_count FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Templates_count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Number_of_Templates DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) as count_of_templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY count_of_templates DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Number_of_Templates DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) AS Number_of_templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Number_of_templates DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Template_Count FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Template_Count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Number_of_Templates DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Template_Count FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY COUNT(*) DESC LIMIT 1;

SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) AS Template_Count FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Template_Count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Template_Count FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Template_Count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) AS Template_Count FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Template_Count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) as NumberOfTemplates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY NumberOfTemplates DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) as Template_Count FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Template_Count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY COUNT(Template_ID) DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) AS Template_Count FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Template_Count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as TemplateCount FROM Templates GROUP BY Date_Effective_From, Date_Effective_To ORDER BY TemplateCount DESC LIMIT 1;

SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) as Template_Count FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Num_of_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(*) < 3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Template_Count FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(*) < 3;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Num_Templates FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(*) < 3;
SELECT Date_Effective_From, Date_Effective_To, COUNT(Template_ID) as Template_Count FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;

SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID)<3;
SELECT Date_Effective_From, Date_Effective_To FROM Templates GROUP BY Date_Effective_From, Date_Effective_To HAVING COUNT(Template_ID) < 3;

SELECT MIN(Version_Number) AS Smallest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) as Smallest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) as Smallest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) AS Smallest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) AS Smallest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) as Smallest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) as Smallest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) as Smallest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) as Smallest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) as Smallest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;

SELECT MIN(Version_Number) as Lowest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) AS Lowest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) as Lowest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) AS Lowest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) AS Lowest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) AS Lowest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) as Lowest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) AS Lowest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) AS Lowest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;
SELECT MIN(Version_Number) AS Lowest_Version_Number, Date_Effective_From, Date_Effective_To FROM Templates;

SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = "Data base";
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = 'Data base';
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = "Data base";
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Data base';
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Data base';
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = 'Data base';
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = 'Data base';
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = "Data base";
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = "Data base";
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = "Data base";

SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = 'Data base';
SELECT t.Date_Effective_From, t.Date_Effective_To FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID WHERE d.Document_Name = 'Data base';
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_Name = 'Data base';
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID WHERE D.Document_Name = 'Data base';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Documents ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Data base';
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Data base';
SELECT t.Date_Effective_From, t.Date_Effective_To FROM Documents d JOIN Templates t ON d.Template_ID = t.Template_ID WHERE d.Document_Name = 'Data base';
SELECT t.Date_Effective_From, t.Date_Effective_To FROM Templates t JOIN Documents d ON t.Template_ID = d.Template_ID WHERE d.Document_Name = 'Data base';
SELECT Date_Effective_From, Date_Effective_To FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Document_Name = 'Data base';
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Documents.Document_Name = 'Data base';

SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_ID, Documents.Template_ID, Documents.Document_Name FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents JOIN Templates ON Templates.Template_ID = Documents.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';

SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Templates.Template_ID FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Documents.Template_ID FROM Documents INNER JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';
SELECT Documents.Document_Name, Documents.Document_ID, Templates.Template_ID FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID WHERE Templates.Template_Type_Code = 'BK';

SELECT T.Date_Effective_From, T.Date_Effective_To, COUNT(D.Document_ID) as Number_of_Documents, RTT.Template_Type_Description FROM Templates T JOIN Ref_Template_Types RTT ON T.Template_Type_Code = RTT.Template_Type_Code JOIN Documents D ON D.Template_ID = T.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, RTT.Template_Type_Description;
SELECT T.Date_Effective_From, T.Date_Effective_To, COUNT(D.Document_ID) AS NumberOfDocuments, RTT.Template_Type_Description FROM Templates T JOIN Ref_Template_Types RTT ON T.Template_Type_Code = RTT.Template_Type_Code JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, RTT.Template_Type_Description;
SELECT T.Date_Effective_From, T.Date_Effective_To, COUNT(D.Document_ID) as Number_of_Documents, TT.Template_Type_Code FROM Ref_Template_Types TT JOIN Templates T ON T.Template_Type_Code = TT.Template_Type_Code JOIN Documents D ON D.Template_ID = T.Template_ID GROUP BY TT.Template_Type_Code, T.Date_Effective_From, T.Date_Effective_To;
SELECT T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code, COUNT(D.Document_ID) AS NumberOfDocuments FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code;
SELECT T.Date_Effective_From, T.Date_Effective_To, COUNT(D.Document_ID) as Number_of_Documents, R.Template_Type_Description FROM Templates T JOIN Ref_Template_Types R ON T.Template_Type_Code = R.Template_Type_Code JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, R.Template_Type_Description;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Ref_Template_Types.Template_Type_Description, COUNT(Documents.Document_ID) AS Number_Of_Documents FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Date_Effective_From, Templates.Date_Effective_To, Ref_Template_Types.Template_Type_Description;
SELECT T.Date_Effective_From, T.Date_Effective_To, TT.Template_Type_Description, COUNT(D.Document_ID) as NumberOfDocuments FROM Templates T JOIN Ref_Template_Types TT ON T.Template_Type_Code = TT.Template_Type_Code JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, TT.Template_Type_Description ORDER BY NumberOfDocuments DESC;
SELECT T.Date_Effective_From, T.Date_Effective_To, COUNT(D.Document_ID) as Number_of_Documents, TT.Template_Type_Description FROM Templates T JOIN Ref_Template_Types TT ON T.Template_Type_Code = TT.Template_Type_Code JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, TT.Template_Type_Description;
SELECT T.Date_Effective_From, T.Date_Effective_To, COUNT(D.Document_ID) as Document_Count, R.Template_Type_Description FROM Templates T JOIN Ref_Template_Types R ON T.Template_Type_Code = R.Template_Type_Code JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_Type_Code, T.Date_Effective_From, T.Date_Effective_To;
SELECT T.Date_Effective_From, T.Date_Effective_To, R.Template_Type_Description, COUNT(D.Document_ID) AS NumberOfDocuments FROM Templates AS T JOIN Ref_Template_Types AS R ON T.Template_Type_Code = R.Template_Type_Code JOIN Documents AS D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, R.Template_Type_Description;

SELECT T.Date_Effective_From, T.Date_Effective_To, COUNT(D.Document_ID) AS Number_of_Documents, T.Template_Type_Code FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Template_Type_Code, T.Date_Effective_From, T.Date_Effective_To;
SELECT T.Date_Effective_From, T.Date_Effective_To, R.Template_Type_Code, COUNT(D.Document_ID) as Document_Count FROM Ref_Template_Types R JOIN Templates T ON R.Template_Type_Code = T.Template_Type_Code JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY R.Template_Type_Code, T.Date_Effective_From, T.Date_Effective_To;
SELECT T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code, COUNT(D.Document_ID) as Document_Count FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code;
SELECT T.Date_Effective_From, T.Date_Effective_To, COUNT(D.Document_ID) as Document_Count, T.Template_Type_Code FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code;
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To, Ref_Template_Types.Template_Type_Code, COUNT(Documents.Document_ID) AS NumberOfDocuments FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Templates.Date_Effective_From, Templates.Date_Effective_To, Ref_Template_Types.Template_Type_Code;
SELECT T.Date_Effective_From, T.Date_Effective_To, RTT.Template_Type_Code, COUNT(D.Document_ID) AS Num_Documents FROM Ref_Template_Types RTT JOIN Templates T ON RTT.Template_Type_Code = T.Template_Type_Code JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, RTT.Template_Type_Code;
SELECT T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code, COUNT(D.Document_ID) AS Num_Documents FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code;
SELECT T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code, COUNT(D.Document_ID) as Document_Count FROM Templates T JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, T.Template_Type_Code;
SELECT T.Date_Effective_From, T.Date_Effective_To, RTT.Template_Type_Code, COUNT(D.Document_ID) as Document_Count FROM Templates T INNER JOIN Ref_Template_Types RTT ON T.Template_Type_Code = RTT.Template_Type_Code LEFT JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, RTT.Template_Type_Code;
SELECT T.Date_Effective_From, T.Date_Effective_To, R.Template_Type_Code, COUNT(D.Document_ID) as Document_Count FROM Templates T JOIN Ref_Template_Types R ON T.Template_Type_Code = R.Template_Type_Code JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To, R.Template_Type_Code;

SELECT T.Date_Effective_From, T.Date_Effective_To, COUNT(*) as Document_Count FROM Templates T INNER JOIN Documents D ON T.Template_ID = D.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To ORDER BY Document_Count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Document_Count FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Document_Count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Documents FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Number_of_Documents DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_of_Documents FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Number_of_Documents DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Number_Of_Documents FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Number_Of_Documents DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) AS Count FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as NumberOfDocuments FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY NumberOfDocuments DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Count FROM Templates JOIN Documents ON Templates.Template_ID=Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) AS Document_Count FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Document_Count DESC LIMIT 1;

SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as count FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Frequency FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Frequency DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as count FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Frequency FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Frequency DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Count FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Count DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Frequency FROM Documents JOIN Templates ON Documents.Template_ID = Templates.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Frequency DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) AS Frequency FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Frequency DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) as Frequency FROM Templates INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Frequency DESC LIMIT 1;
SELECT Date_Effective_From, Date_Effective_To, COUNT(*) AS Frequency FROM Templates JOIN Documents ON Templates.Template_ID = Documents.Template_ID GROUP BY Date_Effective_From, Date_Effective_To ORDER BY Frequency DESC LIMIT 1;
select the group that occurs most often. Unfortunately, many SQL dialects do not directly support the "most common" (or mode) operation. We'll use a subquery and LIMIT to select the most common date range: ```sql SELECT T.Date_Effective_From, T.Date_Effective_To, COUNT(*) as Count FROM Documents D JOIN Templates T ON D.Template_ID = T.Template_ID GROUP BY T.Date_Effective_From, T.Date_Effective_To ORDER BY Count DESC LIMIT 1;

SELECT Date_Effective_From, Date_Effective_To FROM Templates LEFT JOIN Documents ON Templates.Template_ID = Documents.Template_ID WHERE Documents.Document_ID IS NULL;
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID WHERE D.Document_ID IS NULL;
SELECT t.Date_Effective_From, t.Date_Effective_To FROM Templates t LEFT JOIN Documents d ON t.Template_ID = d.Template_ID WHERE d.Template_ID IS NULL;
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID WHERE D.Document_ID IS NULL;
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID WHERE D.Template_ID IS NULL;
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT DISTINCT Template_ID FROM Documents);
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);

SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T LEFT JOIN Documents D ON T.Template_ID = D.Template_ID WHERE D.Document_ID IS NULL;
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);
SELECT Date_Effective_From, Date_Effective_To FROM Templates WHERE Template_ID NOT IN (SELECT Template_ID FROM Documents);

SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;

SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;
SELECT Template_Type_Code, Template_Type_Description FROM Ref_Template_Types;

SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = "AD";
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';

SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';
SELECT Template_Type_Description FROM Ref_Template_Types WHERE Template_Type_Code = 'AD';

SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';

SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';
SELECT Template_Type_Code FROM Ref_Template_Types WHERE Template_Type_Description = 'Book';

SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code JOIN Documents ON Documents.Template_ID = Templates.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code JOIN Documents ON Documents.Template_ID = Templates.Template_ID;

SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT RTT.Template_Type_Description FROM Templates T JOIN Ref_Template_Types RTT ON T.Template_Type_Code = RTT.Template_Type_Code JOIN Documents D ON D.Template_ID = T.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code JOIN Documents ON Documents.Template_ID = Templates.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;
SELECT DISTINCT Ref_Template_Types.Template_Type_Description FROM Ref_Template_Types INNER JOIN Templates ON Ref_Template_Types.Template_Type_Code = Templates.Template_Type_Code INNER JOIN Documents ON Templates.Template_ID = Documents.Template_ID;

SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T JOIN Ref_Template_Types RTT ON T.Template_Type_Code = RTT.Template_Type_Code WHERE RTT.Template_Type_Description = 'Presentation';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = "Presentation";
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';
SELECT T.Date_Effective_From, T.Date_Effective_To FROM Templates T JOIN Ref_Template_Types RTT ON T.Template_Type_Code = RTT.Template_Type_Code WHERE RTT.Template_Type_Description = "Presentation";
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = "Presentation";
SELECT Date_Effective_From, Date_Effective_To FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';
SELECT Date_Effective_From, Date_Effective_To FROM Templates t JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code WHERE rtt.Template_Type_Description = 'Presentation';
SELECT Templates.Date_Effective_From, Templates.Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';

SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';
SELECT Date_Effective_From, Date_Effective_To FROM Templates t JOIN Ref_Template_Types rtt ON t.Template_Type_Code = rtt.Template_Type_Code WHERE rtt.Template_Type_Description = 'Presentation';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';
SELECT Date_Effective_From, Date_Effective_To FROM Templates INNER JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';
SELECT Date_Effective_From, Date_Effective_To FROM Templates JOIN Ref_Template_Types ON Templates.Template_Type_Code = Ref_Template_Types.Template_Type_Code WHERE Ref_Template_Types.Template_Type_Description = 'Presentation';

SELECT p1.first_name || ' ' || p1.last_name as winner_name, p2.first_name || ' ' || p2.last_name as loser_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id;
SELECT p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches m JOIN players p1 ON m.winner_id = p1.player_id JOIN players p2 ON m.loser_id = p2.player_id;
SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id;
SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM matches JOIN players AS p1 ON matches.winner_id = p1.player_id JOIN players AS p2 ON matches.loser_id = p2.player_id;
SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id;
SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM matches INNER JOIN players p1 ON matches.winner_id = p1.player_id INNER JOIN players p2 ON matches.loser_id = p2.player_id;
SELECT w.first_name AS winner_first_name, w.last_name AS winner_last_name, l.first_name AS loser_first_name, l.last_name AS loser_last_name FROM matches JOIN players w ON matches.winner_id = w.player_id JOIN players l ON matches.loser_id = l.player_id;
SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM matches LEFT JOIN players p1 ON matches.winner_id = p1.player_id LEFT JOIN players p2 ON matches.loser_id = p2.player_id;
SELECT w.first_name as winner_first_name, w.last_name as winner_last_name, l.first_name as loser_first_name, l.last_name as loser_last_name FROM matches JOIN players w ON matches.winner_id = w.player_id JOIN players l ON matches.loser_id = l.player_id;
SELECT p1.first_name as winner_first_name, p1.last_name as winner_last_name, p2.first_name as loser_first_name, p2.last_name as loser_last_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id;

SELECT p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches m JOIN players p1 ON m.winner_id = p1.player_id JOIN players p2 ON m.loser_id = p2.player_id;
SELECT p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id;
SELECT p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id;
SELECT p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches INNER JOIN players p1 ON matches.winner_id = p1.player_id INNER JOIN players p2 ON matches.loser_id = p2.player_id;
SELECT p1.first_name AS winner_firstname, p1.last_name AS winner_lastname, p2.first_name AS loser_firstname, p2.last_name AS loser_lastname FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id;
SELECT p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches m JOIN players p1 ON m.winner_id = p1.player_id JOIN players p2 ON m.loser_id = p2.player_id;
SELECT p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id;
SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM matches INNER JOIN players AS p1 ON matches.winner_id = p1.player_id INNER JOIN players AS p2 ON matches.loser_id = p2.player_id;
SELECT w.first_name as winner_first_name, w.last_name as winner_last_name, l.first_name as loser_first_name, l.last_name as loser_last_name FROM matches JOIN players w ON matches.winner_id = w.player_id JOIN players l ON matches.loser_id = l.player_id;
SELECT w.first_name AS winner_first_name, w.last_name AS winner_last_name, l.first_name AS loser_first_name, l.last_name AS loser_last_name FROM matches JOIN players w ON matches.winner_id = w.player_id JOIN players l ON matches.looser_id = l.player_id;

SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;

SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;
SELECT winner_age, loser_age FROM matches;

SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';

SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';
SELECT first_name, birth_date FROM players WHERE country_code = 'USA';

SELECT AVG(winner_age) as average_winner_age, AVG(loser_age) as average_loser_age FROM matches;
SELECT AVG(winner_age) AS avg_winner_age, AVG(loser_age) AS avg_loser_age FROM matches;
SELECT AVG(winner_age) AS avg_winner_age, AVG(loser_age) AS avg_loser_age FROM matches;
SELECT AVG(loser_age) AS avg_loser_age, AVG(winner_age) AS avg_winner_age FROM matches;
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches;
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches;
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches;
SELECT AVG(winner_age) as average_winner_age, AVG(loser_age) as average_loser_age FROM matches;
SELECT AVG(winner_age) as Average_Winner_Age, AVG(loser_age) as Average_Loser_Age FROM matches;
SELECT AVG(winner_age) AS Average_Winner_Age, AVG(loser_age) AS Average_Loser_Age FROM matches;

SELECT AVG(winner_age) as Average_Winner_Age, AVG(loser_age) as Average_Loser_Age FROM matches;
SELECT AVG(winner_age) as Average_Winner_Age, AVG(loser_age) as Average_Loser_Age FROM matches;
SELECT AVG(winner_age) AS average_winner_age, AVG(loser_age) AS average_loser_age FROM matches;
SELECT AVG(winner_age) AS Average_Winner_Age, AVG(loser_age) AS Average_Loser_Age FROM matches;
SELECT AVG(winner_age) as Average_Winner_Age, AVG(loser_age) as Average_Loser_Age FROM matches;
SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches;
SELECT AVG(loser_age) AS Average_Loser_Age, AVG(winner_age) AS Average_Winner_Age FROM matches;
SELECT AVG(loser_age) AS average_loser_age, AVG(winner_age) AS average_winner_age FROM matches;
SELECT AVG(winner_age) as Average_Winner_Age, AVG(loser_age) as Average_Loser_Age FROM matches;
SELECT AVG(winner_age) as Average_Winner_Age, AVG(loser_age) as Average_Loser_Age FROM matches;

SELECT matches.match_num, AVG(rankings.ranking) as average_rank FROM matches JOIN rankings ON (matches.winner_id = rankings.player_id OR matches.loser_id = rankings.player_id) GROUP BY matches.match_num;
SELECT AVG(winner_rank) as Average_Winner_Rank, AVG(loser_rank) as Average_Loser_Rank FROM matches;
SELECT AVG(rankings.ranking) as average_rank, matches.match_num FROM matches JOIN rankings ON rankings.player_id IN (matches.loser_id, matches.winner_id) GROUP BY matches.match_num;
SELECT AVG(rankings.ranking) as average_rank, matches.match_num FROM matches JOIN rankings ON matches.winner_id = rankings.player_id OR matches.loser_id = rankings.player_id GROUP BY matches.match_num;
SELECT AVG(winner_rank), AVG(loser_rank) FROM matches;
SELECT AVG(ranking) as average_rank FROM ( SELECT ranking FROM rankings WHERE player_id IN ( SELECT winner_id FROM matches UNION SELECT loser_id FROM matches ) ) as temp_table.;
SELECT AVG(tbl.rank) FROM ( SELECT matches.match_num, rankings.ranking AS 'rank' FROM matches JOIN rankings ON matches.winner_id=rankings.player_id UNION ALL SELECT matches.match_num, rankings.ranking AS 'rank' FROM matches JOIN rankings ON matches.loser_id=rankings.player_id ) AS tbl GROUP BY tbl.match_num;
SELECT AVG(rankings.ranking) as average_rank FROM matches INNER JOIN rankings ON matches.winner_id = rankings.player_id OR matches.loser_id = rankings.player_id;
SELECT AVG(rankings.ranking) as Average_Rank, matches.match_num FROM matches JOIN rankings ON (matches.winner_id = rankings.player_id OR matches.loser_id = rankings.player_id) GROUP BY matches.match_num;
SELECT AVG(rankings.ranking) as average_rank, matches.match_num FROM matches LEFT JOIN rankings ON (matches.winner_id = rankings.player_id OR matches.loser_id = rankings.player_id) GROUP BY matches.match_num;

SELECT AVG(rankings.ranking) FROM rankings WHERE rankings.player_id IN (SELECT winner_id FROM matches) OR rankings.player_id IN (SELECT loser_id FROM matches);
SELECT AVG(ranking) AS average_rank FROM ( SELECT ranking FROM rankings WHERE player_id IN ( SELECT winner_id FROM matches UNION ALL SELECT loser_id FROM matches ) ) as t;
SELECT AVG(ranking) FROM ( SELECT ranking FROM rankings WHERE player_id IN ( SELECT winner_id FROM matches UNION ALL SELECT loser_id FROM matches ) ) AS subquery;
SELECT AVG(rankings.ranking) FROM rankings WHERE rankings.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT AVG(rankings.ranking) as average_rank FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON players.player_id IN (matches.winner_id, matches.loser_id);
SELECT AVG(rankings.ranking) AS average_rank FROM rankings JOIN players ON rankings.player_id = players.player_id JOIN matches ON (matches.winner_id = players.player_id OR matches.loser_id = players.player_id);
SELECT AVG(rankings.ranking) AS average_rank FROM rankings WHERE rankings.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT AVG(rankings.ranking) FROM rankings WHERE rankings.player_id IN ( SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT AVG(rankings.ranking) FROM rankings JOIN players ON rankings.player_id = players.player_id WHERE players.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT AVG(rankings.ranking) FROM rankings WHERE rankings.player_id IN ( SELECT winner_id FROM matches UNION SELECT loser_id FROM matches );

SELECT MAX(ranking) as highest_rank FROM ( SELECT ranking FROM rankings WHERE player_id IN ( SELECT winner_id FROM matches UNION SELECT loser_id FROM matches ) ) as subquery;
SELECT MAX(rankings.ranking) as highest_rank FROM rankings JOIN players ON rankings.player_id = players.player_id JOIN matches ON players.player_id IN (matches.winner_id, matches.loser_id);
SELECT MAX(ranking) as highest_rank FROM rankings WHERE player_id IN (SELECT winner_id FROM matches) OR player_id IN (SELECT loser_id FROM matches);
SELECT MAX(ranking) AS highest_rank FROM rankings WHERE player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT MAX(ranking) AS highest_rank FROM rankings WHERE player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT MAX(ranking) AS highest_rank FROM rankings WHERE player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT MAX(ranking) AS highest_rank FROM rankings WHERE player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT MAX(ranking) as highest_rank FROM rankings WHERE player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT MAX(ranking) as Highest_Rank FROM rankings WHERE player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT MAX(rankings.ranking) AS highest_rank FROM players LEFT JOIN matches ON players.player_id = matches.winner_id OR players.player_id = matches.loser_id JOIN rankings ON players.player_id = rankings.player_id;

SELECT MIN(ranking) AS best_rank FROM rankings WHERE player_id IN ( SELECT winner_id FROM matches UNION SELECT loser_id FROM matches );
SELECT MIN(ranking) as best_rank FROM rankings WHERE player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT MIN(rankings.ranking) AS best_rank FROM rankings WHERE rankings.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT MIN(rankings.ranking) AS best_rank FROM rankings WHERE rankings.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT MIN(ranking) AS best_rank FROM rankings WHERE player_id IN ( SELECT winner_id FROM matches UNION SELECT loser_id FROM matches );
SELECT MIN(rankings.ranking) as best_rank FROM rankings WHERE rankings.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT MIN(rankings.ranking) AS best_rank FROM rankings WHERE rankings.player_id IN ( SELECT winner_id FROM matches UNION SELECT loser_id FROM matches );
SELECT MIN(rankings.ranking) FROM rankings WHERE rankings.player_id IN(SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);
SELECT MIN(rankings.ranking) as best_rank FROM rankings WHERE rankings.player_id IN ( SELECT players.player_id FROM players WHERE players.player_id IN ( SELECT matches.winner_id FROM matches UNION SELECT matches.loser_id FROM matches ) );
SELECT MIN(rankings.ranking) AS best_rank FROM rankings WHERE rankings.player_id IN (SELECT winner_id FROM matches UNION SELECT loser_id FROM matches);

SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;

SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;
SELECT COUNT(DISTINCT country_code) FROM players;

SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;

SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;
SELECT COUNT(DISTINCT loser_name) FROM matches;

SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;

SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(match_num) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;
SELECT tourney_name FROM matches GROUP BY tourney_name HAVING COUNT(*) > 10;

SELECT DISTINCT p.first_name, p.last_name FROM players p INNER JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016) GROUP BY p.first_name, p.last_name HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016) GROUP BY p.first_name, p.last_name HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT players.first_name, players.last_name FROM players JOIN matches ON players.player_id IN (matches.winner_id, matches.loser_id) WHERE matches.year IN (2013, 2016);
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m1 ON p.player_id = m1.winner_id OR p.player_id = m1.loser_id WHERE m1.year = 2013 AND EXISTS ( SELECT 1 FROM matches m2 WHERE p.player_id = m2.winner_id OR p.player_id = m2.loser_id AND m2.year = 2016 ) ```;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016) GROUP BY p.first_name, p.last_name HAVING COUNT(DISTINCT m.year) > 1;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON (p.player_id = m.winner_id OR p.player_id = m.loser_id) WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON (p.player_id = m.winner_id OR p.player_id = m.loser_id) WHERE m.year IN (2013, 2016) GROUP BY p.first_name, p.last_name HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p INNER JOIN matches m ON (p.player_id = m.winner_id OR p.player_id = m.loser_id) WHERE m.year IN (2013, 2016) GROUP BY p.first_name, p.last_name HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;

SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE (m.year = 2013 AND p.player_id IN (SELECT player_id FROM matches WHERE year = 2016)) OR (m.year = 2016 AND p.player_id IN (SELECT player_id FROM matches WHERE year = 2013));
SELECT DISTINCT p.first_name, p.last_name FROM players p WHERE p.player_id IN ( SELECT winner_id FROM matches WHERE year IN (2013, 2016) ) OR p.player_id IN ( SELECT loser_id FROM matches WHERE year IN (2013, 2016) );
SELECT DISTINCT p.first_name, p.last_name FROM players p INNER JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p INNER JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT first_name, last_name FROM players WHERE player_id IN ( SELECT winner_id FROM matches WHERE year IN (2013, 2016) UNION SELECT loser_id FROM matches WHERE year IN (2013, 2016) );
SELECT DISTINCT p.first_name, p.last_name FROM players p INNER JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016) GROUP BY p.player_id HAVING COUNT(DISTINCT m.year) = 2;
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016) GROUP BY p.first_name, p.last_name HAVING COUNT(DISTINCT m.year) = 2;
SELECT distinct players.first_name, players.last_name FROM players JOIN matches ON (players.player_id = matches.winner_id OR players.player_id = matches.loser_id) WHERE matches.year IN (2013, 2016) GROUP BY players.player_id HAVING COUNT(DISTINCT matches.year) > 1;
SELECT DISTINCT p.first_name, p.last_name FROM players p INNER JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016) GROUP BY p.first_name, p.last_name HAVING COUNT(DISTINCT m.year) = 2;

SELECT p.first_name, p.last_name FROM players p INNER JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016);
SELECT p1.first_name || ' ' || p1.last_name as winner_name, p2.first_name || ' ' || p2.last_name as loser_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id WHERE matches.year IN (2013, 2016);
SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id WHERE matches.year IN (2013, 2016);
SELECT p.first_name, p.last_name, m.year FROM players p JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016);
SELECT p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id WHERE matches.year IN (2013, 2016);
SELECT p1.first_name || ' ' || p1.last_name as winner, p2.first_name || ' ' || p2.last_name as loser FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id WHERE year IN (2013, 2016);
SELECT m.year, p1.first_name || ' ' || p1.last_name AS player_1, p2.first_name || ' ' || p2.last_name AS player_2 FROM matches AS m JOIN players AS p1 ON m.winner_id = p1.player_id JOIN players AS p2 ON m.loser_id = p2.player_id WHERE m.year IN (2013, 2016);
SELECT DISTINCT p.first_name, p.last_name FROM players p LEFT JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016);
SELECT p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches JOIN players p1 ON matches.winner_id = p1.player_id JOIN players p2 ON matches.loser_id = p2.player_id WHERE matches.year IN (2013, 2016);
SELECT DISTINCT p.first_name, p.last_name FROM players p JOIN matches m ON p.player_id = m.winner_id OR p.player_id = m.loser_id WHERE m.year IN (2013, 2016);

SELECT m.year, p1.first_name || ' ' || p1.last_name as winner_name, p2.first_name || ' ' || p2.last_name as loser_name FROM matches m JOIN players p1 ON m.winner_id = p1.player_id JOIN players p2 ON m.loser_id = p2.player_id WHERE m.year IN (2013, 2016);
SELECT m.year, p1.first_name as winner_first_name, p1.last_name as winner_last_name, p2.first_name as loser_first_name, p2.last_name as loser_last_name FROM matches m JOIN players p1 ON m.winner_id = p1.player_id JOIN players p2 ON m.loser_id = p2.player_id WHERE m.year IN (2013, 2016);
SELECT m.year, p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM matches m JOIN players p1 ON m.winner_id = p1.player_id JOIN players p2 ON m.loser_id = p2.player_id WHERE m.year IN (2013, 2016);
SELECT m.year, p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches AS m JOIN players AS p1 ON m.winner_id = p1.player_id JOIN players AS p2 ON m.loser_id = p2.player_id WHERE m.year IN (2013, 2016);
SELECT m.year, p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches m JOIN players p1 ON m.winner_id = p1.player_id JOIN players p2 ON m.loser_id = p2.player_id WHERE m.year IN (2013, 2016);
SELECT winner_name as Winner, loser_name as Loser FROM matches WHERE year IN (2013, 2016);
SELECT m.year, p1.first_name AS winner_first_name, p1.last_name AS winner_last_name, p2.first_name AS loser_first_name, p2.last_name AS loser_last_name FROM matches m JOIN players p1 ON m.winner_id = p1.player_id JOIN players p2 ON m.loser_id = p2.player_id WHERE m.year IN (2013, 2016);
SELECT m.year, w.first_name as winner_first_name, w.last_name as winner_last_name, l.first_name as loser_first_name, l.last_name as loser_last_name FROM matches m JOIN players w ON m.winner_id = w.player_id JOIN players l ON m.loser_id = l.player_id WHERE m.year IN (2013, 2016);
SELECT m.year, p1.first_name || ' ' || p1.last_name AS winner_name, p2.first_name || ' ' || p2.last_name AS loser_name FROM matches m JOIN players p1 ON m.winner_id = p1.player_id JOIN players p2 ON m.loser_id = p2.player_id WHERE m.year IN (2013, 2016);
SELECT m.year, p1.first_name||' '||p1.last_name AS winner_name, p2.first_name||' '||p2.last_name AS loser_name FROM matches m JOIN players p1 ON m.winner_id = p1.player_id JOIN players p2 ON m.loser_id = p2.player_id WHERE m.year IN (2013, 2016);

SELECT DISTINCT p.country_code, p.first_name FROM players p JOIN matches m on p.player_id = m.winner_id WHERE m.tourney_name in ('WTA Championships', 'Australian Open') GROUP BY p.player_id HAVING COUNT(DISTINCT m.tourney_name) = 2;
SELECT DISTINCT players.first_name, players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY matches.winner_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY p.first_name, p.country_code HAVING COUNT(DISTINCT m.tourney_name) = 2;
SELECT DISTINCT players.country_code, players.first_name FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT players.first_name, players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT players.first_name, players.country_code FROM players INNER JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT players.first_name, players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT players.country_code, players.first_name FROM players INNER JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;

SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY p.player_id HAVING COUNT(DISTINCT m.tourney_name) = 2;
SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY p.player_id HAVING COUNT(DISTINCT m.tourney_name) = 2;
SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE (m.tourney_name = 'WTA Championships' AND p.player_id IN (SELECT p.player_id FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name = 'Australian Open'));
SELECT DISTINCT players.first_name, players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY p.player_id HAVING COUNT(DISTINCT m.tourney_name) = 2;
SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m ON p.player_id = m.winner_id WHERE m.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY p.player_id HAVING COUNT(DISTINCT m.tourney_name) = 2;
SELECT DISTINCT p.first_name, p.country_code FROM players p JOIN matches m1 ON p.player_id = m1.winner_id JOIN matches m2 ON p.player_id = m2.winner_id WHERE m1.tourney_name = 'WTA Championships' AND m2.tourney_name = 'Australian Open';
SELECT DISTINCT players.first_name, players.country_code FROM players JOIN matches ON players.player_id = matches.winner_id WHERE (matches.tourney_name = 'WTA Championships' OR matches.tourney_name = 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT players.first_name, players.country_code FROM players INNER JOIN matches ON players.player_id = matches.winner_id WHERE matches.tourney_name IN ('WTA Championships', 'Australian Open') GROUP BY players.player_id HAVING COUNT(DISTINCT matches.tourney_name) = 2;
SELECT DISTINCT players.first_name, players.country_code FROM players JOIN matches ON matches.winner_id = players.player_id WHERE (matches.tourney_name = 'WTA Championships' AND matches.winner_id = players.player_id) OR (matches.tourney_name = 'Australian Open' AND matches.winner_id = players.player_id);

SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1;
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);

SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players ORDER BY birth_date ASC LIMIT 1;
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);
SELECT first_name, country_code FROM players WHERE birth_date = (SELECT MIN(birth_date) FROM players);

SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;

SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players ORDER BY birth_date ASC;

SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;

SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date ASC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date DESC;
SELECT first_name, last_name, birth_date FROM players WHERE hand = 'L' ORDER BY birth_date DESC;
SELECT first_name, last_name FROM players WHERE hand = 'L' ORDER BY birth_date DESC;

SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(rankings.tours) DESC LIMIT 1;
SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id ORDER BY COUNT(r.tours) DESC LIMIT 1;
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id, players.first_name, players.country_code ORDER BY COUNT(rankings.tours) DESC LIMIT 1;
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(rankings.tours) DESC LIMIT 1;
SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id, p.first_name, p.country_code ORDER BY COUNT(r.tours) DESC LIMIT 1;
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(rankings.tours) DESC LIMIT 1;
SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name, p.country_code ORDER BY COUNT(r.tours) DESC LIMIT 1;
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(rankings.tours) DESC LIMIT 1;
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name, players.country_code ORDER BY COUNT(rankings.tours) DESC LIMIT 1;
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(rankings.tours) DESC LIMIT 1;

SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.tours DESC LIMIT 1;
SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id ORDER BY SUM(r.tours) DESC LIMIT 1;
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.tours DESC LIMIT 1;
SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id, p.first_name, p.country_code ORDER BY COUNT(r.tours) DESC LIMIT 1;
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(rankings.tours) DESC LIMIT 1;
SELECT first_name, country_code FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY tours DESC LIMIT 1;
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.tours DESC LIMIT 1;
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.tours = (SELECT MAX(rankings.tours) FROM rankings);
SELECT players.first_name, players.country_code FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY SUM(rankings.tours) DESC LIMIT 1;
SELECT p.first_name, p.country_code FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE r.tours = (SELECT MAX(tours) FROM rankings);

SELECT year, COUNT(*) as num_matches FROM matches GROUP BY year ORDER BY num_matches DESC LIMIT 1;
SELECT year, COUNT(*) as num_matches FROM matches GROUP BY year ORDER BY num_matches DESC LIMIT 1;
SELECT year, COUNT(*) as num_matches FROM matches GROUP BY year ORDER BY num_matches DESC LIMIT 1;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year, COUNT(*) as number_of_matches FROM matches GROUP BY year ORDER BY number_of_matches DESC LIMIT 1;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year, COUNT(*) as num_matches FROM matches GROUP BY year ORDER BY num_matches DESC LIMIT 1;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year, COUNT(*) as number_of_matches FROM matches GROUP BY year ORDER BY number_of_matches DESC LIMIT 1;

SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year, COUNT(*) AS num_matches FROM matches GROUP BY year ORDER BY num_matches DESC LIMIT 1;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year ORDER BY match_count DESC LIMIT 1;
SELECT year, COUNT(*) as number_of_matches FROM matches GROUP BY year ORDER BY number_of_matches DESC LIMIT 1;

SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON r.player_id = p.player_id GROUP BY p.player_id ORDER BY COUNT(*) DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE p.player_id = ( SELECT winner_id FROM ( SELECT winner_id, COUNT(*) as count FROM matches GROUP BY winner_id ORDER BY count DESC LIMIT 1 ) );
SELECT players.first_name, players.last_name, rankings.ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON players.player_id = matches.winner_id GROUP BY players.player_id, players.first_name, players.last_name, rankings.ranking_points ORDER BY COUNT(matches.winner_id) DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON r.player_id = p.player_id JOIN ( SELECT winner_id, COUNT(*) as win_times FROM matches GROUP BY winner_id ORDER BY win_times DESC LIMIT 1 ) m ON m.winner_id = p.player_id;
SELECT players.first_name, players.last_name, rankings.ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE players.player_id = ( SELECT winner_id FROM ( SELECT winner_id, COUNT(*) as match_win_count FROM matches GROUP BY winner_id ORDER BY match_win_count DESC LIMIT 1 ) );
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id JOIN ( SELECT winner_id, COUNT(*) as wins FROM matches GROUP BY winner_id ORDER BY wins DESC LIMIT 1 ) m ON p.player_id = m.winner_id;
SELECT P.first_name, P.last_name, R.ranking_points FROM players P JOIN rankings R ON P.player_id = R.player_id JOIN ( SELECT winner_id, COUNT(*) as Winning_Count FROM matches GROUP BY winner_id ) M ON P.player_id = M.winner_id ORDER BY M.Winning_Count DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE p.player_id = ( SELECT winner_id FROM matches GROUP BY winner_id ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r on p.player_id = r.player_id JOIN ( SELECT winner_id, count(*) as win_count FROM matches GROUP BY winner_id ORDER BY win_count DESC LIMIT 1 ) m on p.player_id = m.winner_id;
SELECT players.first_name, players.last_name, rankings.ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id WHERE players.player_id = ( SELECT winner_id FROM matches GROUP BY winner_id ORDER BY COUNT(*) DESC LIMIT 1 );

SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id, r.ranking_points ORDER BY COUNT(*) DESC LIMIT 1;
SELECT players.first_name, players.last_name, rankings.ranking_points FROM players INNER JOIN matches ON players.player_id = matches.winner_id INNER JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(matches.winner_id) DESC, rankings.ranking_points DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id ORDER BY COUNT(m.winner_id) DESC, r.ranking_points DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE p.player_id = ( SELECT winner_id FROM matches GROUP BY winner_id ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id ORDER BY COUNT(*) DESC, r.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name, rankings.ranking_points FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id ORDER BY COUNT(matches.winner_id) DESC, rankings.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name, rankings.ranking_points FROM players INNER JOIN matches ON players.player_id = matches.winner_id INNER JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name, players.last_name, rankings.ranking_points ORDER BY COUNT(matches.winner_id) DESC, rankings.ranking_points DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id WHERE p.player_id = ( SELECT winner_id FROM matches GROUP BY winner_id ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT p.first_name, p.last_name, r.ranking_points FROM players p INNER JOIN matches m ON p.player_id = m.winner_id INNER JOIN rankings r ON p.player_id = r.player_id GROUP BY p.player_id ORDER BY count(m.winner_id) DESC, r.ranking_points DESC LIMIT 1;
SELECT p.first_name, p.last_name, r.ranking_points FROM players p JOIN rankings r ON p.player_id = r.player_id JOIN (SELECT winner_id, COUNT(*) as Wins FROM matches GROUP BY winner_id ORDER BY Wins DESC LIMIT 1) m ON p.player_id = m.winner_id;

SELECT winner_name, loser_name FROM matches JOIN players ON matches.winner_id = players.player_id JOIN rankings ON players.player_id = rankings.player_id WHERE tourney_name = 'Australian Open' AND winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open');
SELECT m.winner_name, m.loser_name FROM matches m JOIN players p ON m.winner_id = p.player_id JOIN rankings r ON r.player_id = p.player_id WHERE m.tourney_name = 'Australian Open' AND r.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND m.tourney_date = r.ranking_date;
SELECT m.winner_name, m.loser_name FROM matches m JOIN rankings r ON m.winner_id = r.player_id JOIN players p ON r.player_id = p.player_id WHERE m.tourney_name = 'Australian Open' AND r.ranking_points = (SELECT MAX(ranking_points) FROM rankings) GROUP BY m.winner_name, m.loser_name;
SELECT winner_name, loser_name FROM matches WHERE tourney_name = 'Australian Open' AND winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches);
SELECT m.winner_name, m.loser_name FROM matches m JOIN rankings r ON m.winner_id = r.player_id WHERE m.tourney_name = 'Australian Open' AND r.ranking_points = (SELECT MAX(ranking_points) FROM rankings) ORDER BY m.winner_name;
SELECT m.winner_name, m.loser_name FROM matches m JOIN rankings r ON m.winner_id = r.player_id WHERE r.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND m.tourney_name = 'Australian Open';
SELECT winner_name, loser_name FROM matches JOIN players winner ON matches.winner_id = winner.player_id JOIN players loser ON matches.loser_id = loser.player_id JOIN rankings winner_rankings ON winner.player_id = winner_rankings.player_id WHERE matches.tourney_name = 'Australian Open' AND winner_rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings);
SELECT m.winner_name, m.loser_name FROM matches m JOIN players p ON m.winner_id = p.player_id JOIN rankings r ON r.player_id = p.player_id WHERE m.tourney_name = 'Australian Open' AND r.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND r.player_id = m.winner_id;
SELECT winner_name, loser_name FROM matches WHERE winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches) AND tourney_name = 'Australian Open';
SELECT m.winner_name, m.loser_name FROM matches m JOIN rankings r ON m.winner_id = r.player_id JOIN players p ON m.winner_id = p.player_id WHERE m.tourney_name = 'Australian Open' AND r.ranking_points = (SELECT MAX(ranking_points) FROM rankings) AND m.winner_id = p.player_id;

SELECT m.winner_name, m.loser_name FROM matches m JOIN rankings r ON m.winner_id = r.player_id WHERE m.tourney_name = 'Australian Open' AND r.ranking_points = ( SELECT MAX(ranking_points) FROM rankings WHERE player_id IN ( SELECT winner_id FROM matches WHERE tourney_name = 'Australian Open' ) );
SELECT DISTINCT matches.winner_name, matches.loser_name FROM matches JOIN rankings ON matches.winner_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' AND rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings);
SELECT winners.first_name AS winner_first_name, winners.last_name AS winner_last_name, losers.first_name AS loser_first_name, losers.last_name AS loser_last_name FROM matches INNER JOIN players AS winners ON matches.winner_id = winners.player_id INNER JOIN players AS losers ON matches.loser_id = losers.player_id WHERE matches.tourney_name = 'Australian Open' AND matches.winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open');
SELECT m.winner_name, m.loser_name FROM matches m JOIN rankings r ON m.winner_id = r.player_id WHERE m.tourney_name = 'Australian Open' AND r.ranking_points = ( SELECT MAX(ranking_points) FROM rankings WHERE player_id = m.winner_id );
SELECT winner_name, loser_name FROM matches WHERE winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches WHERE tourney_name = 'Australian Open') AND tourney_name = 'Australian Open';
SELECT m.winner_name, m.loser_name FROM matches m JOIN rankings r ON m.winner_id = r.player_id WHERE m.tourney_name = 'Australian Open' AND r.ranking_points = (SELECT MAX(ranking_points) FROM rankings WHERE player_id = m.winner_id);
SELECT winner_name, loser_name FROM matches WHERE winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches) AND tourney_name = 'Australian Open';
SELECT matches.winner_name, matches.loser_name FROM matches JOIN rankings ON matches.winner_id = rankings.player_id WHERE matches.tourney_name = 'Australian Open' ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT m.winner_name, m.loser_name FROM matches m JOIN rankings r ON m.winner_id = r.player_id WHERE m.tourney_name = 'Australian Open' AND r.ranking_points = (SELECT MAX(ranking_points) FROM rankings) GROUP BY m.winner_name, m.loser_name;
SELECT winner_name, loser_name FROM matches WHERE winner_rank_points = (SELECT MAX(winner_rank_points) FROM matches) AND tourney_name = 'Australian Open';

SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT matches.minutes, wins.first_name AS winner_first_name, wins.last_name AS winner_last_name, loses.first_name AS loser_first_name, loses.last_name AS loser_last_name FROM matches INNER JOIN players wins ON matches.winner_id = wins.player_id INNER JOIN players loses ON matches.loser_id = loses.player_id WHERE matches.minutes = ( SELECT MAX(minutes) FROM matches );
SELECT P1.first_name AS winner_first_name, P1.last_name AS winner_last_name, P2.first_name AS loser_first_name, P2.last_name AS loser_last_name FROM matches JOIN players P1 ON matches.winner_id = P1.player_id JOIN players P2 ON matches.loser_id = P2.player_id WHERE matches.minutes = (SELECT MAX(minutes) FROM matches);
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT winners.first_name AS winner_first_name, winners.last_name AS winner_last_name, losers.first_name AS loser_first_name, losers.last_name AS loser_last_name FROM matches JOIN players winners ON matches.winner_id = winners.player_id JOIN players losers ON matches.loser_id = losers.player_id WHERE matches.minutes = (SELECT MAX(minutes) FROM matches);
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);
SELECT winner_name, loser_name FROM matches WHERE minutes = (SELECT MAX(minutes) FROM matches);

SELECT winner_name, loser_name, MAX(minutes) as longest_match FROM matches GROUP BY winner_name, loser_name ORDER BY longest_match DESC;
SELECT m.winner_name, m.loser_name, m.minutes FROM matches m WHERE m.minutes = (SELECT MAX(minutes) FROM matches);
SELECT winner_name, loser_name, MAX(minutes) AS longest_match FROM matches GROUP BY winner_name, loser_name ORDER BY longest_match DESC;
SELECT winner_name, loser_name, MAX(minutes) as longest_match FROM matches GROUP BY winner_name, loser_name;
SELECT winner_name, loser_name, MAX(minutes) AS longest_match FROM matches GROUP BY winner_name, loser_name;
SELECT winner_name, loser_name, MAX(minutes) as longest_match FROM matches GROUP BY winner_name, loser_name ORDER BY longest_match DESC;
SELECT winner_name, loser_name, MAX(minutes) as longest_match FROM matches GROUP BY winner_name, loser_name ORDER BY longest_match DESC;
SELECT winner_name, loser_name, MAX(minutes) as longest_match FROM matches GROUP BY winner_name, loser_name ORDER BY longest_match DESC;
SELECT m.winner_name, m.loser_name, MAX(m.minutes) as longest_match FROM matches m GROUP BY m.winner_name, m.loser_name ORDER BY longest_match DESC;
SELECT winner_name, loser_name, MAX(minutes) as Longest_Match FROM matches GROUP BY winner_name, loser_name;

SELECT players.first_name, AVG(rankings.ranking) as average_ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id, players.first_name;
SELECT AVG(rankings.ranking) AS average_ranking, players.first_name FROM rankings INNER JOIN players ON rankings.player_id = players.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) AS average_ranking FROM players INNER JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) as Avg_Ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT AVG(rankings.ranking) as average_ranking, players.first_name FROM rankings JOIN players ON rankings.player_id = players.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) as average_ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT AVG(rankings.ranking) as average_ranking, players.first_name FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) AS avg_ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) AS avg_ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;

SELECT players.first_name, AVG(rankings.ranking) as average_ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) AS average_ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) as average_ranking FROM players INNER JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) AS average_ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) AS average_ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) AS average_ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) as average_ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) AS average_ranking FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name;
SELECT players.first_name, AVG(rankings.ranking) as average_ranking FROM players JOIN rankings on players.player_id = rankings.player_id GROUP BY players.first_name;

SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id, players.first_name, players.last_name;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) AS total_ranking_points FROM players INNER JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id, players.first_name, players.last_name;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id, players.first_name, players.last_name;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as total_ranking_points FROM players LEFT JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id, players.first_name, players.last_name;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id, players.first_name, players.last_name;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as Total_Ranking_Points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as total_ranking_points FROM players INNER JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id;

SELECT p.first_name, p.last_name, SUM(r.ranking_points) as total_ranking_points FROM players p INNER JOIN rankings r ON p.player_id = r.player_id GROUP BY p.first_name, p.last_name;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id, players.first_name, players.last_name;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as Total_Ranking_Points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) AS total_ranking_points FROM players LEFT JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as total_ranking_points FROM players LEFT JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) AS total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) as total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) AS total_ranking_points FROM players JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.first_name, players.last_name;
SELECT players.first_name, players.last_name, SUM(rankings.ranking_points) AS total_ranking_points FROM players INNER JOIN rankings ON players.player_id = rankings.player_id GROUP BY players.player_id;

SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) as number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) as num_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) AS number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) AS number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) as number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) as number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) AS number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) as number_of_players FROM players GROUP BY country_code;

SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) as num_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) as number_of_players FROM players GROUP BY country_code;
SELECT country_code, COUNT(*) as player_count FROM players GROUP BY country_code;
SELECT country_code, COUNT(player_id) FROM players GROUP BY country_code;

SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(*) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;

SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;
SELECT country_code FROM players GROUP BY country_code ORDER BY COUNT(player_id) DESC LIMIT 1;

SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;

SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;
SELECT country_code FROM players GROUP BY country_code HAVING COUNT(player_id) > 50;

SELECT ranking_date, SUM(tours) FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date;

SELECT ranking_date, SUM(tours) as total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) AS total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as Total_Tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as total_tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as Total_Tours FROM rankings GROUP BY ranking_date;
SELECT ranking_date, SUM(tours) as total_tours FROM rankings GROUP BY ranking_date;

SELECT year, COUNT(*) as number_of_matches FROM matches GROUP BY year;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year;
SELECT year, COUNT(*) as number_of_matches FROM matches GROUP BY year;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year;
SELECT year, COUNT(*) as number_of_matches FROM matches GROUP BY year;
SELECT year, COUNT(*) as num_matches FROM matches GROUP BY year;
SELECT year, COUNT(*) as number_of_matches FROM matches GROUP BY year;
SELECT year, COUNT(*) as number_of_matches FROM matches GROUP BY year;
SELECT year, COUNT(*) AS num_matches FROM matches GROUP BY year;
SELECT year, COUNT(*) as number_of_matches FROM matches GROUP BY year;

SELECT year, COUNT(*) as num_matches FROM matches GROUP BY year;
SELECT year, COUNT(*) as matches_played FROM matches GROUP BY year;
SELECT year, COUNT(*) as matches_played FROM matches GROUP BY year;
SELECT year, COUNT(*) as number_of_matches FROM matches GROUP BY year;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year;
SELECT year, COUNT(*) as num_matches FROM matches GROUP BY year;
SELECT year, COUNT(*) as match_count FROM matches GROUP BY year;
SELECT year, COUNT(*) as total_matches FROM matches GROUP BY year;
SELECT year, COUNT(*) as matches_played FROM matches GROUP BY year;
SELECT year, COUNT(*) as number_of_matches FROM matches GROUP BY year;

SELECT players.first_name, players.last_name, matches.winner_rank FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT p.first_name, p.last_name, r.ranking FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id ORDER BY m.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, matches.winner_rank FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT p.first_name, p.last_name, m.winner_rank FROM players p JOIN matches m ON p.player_id = m.winner_id ORDER BY m.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, matches.winner_rank FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_age LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN rankings ON players.player_id = rankings.player_id JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players INNER JOIN rankings ON players.player_id = rankings.player_id INNER JOIN matches ON players.player_id = matches.winner_id ORDER BY winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, matches.winner_rank FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_age ASC LIMIT 3;

SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id=matches.winner_id JOIN rankings ON players.player_id=rankings.player_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON matches.winner_id = players.player_id JOIN rankings ON rankings.player_id = players.player_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, matches.winner_rank FROM players JOIN matches ON players.player_id = matches.winner_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM matches JOIN players ON matches.winner_id = players.player_id JOIN rankings ON rankings.player_id = players.player_id ORDER BY matches.winner_age LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM matches JOIN players ON matches.winner_id = players.player_id JOIN rankings ON rankings.player_id = players.player_id ORDER BY matches.winner_age ASC LIMIT 3;
SELECT p.first_name, p.last_name, m.winner_rank FROM players p, matches m WHERE p.player_id = m.winner_id ORDER BY m.winner_age LIMIT 3;
SELECT players.first_name, players.last_name, rankings.ranking FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY matches.winner_age ASC LIMIT 3;

SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L' JOIN players ON matches.winner_id = players.player_id;
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name ='WTA Championships' AND winner_id IN ( SELECT player_id FROM players WHERE hand = 'L' );
SELECT COUNT(DISTINCT winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE tourney_name = 'WTA Championships' AND players.hand = 'L';
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(DISTINCT matches.winner_id) FROM matches INNER JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'WTA Championships' AND players.hand = 'L';
SELECT COUNT(DISTINCT winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE tourney_name = 'WTA Championships' AND hand = 'L';
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L';
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L' AND winner_id IN (SELECT player_id FROM players);
SELECT COUNT(DISTINCT winner_id) FROM matches WHERE tourney_name = 'WTA Championships' AND winner_hand = 'L';

SELECT COUNT(DISTINCT matches.winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'WTA Championships' AND players.hand = 'L';
SELECT COUNT(*) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'WTA Championships' AND players.hand = 'L';
SELECT COUNT(*) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE matches.tourney_name = 'WTA Championships' AND players.hand = 'L';
SELECT COUNT(*) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE players.hand = 'L' AND matches.tourney_name = 'WTA Championships';
SELECT COUNT(DISTINCT winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(*) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE players.hand = 'Left' AND matches.tourney_name = 'WTA Championships';
SELECT COUNT(*) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE players.hand ='L' AND matches.tourney_name = 'WTA Championships';
SELECT COUNT(DISTINCT winner_id) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE winner_hand = 'L' AND tourney_name = 'WTA Championships';
SELECT COUNT(*) FROM matches JOIN players ON matches.winner_id = players.player_id WHERE players.hand = 'Left' AND matches.tourney_name = 'WTA Championships';
SELECT COUNT(*) FROM matches INNER JOIN players ON matches.winner_id = players.player_id WHERE players.hand = 'Left' AND matches.tourney_name = 'WTA Championships';

SELECT players.first_name, players.last_name, players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings);
SELECT p.first_name, p.last_name, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id WHERE r.ranking_points = ( SELECT MAX(ranking_points) FROM rankings );
SELECT p.first_name, p.last_name, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id WHERE r.ranking_points = (SELECT MAX(ranking_points) FROM rankings);
SELECT p.first_name, p.last_name, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id JOIN rankings r ON p.player_id = r.player_id WHERE r.ranking_points = (SELECT MAX(ranking_points) FROM rankings);
SELECT players.first_name, players.last_name, players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name, players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = (SELECT MAX(ranking_points) FROM rankings);
SELECT players.first_name, players.last_name, players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT p.first_name, p.last_name, p.birth_date FROM players p INNER JOIN matches m ON p.player_id = m.winner_id INNER JOIN rankings r ON r.player_id = p.player_id WHERE r.ranking_points = (SELECT MAX(ranking_points) FROM rankings);
SELECT players.first_name, players.last_name, players.birth_date FROM players INNER JOIN matches ON players.player_id = matches.winner_id INNER JOIN rankings ON players.player_id = rankings.player_id ORDER BY rankings.ranking_points DESC LIMIT 1;
SELECT players.first_name, players.last_name, players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id JOIN rankings ON players.player_id = rankings.player_id WHERE rankings.ranking_points = ( SELECT MAX(ranking_points) FROM rankings);

SELECT players.first_name, players.last_name, players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY matches.winner_id ORDER BY SUM(matches.winner_rank_points) DESC LIMIT 1;
SELECT p.first_name, p.last_name, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id GROUP BY p.player_id ORDER BY SUM(m.winner_rank_points) DESC LIMIT 1;
SELECT players.first_name, players.last_name, players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY players.player_id ORDER BY MAX(matches.winner_rank_points) DESC LIMIT 1;
SELECT p.first_name, p.last_name, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id GROUP BY p.player_id ORDER BY MAX(m.winner_rank_points) DESC LIMIT 1;
SELECT p.first_name, p.last_name, p.birth_date FROM players AS p JOIN matches AS m ON p.player_id = m.winner_id ORDER BY m.winner_rank_points DESC LIMIT 1;
SELECT first_name, last_name, birth_date FROM players WHERE player_id = ( SELECT winner_id FROM matches GROUP BY winner_id ORDER BY SUM(winner_rank_points) DESC LIMIT 1 );
SELECT p.first_name, p.last_name, p.birth_date FROM players p JOIN matches m ON p.player_id = m.winner_id GROUP BY p.player_id ORDER BY MAX(m.winner_rank_points) DESC LIMIT 1;
SELECT players.first_name, players.last_name, players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY players.player_id, players.first_name, players.last_name, players.birth_date ORDER BY SUM(matches.winner_rank_points) DESC LIMIT 1;
SELECT p.first_name, p.last_name, p.birth_date FROM players p JOIN matches m on p.player_id = m.winner_id WHERE m.winner_rank_points = (SELECT max(winner_rank_points) FROM matches);
SELECT players.first_name, players.last_name, players.birth_date FROM players JOIN matches ON players.player_id = matches.winner_id GROUP BY matches.winner_id ORDER BY MAX(matches.winner_rank_points) DESC LIMIT 1;

SELECT hand, COUNT(*) FROM players GROUP BY hand;
SELECT hand, COUNT(player_id) FROM players GROUP BY hand;
SELECT hand, COUNT(*) as number_of_players FROM players GROUP BY hand;
SELECT hand, COUNT(*) as number_of_players FROM players GROUP BY hand;
SELECT hand, COUNT(*) FROM players GROUP BY hand;
SELECT hand, COUNT(*) as number_of_players FROM players GROUP BY hand;
SELECT hand, COUNT(*) as number_of_players FROM players GROUP BY hand;
SELECT hand, COUNT(*) FROM players GROUP BY hand;
SELECT hand, COUNT(*) as num_players FROM players GROUP BY hand;
SELECT hand, COUNT(*) FROM players GROUP BY hand;

SELECT hand, COUNT(*) as player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) as player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) FROM players GROUP BY hand;
SELECT hand, COUNT(*) FROM players GROUP BY hand;
SELECT hand, COUNT(*) as player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) FROM players GROUP BY hand;
SELECT hand, COUNT(*) FROM players GROUP BY hand;
SELECT hand, COUNT(player_id) FROM players GROUP BY hand;
SELECT hand, COUNT(*) as player_count FROM players GROUP BY hand;
SELECT hand, COUNT(*) FROM players GROUP BY hand;

SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;

SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;
SELECT line_1, line_2, line_3 FROM Addresses;

SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'yes';
SELECT COUNT(*) FROM show WHERE If_first_show = TRUE;

SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = true;
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes';
SELECT COUNT(*) FROM show WHERE If_first_show = 'yes';

SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;

SELECT Name FROM conductor ORDER BY birthday;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday;
SELECT Name FROM conductor ORDER BY birthday;
SELECT Name FROM conductor ORDER BY birthday ASC;

SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';

SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American' ```;
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';
SELECT Name FROM conductor WHERE Nationality = 'American';

SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;

SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Record_Company, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;

SELECT AVG(Attendance) FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) as Average_Attendance FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) AS Average_Attendance FROM show WHERE If_first_show = 'no';
SELECT AVG(Attendance) FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) AS Average_Attendance FROM show WHERE If_first_show = FALSE;
SELECT AVG(Attendance) FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) AS Average_Attendance FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) FROM show WHERE If_first_show = 'No';

SELECT AVG(Attendance) as Average_Attendance FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) as Average_Attendance FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) AS Average_Attendance FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) as Average_Attendance FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) AS Average_Attendance FROM show WHERE If_first_show = 'No';
SELECT AVG(Attendance) FROM show WHERE If_first_show = False;
SELECT AVG(Attendance) as Average_Attendance FROM show WHERE If_first_show = 'No';

SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != "Live final";
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != "Live final";
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share) as Maximum_Share, MIN(Share) as Minimum_Share FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != "Live final";
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';

SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != "Live final";
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != "Live final";
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';
SELECT MAX(Share), MIN(Share) FROM performance WHERE Type != 'Live final';

SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;

SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;
SELECT COUNT(DISTINCT Nationality) FROM conductor;

SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;

SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;
SELECT Name FROM conductor ORDER BY birthday ASC;

SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);

SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MIN(Year_of_Work) FROM conductor);
SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1;
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);
SELECT Name FROM conductor WHERE Year_of_Work = (SELECT MAX(Year_of_Work) FROM conductor);

SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor INNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor INNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;

SELECT conductor.Name, orchestra.Orchestra FROM conductor INNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;
SELECT conductor.Name, orchestra.Orchestra FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID;

SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1;
SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name HAVING COUNT(DISTINCT o.Orchestra_ID) > 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1;
SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name HAVING COUNT(DISTINCT o.Orchestra_ID) > 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1;
SELECT c.Name FROM conductor c WHERE ( SELECT COUNT(*) FROM orchestra o WHERE c.Conductor_ID = o.Conductor_ID ) > 1;
SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name HAVING COUNT(DISTINCT o.Orchestra_ID) > 1;
SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name HAVING COUNT(DISTINCT o.Orchestra_ID) > 1;
SELECT c.Name FROM conductor AS c JOIN orchestra AS o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name HAVING COUNT(DISTINCT o.Orchestra_ID) > 1;

SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING COUNT(orchestra.Orchestra_ID) > 1;
SELECT c.Name FROM conductor AS c JOIN orchestra AS o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name HAVING COUNT(DISTINCT o.Orchestra_ID) > 1;
SELECT Name FROM conductor WHERE Conductor_ID IN ( SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(DISTINCT Orchestra_ID) > 1 );
SELECT conductor.Name FROM conductor INNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID, conductor.Name HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1;
SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name HAVING COUNT(DISTINCT o.Orchestra_ID) > 1;
SELECT conductor.Name FROM conductor INNER JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1;
SELECT Name FROM conductor WHERE Conductor_ID IN ( SELECT Conductor_ID FROM orchestra GROUP BY Conductor_ID HAVING COUNT(DISTINCT Orchestra_ID) > 1 );
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name HAVING COUNT(DISTINCT orchestra.Orchestra_ID) > 1;

SELECT C.Name FROM conductor C JOIN orchestra O ON C.Conductor_ID = O.Conductor_ID GROUP BY C.Conductor_ID, C.Name ORDER BY COUNT(O.Orchestra_ID) DESC LIMIT 1;
SELECT c.Name FROM conductor AS c JOIN orchestra AS o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name ORDER BY COUNT(o.Orchestra_ID) DESC LIMIT 1;
SELECT c.Name FROM conductor AS c JOIN orchestra AS o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name ORDER BY COUNT(DISTINCT o.Orchestra_ID) DESC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID, conductor.Name ORDER BY COUNT(orchestra.Orchestra_ID) DESC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY COUNT(DISTINCT orchestra.Orchestra_ID) DESC LIMIT 1;
SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID=o.Conductor_ID GROUP BY c.Name ORDER BY COUNT(DISTINCT o.Orchestra_ID) DESC LIMIT 1;
SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name ORDER BY COUNT(DISTINCT o.Orchestra_ID) DESC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY COUNT(DISTINCT orchestra.Orchestra_ID) DESC LIMIT 1;
SELECT c.Name FROM conductor AS c JOIN orchestra AS o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name ORDER BY COUNT(DISTINCT o.Orchestra_ID) DESC LIMIT 1;
SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name ORDER BY COUNT(DISTINCT o.Orchestra_ID) DESC LIMIT 1;

SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID GROUP BY c.Name ORDER BY COUNT(DISTINCT o.Orchestra_ID) DESC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY COUNT(DISTINCT orchestra.Orchestra_ID) DESC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY COUNT(orchestra.Orchestra) DESC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra on conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY COUNT(DISTINCT orchestra.Orchestra_ID) DESC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY COUNT(DISTINCT orchestra.Orchestra_ID) DESC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY COUNT(DISTINCT orchestra.Orchestra_ID) DESC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID, conductor.Name ORDER BY COUNT(orchestra.Orchestra_ID) DESC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra on conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID, conductor.Name ORDER BY COUNT(distinct orchestra.Orchestra_ID) DESC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Name ORDER BY COUNT(orchestra.Orchestra_ID) DESC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID GROUP BY conductor.Conductor_ID ORDER BY COUNT(DISTINCT orchestra.Orchestra_ID) DESC LIMIT 1;

SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID ORDER BY orchestra.Year_of_Founded ASC LIMIT 1;
SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID ORDER BY o.Year_of_Founded LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID ORDER BY orchestra.Year_of_Founded LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID ORDER BY orchestra.Year_of_Founded ASC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID ORDER BY orchestra.Year_of_Founded ASC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON orchestra.Conductor_ID = conductor.Conductor_ID ORDER BY orchestra.Year_of_Founded ASC LIMIT 1;
SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID ORDER BY o.Year_of_Founded ASC LIMIT 1;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded = (SELECT MIN(Year_of_Founded) FROM orchestra);
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID ORDER BY orchestra.Year_of_Founded ASC LIMIT 1;
SELECT c.Name FROM conductor c JOIN orchestra o ON c.Conductor_ID = o.Conductor_ID ORDER BY o.Year_of_Founded ASC LIMIT 1;

SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded = (SELECT MAX(Year_of_Founded) FROM orchestra);
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded = (SELECT MAX(Year_of_Founded) FROM orchestra);
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded = (SELECT MAX(Year_of_Founded) FROM orchestra);
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded = (SELECT MAX(Year_of_Founded) FROM orchestra);
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded = (SELECT MAX(Year_of_Founded) FROM orchestra);
SELECT DISTINCT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded = (SELECT MAX(Year_of_Founded) FROM orchestra);
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID ORDER BY orchestra.Year_of_Founded DESC;
SELECT DISTINCT c.Name FROM conductor AS c INNER JOIN orchestra AS o ON c.Conductor_ID = o.Conductor_ID INNER JOIN performance AS p ON o.Orchestra_ID = p.Orchestra_ID ORDER BY p.Date DESC;
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded = (SELECT MAX(Year_of_Founded) FROM orchestra);
SELECT conductor.Name FROM conductor JOIN orchestra ON conductor.Conductor_ID = orchestra.Conductor_ID WHERE orchestra.Year_of_Founded IN ( SELECT MAX(Year_of_Founded) FROM orchestra );

SELECT Record_Company, COUNT(*) as Number_of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) as Number_of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) as Number_of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) as Number_of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) as Number_of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) as NumberOfOrchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) as Number_of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(Orchestra_ID) as NumberOfOrchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) AS NumberOfOrchestras FROM orchestra GROUP BY Record_Company;

SELECT Record_Company, COUNT(*) as Num_Of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) as Number_of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) as Num_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) AS NumberOfOrchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(DISTINCT Orchestra_ID) AS Num_Of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) as Number_of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) as Number_of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(*) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company;
SELECT Record_Company, COUNT(Orchestra_ID) AS Number_of_Orchestras FROM orchestra GROUP BY Record_Company;

SELECT Major_Record_Format FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Orchestra, Major_Record_Format FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Orchestra, Major_Record_Format FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Major_Record_Format FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Orchestra, Major_Record_Format FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Orchestra, Major_Record_Format FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Major_Record_Format FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Orchestra, Major_Record_Format FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Orchestra, Major_Record_Format FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT Orchestra, Major_Record_Format FROM orchestra INNER JOIN conductor ON orchestra.Conductor_ID = conductor.Conductor_ID ORDER BY Year_of_Founded ASC;

SELECT Major_Record_Format, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded ASC;
SELECT o.Major_Record_Format, o.Year_of_Founded FROM orchestra o ORDER BY o.Year_of_Founded;
SELECT Orchestra, Major_Record_Format, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;
SELECT orchestra.Major_Record_Format, orchestra.Year_of_Founded FROM orchestra ORDER BY orchestra.Year_of_Founded;
SELECT Major_Record_Format, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;
SELECT Major_Record_Format, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;
SELECT o.Major_Record_Format, o.Year_of_Founded FROM orchestra o ORDER BY o.Year_of_Founded;
SELECT Major_Record_Format, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;
SELECT Orchestra, Major_Record_Format, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;
SELECT Orchestra, Major_Record_Format, Year_of_Founded FROM orchestra ORDER BY Year_of_Founded;

SELECT Record_Company FROM orchestra WHERE Year_of_Founded = (SELECT MIN(Year_of_Founded) FROM orchestra);
SELECT Record_Company FROM orchestra WHERE Year_of_Founded = (SELECT MIN(Year_of_Founded) FROM orchestra);
SELECT Record_Company FROM orchestra WHERE Year_of_Founded = (SELECT MIN(Year_of_Founded) FROM orchestra);
SELECT Record_Company FROM orchestra WHERE Year_of_Founded = (SELECT MIN(Year_of_Founded) FROM orchestra);
SELECT Record_Company FROM orchestra WHERE Year_of_Founded = (SELECT MIN(Year_of_Founded) FROM orchestra);
SELECT Record_Company FROM orchestra WHERE Year_of_Founded = (SELECT MIN(Year_of_Founded) FROM orchestra);
SELECT Record_Company FROM orchestra WHERE Year_of_Founded = (SELECT MIN(Year_of_Founded) FROM orchestra);
SELECT Record_Company FROM orchestra WHERE Year_of_Founded = (SELECT MIN(Year_of_Founded) FROM orchestra);
SELECT Record_Company FROM orchestra WHERE Year_of_Founded = (SELECT MIN(Year_of_Founded) FROM orchestra);
SELECT Record_Company FROM orchestra WHERE Year_of_Founded = (SELECT MIN(Year_of_Founded) FROM orchestra);

SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1;
SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC LIMIT 1;

SELECT o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Orchestra_ID IS NULL;
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);
SELECT o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Orchestra_ID IS NULL;
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);
SELECT o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Orchestra_ID IS NULL;
SELECT o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Orchestra_ID IS NULL;
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);
SELECT Orchestra FROM orchestra LEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Orchestra_ID IS NULL;

SELECT o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Orchestra_ID IS NULL;
SELECT * FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);
SELECT o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Orchestra_ID IS NULL;
SELECT o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Orchestra_ID IS NULL;
SELECT o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Orchestra_ID IS NULL;
SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance);
SELECT * FROM orchestra LEFT JOIN performance ON orchestra.Orchestra_ID = performance.Orchestra_ID WHERE performance.Orchestra_ID IS NULL;
SELECT o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Orchestra_ID IS NULL;
SELECT o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Orchestra_ID IS NULL;
SELECT o.Orchestra FROM orchestra o LEFT JOIN performance p ON o.Orchestra_ID = p.Orchestra_ID WHERE p.Orchestra_ID IS NULL;

SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded <= 2003;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded <= 2003;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded <= 2003;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded <= 2003;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded <= 2003;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded <= 2003;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded <= 2003;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded <= 2003;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded <= 2003;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded <= 2003;

SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded >= 2003 HAVING COUNT(DISTINCT Orchestra) > 1;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded >= 2003 AND Conductor_ID IN ( SELECT Conductor_ID FROM orchestra WHERE Year_of_Founded < 2003 );
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded >= 2003 GROUP BY Record_Company HAVING COUNT(DISTINCT Orchestra_ID) > 1;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded >= 2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded < 2003;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded >= 2003;
SELECT DISTINCT o.Record_Company FROM orchestra o WHERE o.Year_of_Founded >= 2003 GROUP BY o.Record_Company HAVING COUNT(DISTINCT o.Orchestra_ID) > 1;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded >= 2003 GROUP BY Record_Company HAVING COUNT(DISTINCT Orchestra_ID) > 1;
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded >= 2003 AND Record_Company IN ( SELECT Record_Company FROM orchestra GROUP BY Record_Company HAVING COUNT(DISTINCT Orchestra) > 1 );
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded >= 2003 AND Record_Company IN (SELECT Record_Company FROM orchestra GROUP BY Record_Company HAVING COUNT(*) > 1);
SELECT DISTINCT Record_Company FROM orchestra WHERE Year_of_Founded >= 2003 AND Record_Company IN ( SELECT Record_Company FROM orchestra GROUP BY Record_Company HAVING COUNT(Orchestra_ID) > 1);

SELECT COUNT(*) FROM show WHERE If_first_show = true AND Performance_ID IN (SELECT Performance_ID FROM performance WHERE Type = 'Glebe Park');
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes' AND Performance_ID IN ( SELECT Performance_ID FROM performance WHERE Orchestra_ID IN ( SELECT Orchestra_ID FROM orchestra WHERE Orchestra = 'Glebe Park' ) );
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes' AND Performance_ID IN (SELECT Performance_ID FROM performance WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM orchestra WHERE Orchestra = 'Glebe Park'));
SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = 'Yes' AND orchestra.Orchestra = 'Glebe Park';
SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = 'Yes' AND orchestra.Orchestra = 'Glebe Park';
SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = TRUE AND orchestra.Orchestra = 'Glebe Park';
SELECT COUNT(*) FROM show WHERE If_first_show = 'Yes' AND Performance_ID IN ( SELECT Performance_ID FROM performance WHERE Orchestra_ID IN ( SELECT Orchestra_ID FROM orchestra WHERE Orchestra = 'Glebe Park' ) );
SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = TRUE AND orchestra.Orchestra = 'Glebe Park';
SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = 'Yes' AND orchestra.Orchestra = 'Glebe Park';
SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = 1 AND orchestra.Orchestra = 'Glebe Park';

SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = 'Yes' AND orchestra.Orchestra = 'Glebe Park';
SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = 'Yes' AND orchestra.Orchestra = 'Glebe Park';
SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = 1 AND orchestra.Orchestra = "Glebe Park";
SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = 'Yes' AND orchestra.Orchestra = 'Glebe Park';
SELECT COUNT(*) FROM show WHERE If_first_show = "true" AND Performance_ID IN (SELECT Performance_ID FROM performance WHERE Orchestra_ID IN (SELECT Orchestra_ID FROM orchestra WHERE Orchestra = "Glebe Park"));
SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = 'Yes' AND orchestra.Orchestra = 'Glebe Park';
SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE If_first_show = 1 AND Orchestra = "Glebe Park";
SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = 'Yes' AND orchestra.Orchestra = 'Glebe Park';
SELECT COUNT(*) FROM show INNER JOIN performance ON show.Performance_ID = performance.Performance_ID INNER JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = TRUE AND orchestra.Orchestra = "Glebe Park";
SELECT COUNT(*) FROM show JOIN performance ON show.Performance_ID = performance.Performance_ID JOIN orchestra ON performance.Orchestra_ID = orchestra.Orchestra_ID WHERE show.If_first_show = 'yes' AND orchestra.Orchestra = 'Glebe Park';

SELECT DISTINCT p.Type FROM performance AS p JOIN show AS s ON p.Performance_ID = s.Performance_ID WHERE s.If_first_show = 'No' GROUP BY p.Type HAVING COUNT(s.Show_ID) > 1;
SELECT DISTINCT performance.Type FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID WHERE show.If_first_show = 'No' GROUP BY performance.Type HAVING COUNT(show.Show_ID) > 1;
SELECT DISTINCT performance.Type FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID WHERE show.If_first_show = 'No' GROUP BY performance.Type HAVING COUNT(show.Show_ID) > 1;
SELECT DISTINCT performance.Type FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID WHERE show.If_first_show = 'No' GROUP BY performance.Type HAVING COUNT(show.Show_ID) > 1;
SELECT performance.Type FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID WHERE show.If_first_show = 'No' GROUP BY performance.Type HAVING COUNT(*) > 1;
SELECT DISTINCT p.Type FROM performance p JOIN show s ON p.Performance_ID = s.Performance_ID WHERE s.If_first_show = 'No' GROUP BY p.Type HAVING COUNT(s.Show_ID) > 1;
SELECT performance.Type FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID WHERE show.If_first_show = 'No' GROUP BY performance.Type HAVING COUNT(distinct show.Show_ID) > 1;
SELECT performance.Type FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID WHERE show.If_first_show = 'No' GROUP BY performance.Type HAVING COUNT(show.Show_ID) > 1;
SELECT DISTINCT p.Type FROM performance p JOIN show s ON p.Performance_ID = s.Performance_ID WHERE s.If_first_show = 'no' GROUP BY p.Type HAVING COUNT(s.Show_ID) > 1;
SELECT performance.Type FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID WHERE show.If_first_show = 'No' GROUP BY performance.Type HAVING COUNT(show.Show_ID) > 1;

SELECT DISTINCT p.Type FROM performance p JOIN show s ON p.Performance_ID = s.Performance_ID WHERE s.If_first_show = 'No' GROUP BY p.Type HAVING COUNT(*) > 1;
SELECT DISTINCT p.Type FROM performance p JOIN show s ON p.Performance_ID = s.Performance_ID WHERE s.If_first_show = 'No' GROUP BY p.Type HAVING COUNT(s.Show_ID) > 1;
SELECT performance.Type FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID WHERE show.If_first_show = 'No' GROUP BY performance.Type HAVING COUNT(*) > 1;
SELECT DISTINCT p.Type FROM performance p JOIN show s ON p.Performance_ID = s.Performance_ID WHERE s.If_first_show = 'no' GROUP BY p.Type HAVING COUNT(s.Show_ID) > 1;
SELECT DISTINCT p.Type FROM performance p JOIN show s ON p.Performance_ID = s.Performance_ID WHERE s.If_first_show = 'No' GROUP BY p.Type HAVING COUNT(s.Show_ID) > 1;
SELECT DISTINCT performance.Type FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID WHERE show.If_first_show=FALSE GROUP BY performance.Type HAVING COUNT(show.Show_ID) > 1;
SELECT DISTINCT performance.Type FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID WHERE show.If_first_show = 'No' GROUP BY performance.Type HAVING COUNT(show.Show_ID) > 1;
SELECT DISTINCT p.Type FROM performance p JOIN show s ON p.Performance_ID = s.Performance_ID WHERE s.If_first_show = 'No' GROUP BY p.Type HAVING COUNT(*) > 1;
SELECT DISTINCT(performance.Type) FROM performance JOIN show ON performance.Performance_ID = show.Performance_ID WHERE show.If_first_show = 'No' GROUP BY performance.Type HAVING COUNT(show.Show_ID) > 1;
SELECT DISTINCT p.Type FROM performance p JOIN show s ON p.Performance_ID = s.Performance_ID WHERE s.If_first_show = 'No' GROUP BY p.Type HAVING COUNT(s.Show_ID) > 1;

SELECT DISTINCT O.state FROM Owners O JOIN Professionals P ON O.state = P.state;
SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state;
SELECT DISTINCT o.state FROM Owners o INNER JOIN Professionals p ON o.state = p.state;
SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state;
SELECT DISTINCT Owners.state FROM Owners INNER JOIN Professionals ON Owners.state = Professionals.state;
SELECT distinct O.state FROM Owners O, Professionals P WHERE O.state = P.state;
SELECT DISTINCT Owners.state FROM Owners INNER JOIN Professionals ON Owners.state = Professionals.state;
SELECT DISTINCT O.state FROM Owners O WHERE EXISTS (SELECT 1 FROM Professionals P WHERE P.state = O.state);
SELECT DISTINCT Owners.state FROM Owners WHERE Owners.state IN (SELECT DISTINCT Professionals.state FROM Professionals);
SELECT DISTINCT O.state FROM Owners O WHERE EXISTS (SELECT 1 FROM Professionals P WHERE P.state = O.state);

SELECT DISTINCT Owners.state FROM Owners INNER JOIN Professionals ON Owners.state = Professionals.state;
SELECT DISTINCT Owners.state FROM Owners INNER JOIN Professionals ON Owners.state = Professionals.state;
SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state;
SELECT DISTINCT o.state FROM Owners o INNER JOIN Professionals p ON o.state = p.state;
SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state;
SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state;
SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state;
SELECT DISTINCT Owners.state FROM Owners INNER JOIN Professionals ON Owners.state = Professionals.state;
SELECT DISTINCT Owners.state FROM Owners INNER JOIN Professionals ON Owners.state = Professionals.state;
SELECT DISTINCT O.state FROM Owners O INNER JOIN Professionals P ON O.state = P.state;

SELECT AVG(Dogs.age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) as Average_Age FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;

SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT AVG(Dogs.age) FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;

SELECT DISTINCT p.professional_id, p.last_name, p.cell_number FROM Professionals p LEFT JOIN Treatments t ON p.professional_id = t.professional_id WHERE p.state = 'Indiana' OR t.professional_id IN ( SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2 );
SELECT p.professional_id, p.last_name, p.cell_number FROM Professionals p WHERE p.state = 'Indiana' OR p.professional_id IN ( SELECT t.professional_id FROM Treatments t GROUP BY t.professional_id HAVING COUNT(t.treatment_id) > 2);
SELECT P.professional_id, P.last_name, P.cell_number FROM Professionals P WHERE P.state = 'Indiana' UNION SELECT P.professional_id, P.last_name, P.cell_number FROM Professionals P INNER JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.last_name, P.cell_number HAVING COUNT(T.treatment_id) > 2;
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' OR Professionals.professional_id IN ( SELECT Treatments.professional_id FROM Treatments GROUP BY Treatments.professional_id HAVING COUNT(Treatments.treatment_id) > 2 );
SELECT p.professional_id, p.last_name, p.cell_number FROM Professionals p WHERE p.state = 'Indiana' OR p.professional_id IN ( SELECT t.professional_id FROM Treatments t GROUP BY t.professional_id HAVING COUNT(*) > 2 );
SELECT DISTINCT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' OR Professionals.professional_id IN ( SELECT Treatments.professional_id FROM Treatments GROUP BY Treatments.professional_id HAVING COUNT(Treatments.treatment_id) > 2);
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' OR Professionals.professional_id IN ( SELECT Professionals.professional_id FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id GROUP BY Professionals.professional_id HAVING COUNT(Treatments.treatment_id) > 2);
SELECT p.professional_id, p.last_name, p.cell_number FROM Professionals p WHERE p.state = 'Indiana' OR p.professional_id IN ( SELECT t.professional_id FROM Treatments t GROUP BY t.professional_id HAVING COUNT(t.treatment_id) > 2 );
SELECT DISTINCT P.professional_id, P.last_name, P.cell_number FROM Professionals P LEFT JOIN Treatments T ON P.professional_id=T.professional_id WHERE P.state = 'Indiana' OR P.professional_id IN (SELECT T.professional_id FROM Treatments T GROUP BY T.professional_id HAVING COUNT(T.treatment_id) > 2);
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.last_name, Professionals.cell_number HAVING (Professionals.state = 'Indiana') OR (COUNT(Treatments.treatment_id) >2);

SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN ( SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2 );
SELECT DISTINCT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Professionals.state = 'Indiana' OR Professionals.professional_id IN (SELECT Treatments.professional_id FROM Treatments GROUP BY Treatments.professional_id HAVING COUNT(Treatments.treatment_id) > 2);
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN (SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2);
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN ( SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2);
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN ( SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(*) > 2);
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING (Professionals.state = 'Indiana' OR COUNT(Treatments.treatment_id) > 2);
SELECT professional_id, last_name, cell_number FROM Professionals WHERE state = 'Indiana' OR professional_id IN ( SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) > 2);
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.last_name, Professionals.cell_number HAVING Professionals.state = 'Indiana' OR COUNT(Treatments.treatment_id) > 2;
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING state = 'Indiana' OR COUNT(Treatments.treatment_id) > 2;
SELECT Professionals.professional_id, Professionals.last_name, Professionals.cell_number FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING COUNT(Treatments.treatment_id) > 2 OR Professionals.state = 'Indiana';

SELECT D.name FROM Dogs D WHERE NOT EXISTS ( SELECT 1 FROM Treatments T WHERE D.dog_id = T.dog_id GROUP BY T.dog_id HAVING SUM(T.cost_of_treatment) > 1000 );
SELECT d.name FROM Dogs d WHERE d.dog_id NOT IN ( SELECT t.dog_id FROM Treatments t GROUP BY t.dog_id HAVING SUM(t.cost_of_treatment) > 1000);
SELECT Dogs.name FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.dog_id HAVING SUM(Treatments.cost_of_treatment) <= 1000;
SELECT d.name FROM Dogs d WHERE NOT EXISTS ( SELECT 1 FROM Treatments t WHERE t.dog_id = d.dog_id GROUP BY t.dog_id HAVING SUM(t.cost_of_treatment) > 1000 );
SELECT Dogs.name FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) <= 1000;
SELECT d.name FROM Dogs d WHERE d.dog_id NOT IN ( 	SELECT t.dog_id 	FROM Treatments t 	GROUP BY t.dog_id 	HAVING SUM(t.cost_of_treatment) > 1000);
SELECT Dogs.name FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) <= 1000;
SELECT Dogs.name FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) <= 1000;
SELECT DISTINCT Dogs.name FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.dog_id HAVING SUM(Treatments.cost_of_treatment) <= 1000 OR SUM(Treatments.cost_of_treatment) IS NULL;
SELECT Dogs.name FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING SUM(cost_of_treatment) > 1000 );

SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.cost_of_treatment > 1000;
SELECT Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.cost_of_treatment > 1000;
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Owners ON Dogs.owner_id = Owners.owner_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs INNER JOIN Owners ON Dogs.owner_id = Owners.owner_id INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Owners ON Dogs.owner_id = Owners.owner_id GROUP BY Dogs.name, Owners.owner_id HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Owners ON Dogs.owner_id = Owners.owner_id GROUP BY Dogs.name HAVING SUM(Treatments.cost_of_treatment) > 1000;
SELECT DISTINCT Dogs.name FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.dog_id HAVING SUM(Treatments.cost_of_treatment) > 1000;

SELECT first_name FROM ( SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners ) AS P WHERE first_name NOT IN ( SELECT name FROM Dogs );
SELECT first_name FROM ( SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners ) AS HumanNames WHERE first_name NOT IN ( SELECT name FROM Dogs );
SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs;
SELECT Owners.first_name AS name FROM Owners WHERE Owners.first_name NOT IN (SELECT Dogs.name FROM Dogs) UNION SELECT Professionals.first_name AS name FROM Professionals WHERE Professionals.first_name NOT IN (SELECT Dogs.name FROM Dogs);
SELECT first_name FROM ( SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners ) AS person_names WHERE first_name NOT IN ( SELECT name FROM Dogs );
SELECT DISTINCT first_name FROM ( SELECT first_name FROM Owners UNION SELECT first_name FROM Professionals ) As People WHERE first_name NOT IN ( SELECT DISTINCT name FROM Dogs );
SELECT Professional.first_name FROM Professionals WHERE Professional.first_name NOT IN (SELECT Dogs.name FROM Dogs) UNION SELECT Owners.first_name FROM Owners WHERE Owners.first_name NOT IN (SELECT Dogs.name FROM Dogs);
SELECT Professionals.first_name FROM Professionals UNION SELECT Owners.first_name FROM Owners EXCEPT SELECT Dogs.name FROM Dogs;
SELECT DISTINCT first_name FROM (SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners) AS P WHERE first_name NOT IN (SELECT name FROM Dogs);
SELECT Professionals.first_name FROM Professionals WHERE Professionals.first_name NOT IN (SELECT Dogs.name FROM Dogs) UNION SELECT Owners.first_name FROM Owners WHERE Owners.first_name NOT IN (SELECT Dogs.name FROM Dogs);

SELECT DISTINCT first_name FROM ( SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners ) AS People WHERE first_name NOT IN (SELECT DISTINCT name FROM Dogs);
SELECT DISTINCT Owners.first_name FROM Owners WHERE Owners.first_name NOT IN (SELECT Dogs.name FROM Dogs) UNION SELECT DISTINCT Professionals.first_name FROM Professionals WHERE Professionals.first_name NOT IN (SELECT Dogs.name FROM Dogs);
SELECT Professionals.first_name FROM Professionals UNION SELECT Owners.first_name FROM Owners EXCEPT SELECT Dogs.name FROM Dogs;
SELECT Owners.first_name FROM Owners UNION SELECT Professionals.first_name FROM Professionals EXCEPT SELECT Dogs.name FROM Dogs;
SELECT Owners.first_name FROM Owners WHERE Owners.first_name NOT IN (SELECT Dogs.name FROM Dogs) UNION SELECT Professionals.first_name FROM Professionals WHERE Professionals.first_name NOT IN (SELECT Dogs.name FROM Dogs);
SELECT DISTINCT first_name FROM ( SELECT first_name FROM Owners UNION ALL SELECT first_name FROM Professionals ) AS People WHERE first_name NOT IN ( SELECT DISTINCT name FROM Dogs );
SELECT first_name FROM ( SELECT first_name FROM Owners UNION SELECT first_name FROM Professionals ) AS humans WHERE first_name NOT IN ( SELECT name FROM Dogs );
SELECT P.first_name FROM Professionals P WHERE P.first_name NOT IN (SELECT D.name FROM Dogs D) UNION SELECT O.first_name FROM Owners O WHERE O.first_name NOT IN (SELECT D.name FROM Dogs D);
SELECT first_name FROM ( SELECT first_name FROM Owners UNION SELECT first_name FROM Professionals ) AS People WHERE first_name NOT IN ( SELECT name FROM Dogs );
SELECT first_name FROM ( SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners ) AS combined_table WHERE first_name NOT IN ( SELECT name FROM Dogs );

SELECT Professionals.professional_id, Professionals.first_name, Professionals.last_name FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.treatment_id IS NULL;
SELECT Professionals.professional_id, Professionals.first_name, Professionals.last_name FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.treatment_id IS NULL;
SELECT Professionals.professional_id, Professionals.first_name, Professionals.last_name FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.treatment_id IS NULL;
SELECT p.professional_id, p.first_name, p.last_name FROM Professionals p LEFT JOIN Treatments t ON p.professional_id = t.professional_id WHERE t.treatment_id IS NULL;
SELECT Professionals.professional_id, Professionals.first_name, Professionals.last_name FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.treatment_id IS NULL;
SELECT P.professional_id, P.first_name, P.last_name FROM Professionals P WHERE P.professional_id NOT IN (SELECT T.professional_id FROM Treatments T);
SELECT Professionals.professional_id, Professionals.first_name, Professionals.last_name FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.treatment_id IS NULL;
SELECT p.professional_id, p.first_name, p.last_name FROM Professionals p LEFT JOIN Treatments t ON p.professional_id = t.professional_id WHERE t.treatment_id IS NULL;
SELECT Professionals.professional_id, Professionals.first_name, Professionals.last_name FROM Professionals WHERE Professionals.professional_id NOT IN (SELECT Treatments.professional_id FROM Treatments);
SELECT p.professional_id, p.first_name, p.last_name FROM Professionals p LEFT JOIN Treatments t ON p.professional_id = t.professional_id WHERE t.treatment_id IS NULL;

SELECT professional_id, first_name, last_name FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT professional_id, first_name FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT professional_id, first_name, last_name FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT Professional_id, first_name, last_name FROM Professionals WHERE Professional_id NOT IN (SELECT Professional_id FROM Treatments);
SELECT Professional.professional_id, Professional.first_name, Professional.last_name FROM Professionals LEFT JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.treatment_id IS NULL;
SELECT professional_id, first_name, last_name FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT professional_id, first_name, last_name FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments );
SELECT professional_id, first_name FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT professional_id, first_name, last_name FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT professional_id, first_name, last_name FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);

SELECT o.owner_id, o.first_name, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id, o.first_name, o.last_name ORDER BY COUNT(d.dog_id) DESC LIMIT 1;
SELECT O.owner_id, O.first_name, O.last_name FROM Owners AS O INNER JOIN Dogs AS D ON O.owner_id = D.owner_id GROUP BY O.owner_id, O.first_name, O.last_name ORDER BY COUNT(D.dog_id) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name, COUNT(Dogs.dog_id) as dog_count FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY dog_count DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1;
SELECT o.owner_id, o.first_name, o.last_name, COUNT(d.dog_id) AS Number_of_Dogs FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id, o.first_name, o.last_name ORDER BY Number_of_Dogs DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name, COUNT(Dogs.dog_id) AS Dog_Count FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY Dog_Count DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name, COUNT(Dogs.dog_id) as Dog_Count FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY Dog_Count DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name, COUNT(Dogs.dog_id) AS NumberOfDogs FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY NumberOfDogs DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name, COUNT(Dogs.dog_id) as num_of_dogs FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY num_of_dogs DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name, COUNT(Dogs.dog_id) AS NumberOfDogs FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY NumberOfDogs DESC LIMIT 1;

SELECT o.owner_id, o.first_name, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id, o.first_name, o.last_name ORDER BY COUNT(d.dog_id) DESC LIMIT 1;
SELECT o.owner_id, o.first_name, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id, o.first_name, o.last_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1;
SELECT o.owner_id, o.first_name, o.last_name FROM Owners o JOIN Dogs d on o.owner_id = d.owner_id GROUP BY o.owner_id, o.first_name, o.last_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1;
SELECT o.owner_id, o.first_name, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id GROUP BY o.owner_id, o.first_name, o.last_name ORDER BY COUNT(d.dog_id) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id, Owners.first_name, Owners.last_name ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.first_name, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id GROUP BY Owners.owner_id ORDER BY COUNT(Dogs.dog_id) DESC LIMIT 1;
SELECT O.owner_id, O.first_name, O.last_name FROM Owners O JOIN Dogs D ON D.owner_id = O.owner_id GROUP BY O.owner_id, O.first_name, O.last_name ORDER BY COUNT(D.dog_id) DESC LIMIT 1;

SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT professional_id,home_phone,cell_number FROM Professionals WHERE professional_id IN ( SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(treatment_id) >= 2 );
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT p.professional_id, p.home_phone, p.cell_number FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id, p.home_phone, p.cell_number HAVING COUNT(t.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals JOIN Treatments ON Treatments.professional_id = Professionals.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(Treatments.treatment_id) >= 2;

SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT P.professional_id, P.home_phone, P.cell_number FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.home_phone, P.cell_number HAVING COUNT(T.treatment_id) >= 2;
SELECT p.professional_id, p.home_phone, p.email_address FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id GROUP BY p.professional_id, p.home_phone, p.email_address HAVING COUNT(t.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT P.professional_id, P.home_phone, P.cell_number FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.home_phone, P.cell_number HAVING COUNT(T.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.street, Professionals.city, Professionals.state, Professionals.zip_code FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(Treatments.treatment_id) >= 2;
SELECT P.professional_id, P.home_phone, P.cell_number FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.home_phone, P.cell_number HAVING COUNT(T.treatment_id) >= 2;

SELECT breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code WHERE Dogs.abandoned_yn = 'Y' GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT b.breed_name FROM Breeds b JOIN Dogs d ON d.breed_code = b.breed_code WHERE d.abandoned_yn = 'Y' GROUP BY b.breed_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Breeds.breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code WHERE Dogs.abandoned_yn = 'Y' GROUP BY Breeds.breed_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT breed_name FROM Breeds JOIN Dogs ON Dogs.breed_code = Breeds.breed_code WHERE Dogs.abandoned_yn = 'Y' GROUP BY Breeds.breed_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT breed_name FROM Breeds WHERE breed_code IN ( SELECT breed_code FROM Dogs WHERE abandoned_yn = 'yes' GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1);
SELECT breed_name FROM Breeds WHERE breed_code IN ( SELECT breed_code FROM Dogs WHERE abandoned_yn = 'yes' GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1);
SELECT breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code WHERE Dogs.abandoned_yn = 'Y' GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Breeds.breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code WHERE Dogs.abandoned_yn = 'Y' GROUP BY Breeds.breed_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code WHERE abandoned_yn = 'yes' GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT breed_name FROM Breeds JOIN Dogs on Breeds.breed_code = Dogs.breed_code WHERE abandoned_yn = 'Y' GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1;

SELECT b.breed_name FROM Breeds b JOIN Dogs d ON b.breed_code = d.breed_code WHERE d.abandoned_yn = 'yes' GROUP BY b.breed_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT B.breed_name FROM Breeds B INNER JOIN ( SELECT breed_code FROM Dogs WHERE abandoned_yn = 'Y' GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1) D ON B.breed_code = D.breed_code;
SELECT Breeds.breed_name FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code WHERE Dogs.abandoned_yn = 'Y' GROUP BY Breeds.breed_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT breed_name FROM Breeds WHERE breed_code = ( SELECT breed_code FROM Dogs WHERE abandoned_yn = 'yes' GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT breed_name FROM Breeds WHERE breed_code = ( SELECT breed_code FROM Dogs WHERE abandoned_yn = 'Y' GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1 );
SELECT breed_name FROM Breeds WHERE breed_code = (SELECT breed_code FROM Dogs WHERE abandoned_yn = 'yes' GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1);
SELECT breed_name FROM Breeds WHERE breed_code IN ( SELECT breed_code FROM ( SELECT breed_code, COUNT(*) as cnt FROM Dogs WHERE abandoned_yn = 'Y' GROUP BY breed_code ORDER BY cnt DESC LIMIT 1 ) as most_abandoned_breed );
SELECT breed_name FROM Breeds JOIN Dogs ON Dogs.breed_code = Breeds.breed_code WHERE Dogs.abandoned_yn = 'Y' GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT breed_name FROM Breeds WHERE breed_code IN ( SELECT breed_code FROM Dogs WHERE abandoned_yn = 'Yes' GROUP BY breed_code ORDER BY COUNT(*) DESC LIMIT 1);
SELECT breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code WHERE Dogs.abandoned_yn = 'Y' GROUP BY breed_name ORDER BY COUNT(*) DESC LIMIT 1;

SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY COUNT(Treatments.treatment_id) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY COUNT(Treatments.treatment_id) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY COUNT(Treatments.treatment_id) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY COUNT(Treatments.treatment_id) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name, COUNT(Treatments.treatment_id) as Total_Treatments FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY Total_Treatments DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY COUNT(Treatments.treatment_id) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name, COUNT(Treatments.treatment_id) AS Number_of_Treatments FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY Number_of_Treatments DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY COUNT(Treatments.treatment_id) DESC LIMIT 1;
SELECT o.owner_id, o.last_name FROM Owners o JOIN Dogs d ON o.owner_id = d.owner_id JOIN Treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.last_name ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY COUNT(Treatments.treatment_id) DESC LIMIT 1;

SELECT Owners.owner_id, Owners.last_name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT O.owner_id, O.last_name FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id JOIN Treatments T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.last_name ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Treatments.dog_id = Dogs.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT O.owner_id, O.last_name FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id JOIN Treatments T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.last_name ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.last_name ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;

SELECT tt.treatment_type_description FROM Treatment_Types AS tt JOIN Treatments AS t ON tt.treatment_type_code = t.treatment_type_code GROUP BY tt.treatment_type_description ORDER BY SUM(t.cost_of_treatment) ASC LIMIT 1;
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatment_Types.treatment_type_description ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1;
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatment_Types.treatment_type_description ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1;
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatment_Types.treatment_type_description ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1;
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types INNER JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatment_Types.treatment_type_description ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1;
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatment_Types.treatment_type_description ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = ( SELECT treatment_type_code FROM ( SELECT treatment_type_code, SUM(cost_of_treatment) AS total_cost FROM Treatments GROUP BY treatment_type_code ORDER BY total_cost ASC LIMIT 1 ) AS subquery);
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatment_Types.treatment_type_description ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY treatment_type_description ORDER BY SUM(cost_of_treatment) ASC LIMIT 1;
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatment_Types.treatment_type_description ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1;

SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = ( SELECT treatment_type_code FROM Treatments GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1 );
SELECT treatment_type_description FROM Treatment_Types INNER JOIN ( SELECT treatment_type_code, SUM(cost_of_treatment) as total_cost FROM Treatments GROUP BY treatment_type_code ORDER BY total_cost ASC LIMIT 1 ) as Temp ON Treatment_Types.treatment_type_code = Temp.treatment_type_code;
SELECT treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatment_Types.treatment_type_code = Treatments.treatment_type_code GROUP BY Treatment_Types.treatment_type_description ORDER BY SUM(cost_of_treatment) ASC LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = ( SELECT treatment_type_code FROM Treatments GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1 );
SELECT Treatment_Types.treatment_type_description FROM Treatment_Types JOIN Treatments ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code GROUP BY Treatment_Types.treatment_type_description ORDER BY SUM(Treatments.cost_of_treatment) ASC LIMIT 1;
SELECT tt.treatment_type_description FROM Treatment_Types tt INNER JOIN Treatments t ON tt.treatment_type_code = t.treatment_type_code GROUP BY tt.treatment_type_code, tt.treatment_type_description HAVING SUM(t.cost_of_treatment) = (SELECT MIN(SUM(cost_of_treatment)) FROM Treatments GROUP BY treatment_type_code) LIMIT 1;
SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = ( SELECT treatment_type_code FROM Treatments GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1 );
SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = ( SELECT treatment_type_code FROM Treatments GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1 );
SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code = ( SELECT treatment_type_code FROM Treatments GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) ASC LIMIT 1 );
SELECT treatment_type_description FROM Treatment_Types WHERE treatment_type_code IN (SELECT treatment_type_code FROM Treatments GROUP BY treatment_type_code ORDER BY SUM(cost_of_treatment) LIMIT 1);

SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Treatments.dog_id = Dogs.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT O.owner_id, O.zip_code FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id JOIN Treatments T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.zip_code ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT o.owner_id, o.zip_code FROM Owners o INNER JOIN Dogs d ON o.owner_id = d.owner_id INNER JOIN Treatments t ON d.dog_id = t.dog_id GROUP BY o.owner_id, o.zip_code ORDER BY SUM(t.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Treatments.dog_id = Dogs.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;

SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Treatments.dog_id = Dogs.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Dogs.owner_id, Owners.zip_code FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Dogs.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT O.owner_id, O.zip_code FROM Owners O JOIN Dogs D ON O.owner_id = D.owner_id JOIN Treatments T ON D.dog_id = T.dog_id GROUP BY O.owner_id, O.zip_code ORDER BY SUM(T.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;
SELECT Owners.owner_id, Owners.zip_code FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Treatments ON Dogs.dog_id = Treatments.dog_id GROUP BY Owners.owner_id, Owners.zip_code ORDER BY SUM(Treatments.cost_of_treatment) DESC LIMIT 1;

SELECT P.professional_id, P.first_name, P.last_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id WHERE 2 <= ( SELECT COUNT(DISTINCT treatment_type_code) FROM Treatments WHERE professional_id = P.professional_id) GROUP BY P.professional_id, P.first_name, P.last_name;
SELECT p.professional_id, p.first_name, p.last_name FROM Professionals AS p JOIN Treatments AS t ON p.professional_id = t.professional_id GROUP BY p.professional_id, p.first_name, p.last_name HAVING COUNT(DISTINCT t.treatment_type_code) >= 2;
SELECT Professionals.professional_id, Professionals.first_name, Professionals.last_name FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.first_name, Professionals.last_name HAVING COUNT(DISTINCT Treatments.treatment_type_code) >= 2;
SELECT p.professional_id, p.first_name, p.last_name FROM Professionals AS p JOIN Treatments AS t ON p.professional_id = t.professional_id GROUP BY p.professional_id, p.first_name, p.last_name HAVING COUNT(DISTINCT t.treatment_type_code) >= 2;
SELECT P.professional_id, P.first_name, P.last_name FROM Professionals P, Treatments T WHERE P.professional_id = T.professional_id GROUP BY P.professional_id, P.first_name, P.last_name HAVING COUNT(DISTINCT T.treatment_type_code) >= 2;
SELECT P.professional_id, P.first_name, P.last_name FROM Professionals P WHERE EXISTS ( SELECT 1 FROM ( SELECT COUNT(DISTINCT T.treatment_type_code) as count_types FROM Treatments T WHERE T.professional_id = P.professional_id ) subquery WHERE subquery.count_types >= 2 );
SELECT P.professional_id, P.first_name, P.last_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.first_name, P.last_name HAVING COUNT(DISTINCT T.treatment_type_code) >= 2;
SELECT professional_id, first_name, last_name FROM Professionals WHERE professional_id IN ( SELECT professional_id FROM Treatments GROUP BY professional_id HAVING COUNT(DISTINCT treatment_type_code) >= 2 );
SELECT P.professional_id, P.first_name, P.last_name FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.first_name, P.last_name HAVING COUNT(DISTINCT T.treatment_type_code) >= 2;
SELECT P.professional_id, P.first_name, P.last_name FROM Professionals P WHERE EXISTS ( SELECT 1 FROM Treatments T1 WHERE T1.professional_id = P.professional_id AND EXISTS ( SELECT 1 FROM Treatments T2 WHERE T2.professional_id = P.professional_id AND T2.treatment_type_code != T1.treatment_type_code) );

SELECT P.professional_id, P.home_phone, P.cell_number FROM Professionals P JOIN Treatments T on P.professional_id = T.professional_id GROUP BY P.professional_id, P.home_phone, P.cell_number HAVING COUNT(DISTINCT T.treatment_type_code) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(DISTINCT Treatments.treatment_type_code) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(DISTINCT Treatment_Types.treatment_type_code) >= 2;
SELECT P.professional_id, P.home_phone FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.home_phone HAVING COUNT(DISTINCT T.treatment_type_code) >= 2;
SELECT P.professional_id, P.home_phone, P.cell_number FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.home_phone, P.cell_number HAVING COUNT(DISTINCT T.treatment_type_code) >= 2;
SELECT P.professional_id, P.home_phone FROM Professionals P JOIN Treatments T ON P.professional_id = T.professional_id GROUP BY P.professional_id, P.home_phone HAVING COUNT(DISTINCT T.treatment_type_code) >= 2;
SELECT P.professional_id, P.home_phone, P.cell_number FROM Professionals P WHERE ( SELECT COUNT(DISTINCT T.treatment_type_code) FROM Treatments T WHERE T.professional_id = P.professional_id ) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(DISTINCT Treatments.treatment_type_code) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone, Professionals.cell_number FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code GROUP BY Professionals.professional_id, Professionals.home_phone, Professionals.cell_number HAVING COUNT(DISTINCT Treatment_Types.treatment_type_code) >= 2;
SELECT Professionals.professional_id, Professionals.home_phone FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id GROUP BY Professionals.professional_id, Professionals.home_phone HAVING COUNT(DISTINCT Treatments.treatment_type_code) >= 2;

SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT p.first_name, p.last_name FROM Professionals p JOIN Treatments t ON p.professional_id = t.professional_id WHERE t.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);

SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(Treatments.cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT Professionals.first_name, Professionals.last_name FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT DISTINCT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);
SELECT Professionals.first_name, Professionals.last_name FROM Professionals WHERE Professionals.professional_id IN ( SELECT Treatments.professional_id FROM Treatments WHERE Treatments.cost_of_treatment < ( SELECT AVG(Treatments.cost_of_treatment) FROM Treatments ) );
SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id WHERE Treatments.cost_of_treatment < (SELECT AVG(Treatments.cost_of_treatment) FROM Treatments);
SELECT Professionals.first_name, Professionals.last_name FROM Professionals JOIN Treatments on Professionals.professional_id = Treatments.professional_id WHERE cost_of_treatment < (SELECT AVG(cost_of_treatment) FROM Treatments);

SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments INNER JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments INNER JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments INNER JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments INNER JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;

SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments INNER JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments INNER JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;
SELECT Treatments.date_of_treatment, Professionals.first_name, Professionals.last_name FROM Treatments JOIN Professionals ON Treatments.professional_id = Professionals.professional_id;

SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments LEFT JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments INNER JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments INNER JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;

SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT cost_of_treatment, treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT cost_of_treatment, treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments INNER JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT cost_of_treatment, treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT cost_of_treatment, treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT cost_of_treatment, treatment_type_description FROM Treatments INNER JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Treatments.cost_of_treatment, Treatment_Types.treatment_type_description FROM Treatments JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;

SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code;

SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Dogs INNER JOIN Owners ON Dogs.owner_id = Owners.owner_id INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT Owners.first_name, Owners.last_name, Sizes.size_description FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code;

SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name as dog_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;

SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name as dog_name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name as dog_name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name AS dog_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id;
SELECT Owners.first_name, Owners.last_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id;

SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Breeds ON Dogs.breed_code = Breeds.breed_code WHERE Dogs.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code HAVING COUNT(*) = ( SELECT MIN(Cnt) FROM ( SELECT COUNT(*) as Cnt FROM Dogs GROUP BY breed_code ) AS tbl ) );
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Breeds.breed_name IN ( SELECT breed_name FROM ( SELECT breed_name, COUNT(*) as count FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY breed_name ORDER BY count LIMIT 1 ) AS Subquery) ORDER BY Dogs.name;
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1 ) AS RarestBreed ON Dogs.breed_code = RarestBreed.breed_code;
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Breeds.breed_name = (SELECT breed_name FROM Breeds JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY breed_name ORDER BY COUNT(Dogs.dog_id) ASC LIMIT 1);
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Breeds.breed_code IN (SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1);
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id INNER JOIN Breeds ON Dogs.breed_code = Breeds.breed_code WHERE Breeds.breed_name = ( SELECT breed_name FROM Breeds INNER JOIN Dogs ON Breeds.breed_code = Dogs.breed_code GROUP BY breed_name ORDER BY COUNT(*) ASC LIMIT 1 );
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1 ) AS RarestBreed ON Dogs.breed_code = RarestBreed.breed_code;
SELECT D.name, T.date_of_treatment FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id JOIN Breeds B ON D.breed_code = B.breed_code WHERE B.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code HAVING COUNT(*) = ( SELECT MIN(counts) FROM ( SELECT COUNT(*) AS counts FROM Dogs GROUP BY breed_code ) subquery ) ) ORDER BY T.date_of_treatment;
SELECT Dogs.name AS Dog_Name, Treatments.date_of_treatment AS Treatment_Date FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Breeds.breed_code = ( SELECT breed_code FROM ( SELECT breed_code, COUNT(*) as count FROM Dogs GROUP BY breed_code ORDER BY count LIMIT 1 ) AS RareBreed );
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Breeds ON Dogs.breed_code = Breeds.breed_code GROUP BY Dogs.breed_code HAVING COUNT(Dogs.breed_code) = ( SELECT COUNT(dog_id) FROM Dogs GROUP BY breed_code ORDER BY COUNT(dog_id) ASC LIMIT 1 );

SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN ( SELECT breed_code, COUNT(*) as num FROM Dogs GROUP BY breed_code ORDER BY num LIMIT 1 ) AS Rarest ON Dogs.breed_code = Rarest.breed_code;
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Breeds ON Dogs.breed_code = Breeds.breed_code GROUP BY Dogs.breed_code HAVING COUNT(Dogs.breed_code) = ( SELECT COUNT(dog_id) AS CountOf FROM Dogs GROUP BY breed_code ORDER BY CountOf ASC LIMIT 1 );
SELECT D.name AS dog_name, T.date_of_treatment AS treatment_date FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id WHERE D.breed_code = ( SELECT breed_code FROM ( SELECT breed_code, COUNT(*) as num FROM Dogs GROUP BY breed_code ) AS DogCount ORDER BY num ASC LIMIT 1 );
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Breeds.breed_name IN ( SELECT breed_name FROM Breeds GROUP BY breed_name HAVING COUNT(*) = ( SELECT COUNT(*) FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1 ) ) ORDER BY Treatments.date_of_treatment;
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.breed_code = ( SELECT breed_code FROM ( SELECT breed_code, COUNT(*) as cnt FROM Dogs GROUP BY breed_code ORDER BY cnt LIMIT 1 ) );
SELECT d.name, t.date_of_treatment FROM Dogs d JOIN Treatments t ON d.dog_id = t.dog_id WHERE d.breed_code = ( SELECT breed_code FROM ( SELECT breed_code, COUNT(*) as count FROM Dogs GROUP BY breed_code ORDER BY count LIMIT 1 ) );
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatment_Types ON Dogs.breed_code = Treatment_Types.treatment_type_code JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.breed_code = ( SELECT Dogs.breed_code FROM Dogs GROUP BY Dogs.breed_code HAVING COUNT(*) = ( SELECT MIN(count) FROM ( SELECT COUNT(*) as count FROM Dogs GROUP BY Dogs.breed_code ) ) ) ORDER BY Dogs.name, Treatments.date_of_treatment;
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.breed_code = (SELECT breed_code FROM Breeds GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1);
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id JOIN Breeds ON Dogs.breed_code = Breeds.breed_code WHERE Breeds.breed_name IN ( SELECT breed_name FROM ( SELECT breed_name, COUNT(*) as count FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code GROUP BY breed_name ORDER BY count ASC LIMIT 1 ) as subquery );
SELECT Dogs.name, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.breed_code = ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY COUNT(*) ASC LIMIT 1 );

SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Dogs JOIN Owners ON Dogs.owner_id = Owners.owner_id WHERE Owners.state = 'VA';

SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';
SELECT Owners.first_name, Dogs.name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Owners.state = 'VA';

SELECT Dogs.dog_id, Dogs.date_arrived, Dogs.date_departed, Treatments.date_of_treatment FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Treatments.date_of_treatment BETWEEN Dogs.date_arrived AND Dogs.date_departed;
SELECT t.date_of_treatment, d.date_arrived, d.date_departed FROM Treatments t JOIN Dogs d ON t.dog_id = d.dog_id ORDER BY t.date_of_treatment;
SELECT t.date_of_treatment FROM Treatments t JOIN Dogs d ON t.dog_id = d.dog_id WHERE d.date_arrived <= t.date_of_treatment AND (d.date_departed >= t.date_of_treatment OR d.date_departed IS NULL);
SELECT D.date_arrived, D.date_departed, T.date_of_treatment FROM Dogs D INNER JOIN Treatments T ON D.dog_id = T.dog_id;
SELECT D.dog_id, D.date_arrived, D.date_departed, T.date_of_treatment FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id WHERE D.date_arrived <= T.date_of_treatment AND D.date_departed >= T.date_of_treatment;
SELECT Dogs.date_arrived, Dogs.date_departed, Treatments.date_of_treatment FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT Dogs.date_arrived, Dogs.date_departed, Treatments.date_of_treatment FROM Dogs INNER JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT D.date_arrived, D.date_departed, T.date_of_treatment FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id;
SELECT D.date_arrived, D.date_departed, T.date_of_treatment FROM Dogs D JOIN Treatments T ON D.dog_id = T.dog_id;
SELECT D.date_arrived, D.date_departed, T.date_of_treatment FROM Dogs D LEFT JOIN Treatments T ON D.dog_id = T.dog_id;

SELECT dog_id, date_arrived, date_departed FROM Dogs;
SELECT Dogs.name, Dogs.date_arrived, Dogs.date_departed FROM Dogs;
SELECT D.dog_id, D.name, D.date_arrived, D.date_departed, (D.date_departed - D.date_arrived) AS treatment_period FROM Dogs D;
SELECT Dogs.dog_id, Dogs.date_arrived, Dogs.date_departed FROM Dogs;
SELECT D.name, D.date_arrived, D.date_departed FROM Dogs D;
SELECT Dogs.name, Dogs.date_arrived, Dogs.date_departed FROM Dogs;
SELECT d.dog_id, d.name, d.date_arrived, d.date_departed FROM Dogs d;
SELECT Dogs.name, Dogs.date_arrived, Dogs.date_departed FROM Dogs;
SELECT Dogs.name, Dogs.date_arrived, Dogs.date_departed FROM Dogs;
SELECT Dogs.name, Dogs.date_arrived, Dogs.date_departed FROM Dogs;

SELECT Owners.last_name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id WHERE Dogs.age = (SELECT MIN(Dogs.age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.date_of_birth DESC LIMIT 1;
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(Dogs.age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.age ASC LIMIT 1;
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);

SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.date_of_birth DESC LIMIT 1;
SELECT Owners.last_name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.date_of_birth DESC LIMIT 1;
SELECT Owners.last_name FROM Owners JOIN Dogs ON Dogs.owner_id = Owners.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners INNER JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.age = (SELECT MIN(age) FROM Dogs);
SELECT Owners.last_name FROM Owners JOIN Dogs ON Owners.owner_id = Dogs.owner_id ORDER BY Dogs.date_of_birth DESC LIMIT 1;

SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');

SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state = 'HI' OR state = 'WI';
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');
SELECT email_address FROM Professionals WHERE state IN ('HI', 'WI');

SELECT name, date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'yes';
SELECT name, date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Y';
SELECT name, date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Y';
SELECT name, date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Y';
SELECT name, date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'yes';
SELECT name, date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Y';
SELECT name, date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Y';
SELECT name, date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Y';
SELECT name, date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Y';
SELECT name, date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Y';

SELECT date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Y';
SELECT date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'yes';
SELECT date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Y';
SELECT date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Yes';
SELECT date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Y';
SELECT date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Yes';
SELECT date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Yes';
SELECT date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'yes';
SELECT date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Y';
SELECT date_arrived, date_departed FROM Dogs WHERE abandoned_yn = 'Y';

SELECT COUNT(DISTINCT Treatments.dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT Treatments.dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT Treatments.dog_id) FROM Treatments;
SELECT COUNT(DISTINCT Treatments.dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT Treatments.dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;

SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) As NumberOfDogs FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;

SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) AS professional_count FROM Professionals WHERE professional_id IN (SELECT professional_id FROM Treatments);
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;

SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) AS number_of_professionals FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT Professionals.professional_id) FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id;
SELECT COUNT(DISTINCT professional_id) AS number_of_professionals FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;
SELECT COUNT(DISTINCT professional_id) FROM Treatments;

SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';

SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';
SELECT first_name, last_name FROM Professionals WHERE city LIKE '%West%';

SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';

SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';
SELECT first_name, last_name FROM Owners WHERE state LIKE '%North%';

SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'yes' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'yes' AND age < ( SELECT AVG(age) FROM Dogs );
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);

SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs) AND abandoned_yn = 'yes';
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs) AND abandoned_yn = 'Y';
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND age < (SELECT AVG(age) FROM Dogs);
SELECT COUNT(*) FROM Dogs WHERE age < (SELECT AVG(age) FROM Dogs) AND abandoned_yn = 'Y';

SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;

SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;
SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1;

SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Yes' AND dog_id NOT IN ( SELECT dog_id FROM Treatments);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND dog_id NOT IN (SELECT dog_id FROM Treatments);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND dog_id NOT IN ( SELECT dog_id FROM Treatments );
SELECT COUNT(*) FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.abandoned_yn = 'Yes' AND Treatments.treatment_id IS NULL;
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'yes' AND dog_id NOT IN (SELECT dog_id FROM Treatments);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Yes' AND dog_id NOT IN (SELECT dog_id FROM Treatments);
SELECT COUNT(*) FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE abandoned_yn = 'Y' AND treatment_id IS NULL;
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'Y' AND dog_id NOT IN (SELECT dog_id FROM Treatments);
SELECT COUNT(*) FROM Dogs WHERE abandoned_yn = 'yes' AND dog_id NOT IN (SELECT dog_id FROM Treatments);
SELECT COUNT(DISTINCT Dogs.dog_id) FROM Dogs LEFT JOIN Treatments ON Dogs.dog_id = Treatments.dog_id WHERE Dogs.abandoned_yn = 'Y' AND Treatments.treatment_id IS NULL;

SELECT COUNT(DISTINCT Treatments.dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) as Number_of_Dogs FROM Treatments;
SELECT COUNT(DISTINCT dog_id) AS number_of_dogs FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) FROM Treatments;
SELECT COUNT(DISTINCT Dogs.dog_id) FROM Dogs JOIN Treatments ON Dogs.dog_id = Treatments.dog_id;
SELECT COUNT(DISTINCT Treatments.dog_id) FROM Treatments;
SELECT COUNT(DISTINCT dog_id) as number_of_dogs FROM Treatments;

SELECT COUNT(DISTINCT O.owner_id) AS Total_Owners_Without_Abandoned_Dogs FROM Owners O LEFT JOIN Dogs D ON O.owner_id = D.owner_id WHERE D.abandoned_yn = 'N' OR D.abandoned_yn IS NULL;
SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id AND Dogs.abandoned_yn = 'Y' WHERE Dogs.owner_id IS NULL;
SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.abandoned_yn != 'Y' OR Dogs.abandoned_yn IS NULL;
SELECT COUNT(DISTINCT o.owner_id) as Owner_count FROM Owners o LEFT JOIN Dogs d ON o.owner_id = d.owner_id WHERE (d.abandoned_yn is NULL or d.abandoned_yn = 'N');
SELECT count(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.abandoned_yn != 'yes' OR Dogs.dog_id IS NULL;
SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.abandoned_yn = 'n' OR Dogs.abandoned_yn IS NULL;
SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.abandoned_yn != 'Y' OR Dogs.dog_id IS NULL;
SELECT COUNT(DISTINCT o.owner_id) FROM Owners o LEFT OUTER JOIN Dogs d ON o.owner_id = d.owner_id WHERE d.abandoned_yn IS NULL OR d.abandoned_yn = 'N';
SELECT COUNT(DISTINCT o.owner_id) FROM Owners o LEFT JOIN Dogs d ON o.owner_id = d.owner_id WHERE d.abandoned_yn = 'no' OR d.abandoned_yn IS NULL;
SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.abandoned_yn = 'no' OR Dogs.dog_id IS NULL;

SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.abandoned_yn = 'no' OR Dogs.abandoned_yn IS NULL;
SELECT COUNT(DISTINCT o.owner_id) FROM Owners o LEFT JOIN Dogs d ON o.owner_id = d.owner_id WHERE d.abandoned_yn IS NULL OR d.abandoned_yn = 'N';
SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs on Owners.owner_id = Dogs.owner_id WHERE Dogs.abandoned_yn = 'N' or Dogs.abandoned_yn IS NULL;
SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.abandoned_yn = 'N' OR Dogs.abandoned_yn IS NULL;
SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.abandoned_yn != 'yes' OR Dogs.abandoned_yn IS NULL;
SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.abandoned_yn != 'Y' OR Dogs.abandoned_yn IS NULL;
SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners WHERE Owners.owner_id NOT IN (SELECT Dogs.owner_id FROM Dogs WHERE Dogs.abandoned_yn = 'Y');
SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.abandoned_yn IS NULL OR Dogs.abandoned_yn = 'N';
SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.abandoned_yn = 'N' OR Dogs.abandoned_yn IS NULL;
SELECT COUNT(DISTINCT Owners.owner_id) FROM Owners LEFT JOIN Dogs ON Owners.owner_id = Dogs.owner_id WHERE Dogs.abandoned_yn = 'N' OR Dogs.abandoned_yn IS NULL;

SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT DISTINCT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT DISTINCT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN ( SELECT DISTINCT professional_id FROM Treatments );
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT DISTINCT professional_id FROM Treatments);

SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments );
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT DISTINCT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT DISTINCT professional_id FROM Treatments);
SELECT COUNT(*) FROM Professionals WHERE professional_id NOT IN (SELECT professional_id FROM Treatments);

SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;

SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 1;
SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT Dogs.name, Dogs.age, Dogs.weight FROM Dogs WHERE Dogs.abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;
SELECT name, age, weight FROM Dogs WHERE abandoned_yn = 1;

SELECT AVG(age) FROM Dogs WHERE abandoned_yn = 'Yes';
SELECT AVG(age) FROM Dogs WHERE abandoned_yn = 'Yes';
SELECT AVG(age) AS average_age FROM Dogs WHERE abandoned_yn = 'Y';
SELECT AVG(age) as AverageAge FROM Dogs WHERE abandoned_yn = 'Yes';
SELECT AVG(age) as average_age FROM Dogs WHERE abandoned_yn = 'yes';
SELECT AVG(age) AS average_age FROM Dogs WHERE abandoned_yn = 'Y';
SELECT AVG(age) FROM Dogs WHERE abandoned_yn = 'yes';
SELECT AVG(age) as average_age FROM Dogs WHERE abandoned_yn = 'yes';
SELECT AVG(age) as Average_Age FROM Dogs WHERE abandoned_yn = 'Yes';
SELECT AVG(age) as Average_Age FROM Dogs WHERE abandoned_yn = 'Y';

SELECT AVG(age) as Average_Age FROM Dogs WHERE abandoned_yn = 'Y';
SELECT AVG(age) AS average_age FROM Dogs WHERE abandoned_yn = 'Y';
SELECT AVG(age) AS average_age_abandoned_dogs FROM Dogs WHERE abandoned_yn = 'yes';
SELECT AVG(age) AS average_age FROM Dogs WHERE abandoned_yn = 'yes';
SELECT AVG(age) AS average_age FROM Dogs WHERE abandoned_yn = 'Y';
SELECT AVG(age) AS Average_Age FROM Dogs WHERE abandoned_yn = 'Yes';
SELECT AVG(age) as average_age_of_abandoned_dogs FROM Dogs WHERE abandoned_yn = 'Y';
SELECT AVG(age) as AverageAge FROM Dogs WHERE abandoned_yn = 'Y';
SELECT AVG(age) AS average_age FROM Dogs WHERE abandoned_yn = 'yes';
SELECT AVG(age) FROM Dogs WHERE abandoned_yn = 'Y';

SELECT MAX(age) AS oldest_dog_age FROM Dogs;
SELECT MAX(age) AS oldest_dog_age FROM Dogs;
SELECT MAX(age) AS Oldest_Dog FROM Dogs;
SELECT MAX(age) AS oldest_dog_age FROM Dogs;
SELECT MAX(age) AS oldest_dog_age FROM Dogs;
SELECT MAX(age) AS oldest_dog_age FROM Dogs;
SELECT MAX(age) AS Oldest_Dog_Age FROM Dogs;
SELECT MAX(age) as oldest_dog_age FROM Dogs;
SELECT MAX(age) as oldest_dog_age FROM Dogs;
SELECT MAX(age) AS oldest_dog_age FROM Dogs;

SELECT MAX(age) FROM Dogs;
SELECT MAX(age) FROM Dogs;
SELECT MAX(age) AS oldest_dog_age FROM Dogs;
SELECT MAX(age) as oldest_dog_age FROM Dogs;
SELECT MAX(age) AS oldest_dog_age FROM Dogs;
SELECT MAX(age) AS "Oldest Dog Age" FROM Dogs;
SELECT MAX(age) as oldest_dog_age FROM Dogs;
SELECT MAX(age) FROM Dogs;
SELECT MAX(age) FROM Dogs;
SELECT MAX(age) FROM Dogs;

SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;

SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;
SELECT charge_type, charge_amount FROM Charges;

SELECT MAX(charge_amount) AS Most_Expensive_Charge FROM Charges;
SELECT MAX(charge_amount) AS Most_Expensive_Charge FROM Charges;
SELECT MAX(charge_amount) AS Most_Expensive_Charge FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) AS most_expensive_charge FROM Charges;
SELECT MAX(charge_amount) AS most_expensive_charge FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) AS Most_Expensive_Cost FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) AS Most_Expensive_Charge FROM Charges;

SELECT MAX(charge_amount) AS most_expensive_charge FROM Charges;
SELECT MAX(charge_amount) FROM Charges;
SELECT MAX(charge_amount) AS Most_Expensive_Charge FROM Charges;
SELECT MAX(charge_amount) AS most_expensive_charge FROM Charges;
SELECT MAX(charge_amount) AS maximum_charge_amount FROM Charges;
SELECT MAX(charge_amount) AS highest_charge FROM Charges;
SELECT MAX(charge_amount) AS Most_Expensive_Charge FROM Charges;
SELECT MAX(charge_amount) AS Max_Charge FROM Charges;
SELECT MAX(charge_amount) AS max_charge_amount FROM Charges;
SELECT MAX(charge_amount) AS max_charge_amount FROM Charges;

SELECT email_address, first_name FROM Professionals;
SELECT email_address, first_name, last_name FROM Professionals;
SELECT email_address, first_name FROM Professionals;
SELECT email_address, first_name, last_name FROM Professionals;
SELECT email_address, first_name FROM Professionals;
SELECT email_address, first_name, last_name FROM Professionals;
SELECT email_address, first_name FROM Professionals;
SELECT email_address, first_name FROM Professionals;
SELECT email_address, first_name FROM Professionals;
SELECT email_address, first_name, last_name FROM Professionals;

SELECT email_address, first_name, last_name FROM Professionals;
SELECT first_name, last_name, email_address FROM Professionals;
SELECT first_name, last_name, email_address FROM Professionals;
SELECT email_address, first_name, last_name FROM Professionals;
SELECT first_name, last_name, email_address FROM Professionals;
SELECT first_name, last_name, email_address FROM Professionals;
SELECT first_name, last_name, email_address FROM Professionals;
SELECT email_address, first_name, last_name FROM Professionals;
SELECT first_name, last_name, email_address FROM Professionals;
SELECT first_name, last_name, email_address FROM Professionals;

SELECT Breeds.breed_name, Sizes.size_description FROM Breeds CROSS JOIN Sizes;
SELECT breed_name, size_description FROM Breeds, Sizes;
SELECT Breeds.breed_name, Sizes.size_description FROM Breeds CROSS JOIN Sizes;
SELECT Breeds.breed_name, Sizes.size_description FROM Breeds CROSS JOIN Sizes;
SELECT breed_name, size_description FROM Breeds CROSS JOIN Sizes;
SELECT breed_name, size_description FROM Breeds, Sizes;
SELECT breed_name, size_description FROM Breeds CROSS JOIN Sizes;
SELECT Breeds.breed_name, Sizes.size_description FROM Breeds, Sizes;
SELECT Breeds.breed_name, Sizes.size_description FROM Breeds CROSS JOIN Sizes;
SELECT Breeds.breed_name, Sizes.size_description FROM Breeds CROSS JOIN Sizes;

SELECT DISTINCT Breeds.breed_name, Sizes.size_description FROM Dogs INNER JOIN Breeds ON Dogs.breed_code = Breeds.breed_code INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT DISTINCT Breeds.breed_name, Sizes.size_description FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT DISTINCT Breeds.breed_name, Sizes.size_description FROM Dogs INNER JOIN Breeds ON Dogs.breed_code = Breeds.breed_code INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT DISTINCT Breeds.breed_name, Sizes.size_description FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT DISTINCT Breeds.breed_name, Sizes.size_description FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT DISTINCT Breeds.breed_name, Sizes.size_description FROM Dogs INNER JOIN Breeds ON Dogs.breed_code = Breeds.breed_code INNER JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT DISTINCT Breeds.breed_name, Sizes.size_description FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT DISTINCT Breeds.breed_name, Sizes.size_description FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT DISTINCT Breeds.breed_name, Sizes.size_description FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code;
SELECT DISTINCT Breeds.breed_name, Sizes.size_description FROM Dogs JOIN Breeds ON Dogs.breed_code = Breeds.breed_code JOIN Sizes ON Dogs.size_code = Sizes.size_code;

SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id INNER JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;

SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Treatments INNER JOIN Professionals ON Treatments.professional_id = Professionals.professional_id INNER JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals JOIN Treatments ON Professionals.professional_id = Treatments.professional_id JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;
SELECT Professionals.first_name, Professionals.last_name, Treatment_Types.treatment_type_description FROM Professionals INNER JOIN Treatments ON Professionals.professional_id = Treatments.professional_id INNER JOIN Treatment_Types ON Treatments.treatment_type_code = Treatment_Types.treatment_type_code;

SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;

SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;
SELECT COUNT(*) FROM singer;

SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;

SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;
SELECT Name FROM singer ORDER BY Birth_Year DESC;

SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;

SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;
SELECT Birth_Year, Citizenship FROM singer;

SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';

SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';
SELECT Name FROM singer WHERE Citizenship != 'French';

SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;

SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;
SELECT Name FROM singer WHERE Birth_Year <= 1948;

SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer WHERE Birth_Year = ( SELECT MAX(Birth_Year) FROM singer );
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);

SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer ORDER BY Birth_Year DESC LIMIT 1;
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer ORDER BY Birth_Year DESC LIMIT 1;
SELECT Name FROM singer ORDER BY Birth_Year DESC LIMIT 1;
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);
SELECT Name FROM singer WHERE Birth_Year = (SELECT MAX(Birth_Year) FROM singer);

SELECT Citizenship, COUNT(*) as NumberOfSingers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) AS Number_Of_Singers FROM singer GROUP BY Citizenship;

SELECT Citizenship, COUNT(Singer_ID) as Num_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as NumberOfSingers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(Singer_ID) as NumberOfSingers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) AS Number_of_Singers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) as NumberOfSingers FROM singer GROUP BY Citizenship;
SELECT Citizenship, COUNT(*) AS NumberOfSingers FROM singer GROUP BY Citizenship;

SELECT Citizenship, COUNT(*) as Number_of_Singers FROM singer GROUP BY Citizenship ORDER BY Number_of_Singers DESC LIMIT 1;
SELECT Citizenship, COUNT(*) AS count FROM singer GROUP BY Citizenship ORDER BY count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Frequency FROM singer GROUP BY Citizenship ORDER BY Frequency DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) AS Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as count FROM singer GROUP BY Citizenship ORDER BY count DESC LIMIT 1;

SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) AS Frequency FROM singer GROUP BY Citizenship ORDER BY Frequency DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) AS Number FROM singer GROUP BY Citizenship ORDER BY Number DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as Count FROM singer GROUP BY Citizenship ORDER BY Count DESC LIMIT 1;
SELECT Citizenship, COUNT(*) as count FROM singer GROUP BY Citizenship ORDER BY count DESC LIMIT 1;

SELECT Citizenship, MAX(Net_Worth_Millions) as Max_Net_Worth FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) as Highest_Net_Worth FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) as Highest_Net_worth FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) AS Highest_Net_Worth FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) as Highest_Net_Worth FROM singer GROUP BY Citizenship;

SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) as 'Highest Net Worth' FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) as highest_net_worth FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) AS Highest_Net_Worth FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;
SELECT Citizenship, MAX(Net_Worth_Millions) FROM singer GROUP BY Citizenship;

SELECT Title FROM song ORDER BY Sales DESC;
SELECT Title FROM song ORDER BY Sales DESC;
SELECT Title FROM song ORDER BY Sales DESC;
SELECT Title FROM song WHERE Sales = (SELECT MAX(Sales) FROM song);
SELECT Title FROM song WHERE Sales = (SELECT MAX(Sales) FROM song);
SELECT Title FROM song WHERE Sales = (SELECT MAX(Sales) FROM song);
SELECT Title FROM song WHERE Sales = (SELECT MAX(Sales) FROM song);
SELECT Title FROM song ORDER BY Sales DESC;
SELECT Title FROM song ORDER BY Sales DESC;
SELECT Title FROM song ORDER BY Sales DESC;

SELECT Title FROM song WHERE Sales = (SELECT MAX(Sales) FROM song);
SELECT title FROM song ORDER BY sales DESC;
SELECT Title FROM song WHERE Sales = (SELECT MAX(Sales) FROM song);
SELECT Title FROM song ORDER BY Sales DESC;
SELECT Title FROM song WHERE Sales = (SELECT MAX(Sales) FROM song);
SELECT Title FROM song ORDER BY Sales DESC;
SELECT song.Title FROM song ORDER BY song.Sales DESC;
SELECT Title FROM song WHERE Sales = (SELECT MAX(Sales) FROM song);
SELECT Title FROM song ORDER BY Sales DESC;
SELECT Title FROM song ORDER BY Sales DESC;

SELECT DISTINCT s.Name FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID WHERE so.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT s.Name FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID WHERE so.Sales > 300000;
SELECT DISTINCT(singer.Name) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT s.Name FROM singer as s JOIN song as so ON s.Singer_ID = so.Singer_ID WHERE so.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT s.Name FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID WHERE so.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;

SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer INNER JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;
SELECT DISTINCT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Sales > 300000;

SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1 );
SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1 );
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name HAVING COUNT(song.Song_ID) > 1;
SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1 );
SELECT s.Name FROM singer s JOIN song so ON s.Singer_ID = so.Singer_ID GROUP BY s.Name HAVING COUNT(so.Song_ID) > 1;
SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1 );
SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1 );
SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1 );
SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1);
SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1 );

SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1 );
SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1 );
SELECT Name FROM singer WHERE Singer_ID IN (SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1);
SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1 );
SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(*) > 1);
SELECT s.Name FROM singer AS s JOIN song AS so ON s.Singer_ID = so.Singer_ID GROUP BY s.Name HAVING COUNT(so.Song_ID) > 1;
SELECT singer.Name FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name HAVING COUNT(song.Song_ID) > 1;
SELECT singer.Name FROM singer WHERE singer.Singer_ID IN ( SELECT song.Singer_ID FROM song GROUP BY song.Singer_ID HAVING COUNT(song.Song_ID) > 1 );
SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1 );
SELECT Name FROM singer WHERE Singer_ID IN ( SELECT Singer_ID FROM song GROUP BY Singer_ID HAVING COUNT(Song_ID) > 1 );

SELECT s.Name, MAX(so.Highest_Position) FROM singer as s JOIN song as so ON s.Singer_ID = so.Singer_ID GROUP BY s.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON song.Singer_ID = singer.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer INNER JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;

SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;
SELECT s.Name, MAX(so.Highest_Position) FROM singer AS s JOIN song AS so ON s.Singer_ID = so.Singer_ID GROUP BY s.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;
SELECT s.Name, MAX(song.Highest_Position) as Max_Highest_Position FROM singer s JOIN song ON s.Singer_ID = song.Singer_ID GROUP BY s.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;
SELECT s.Name, MAX(so.Highest_Position) as Max_Highest_Position FROM singer as s JOIN song as so ON s.Singer_ID = so.Singer_ID GROUP BY s.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;
SELECT singer.Name, MAX(song.Highest_Position) FROM singer JOIN song ON singer.Singer_ID = song.Singer_ID GROUP BY singer.Name;

SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);

SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song) ```;
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);
SELECT Name AS sname FROM singer LEFT JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Singer_ID IS NULL;
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song);
SELECT Name FROM singer LEFT JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Singer_ID IS NULL;
SELECT Name FROM singer LEFT JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Song_ID IS NULL ```;
SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song) ```;
SELECT Name FROM singer LEFT JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Song_ID IS NULL;
SELECT Name FROM singer LEFT JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Song_ID IS NULL;
SELECT Name FROM singer LEFT JOIN song ON singer.Singer_ID = song.Singer_ID WHERE song.Song_ID IS NULL ```;

SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;

SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT singer.Citizenship FROM singer WHERE singer.Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;
SELECT DISTINCT Citizenship FROM singer WHERE Birth_Year <= 1945;

